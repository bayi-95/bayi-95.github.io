<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>秋殇の博客</title>
        <link>https://bayi-95.eu.org</link>
        <description>undefined</description>
        <lastBuildDate>Wed, 17 Jul 2024 06:25:34 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <copyright>Copyright © 2020-present bayi-95</copyright>
        <item>
            <title><![CDATA[我的日志]]></title>
            <link>https://bayi-95.eu.org/pages/logs/</link>
            <guid>https://bayi-95.eu.org/pages/logs/</guid>
            <pubDate>Tue, 16 Jul 2024 03:43:45 GMT</pubDate>
            <description><![CDATA[日记、记录、感悟]]></description>
            <content:encoded><![CDATA[<h1 id="我的日志" tabindex="-1">我的日志 <a class="header-anchor" href="#我的日志" aria-label="Permalink to &quot;我的日志&quot;">&ZeroWidthSpace;</a></h1>
<h3 id="_7-16-24" tabindex="-1">7/16/24 <a class="header-anchor" href="#_7-16-24" aria-label="Permalink to &quot;7/16/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>Git</code> 的常用命令集合</p>
<p><img src="/images/blog/log/git-cheat-sheet.png" alt="" loading="lazy"></p>
<h3 id="_6-21-24" tabindex="-1">6/21/24 <a class="header-anchor" href="#_6-21-24" aria-label="Permalink to &quot;6/21/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ docs: <code>JavaScript</code> 模块，新增一篇文章 <a href="/pages/javascript/计算展示密码强度.html">计算展示密码强度</a>。</p>
<h3 id="_6-11-24" tabindex="-1">6/11/24 <a class="header-anchor" href="#_6-11-24" aria-label="Permalink to &quot;6/11/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ docs: <code>JavaScript</code> 模块，新增一篇文章 <a href="/pages/javascript/如何用JavaScript画一棵树.html">如何用JavaScript画一棵树</a>。</p>
<h3 id="_5-27-24" tabindex="-1">5/27/24 <a class="header-anchor" href="#_5-27-24" aria-label="Permalink to &quot;5/27/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>WebDAV</code> 是一种互联网方法，应用此方法可以在服务器上划出一块存储空间，可以使用用户名和密码来控制访问，让用户可以直接存储、下载、编辑文件。</p>
<p>比如：你在用一个笔记软件，想给这个笔记做个云备份，或者是想在其他设备上实时同步笔记。但是这个笔记软件本身不提供云同步空间，这时不就没辙了？</p>
<p>没关系，如果这个软件可以让你设置 WebDAV，那么你就可以通过 WebDAV 把数据传输到坚果云，由坚果云帮助你实现同步、共享、备份。</p>
<p>而平时你可以正常从笔记软件打开同步的内容，无需每次都打开坚果云。</p>
<h3 id="_5-26-24" tabindex="-1">5/26/24 <a class="header-anchor" href="#_5-26-24" aria-label="Permalink to &quot;5/26/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>Fluent Reader</code> 是一款支持 RSS 订阅查看的阅读器，感觉挺好用的。</p>
<p>目前 RSS 订阅了自己的<a href="https://bayi-95.eu.org/feed.rss" target="_blank" rel="noreferrer">博客</a>和 <a href="https://www.supertechfans.com/cn/index.xml" target="_blank" rel="noreferrer">HackerNews</a>，每天有内容的更新推送。</p>
<p>打算手机客户端也装上，方便查看。</p>
<h3 id="_3-6-24" tabindex="-1">3/6/24 <a class="header-anchor" href="#_3-6-24" aria-label="Permalink to &quot;3/6/24&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ docs: <code>情感</code> 模块，新增两篇文章 <a href="/pages/idea/亲密关系.html">亲密关系</a>，<a href="/pages/idea/情绪价值.html">情绪价值</a>。</p>
<h3 id="_6-25-23" tabindex="-1">6/25/23 <a class="header-anchor" href="#_6-25-23" aria-label="Permalink to &quot;6/25/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: 添加 <code>Google Translate</code> 支持，需科学上网才行，能看到页面右下角的图标，可以切换语言，在线翻译</p>
<h3 id="_6-20-23" tabindex="-1">6/20/23 <a class="header-anchor" href="#_6-20-23" aria-label="Permalink to &quot;6/20/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat:</p>
<ol>
<li>添加 <code>conventional-changelog</code> 生成 <code>CHANGELOG</code></li>
<li>添加 <code>standard-version</code> 版本管理</li>
<li>添加 <code>commitlint</code> 校验</li>
</ol>
<h3 id="_6-19-23" tabindex="-1">6/19/23 <a class="header-anchor" href="#_6-19-23" aria-label="Permalink to &quot;6/19/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ ci: 每周六 8 点，Github Action 定时获取最新周刊</p>
<h3 id="_6-14-23" tabindex="-1">6/14/23 <a class="header-anchor" href="#_6-14-23" aria-label="Permalink to &quot;6/14/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: blog 新增 周刊模块 &amp; 评论功能</p>
<p>来源：</p>
<ol>
<li><a href="https://github.com/plantree/ruanyf-weekly" target="_blank" rel="noreferrer">ruanyf-weekly</a></li>
<li><a href="https://giscus.app/zh-CN" target="_blank" rel="noreferrer">giscus 评论系统</a></li>
</ol>
<p>∆ Node 调试</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Node.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 提供了内置的调试器，可以在命令行中启动脚本时进行调试。具体步骤如下：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 在命令行中使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --inspect-brk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 命令启动</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Node.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 脚本，例如：node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --inspect-brk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> index.js。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 打开</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Chrome</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 浏览器，并在地址栏中输入</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> chrome://inspect，然后按下</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 键。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">3.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 在浏览器的页面中，单击</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "Open dedicated DevTools for Node"</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 按钮，打开开发者工具。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">4.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 在开发者工具的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Sources</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 面板中打开脚本文件，可以在代码中设置断点或执行单行代码。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">5.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 单击页面中的绿色</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "Resume script execution"</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 按钮，继续运行脚本。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">6.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 此外，Node.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 还支持使用第三方调试器，例如</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> VS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 和</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> WebStorm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 等，这些调试器提供更友好的界面和更强大的调试功能</span></span></code></pre>
</div><h3 id="_6-12-23" tabindex="-1">6/12/23 <a class="header-anchor" href="#_6-12-23" aria-label="Permalink to &quot;6/12/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: 文章列表 新增标签过滤文章功能</p>
<h3 id="_6-8-23" tabindex="-1">6/8/23 <a class="header-anchor" href="#_6-8-23" aria-label="Permalink to &quot;6/8/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ docs: 新增 <a href="/pages/python/index.html">Python 速成手册</a></p>
<p>∆ feat: 支持数学公式展示</p>
<p><strong>来源</strong>：<a href="https://docs.mathjax.org/en/latest/basic/mathjax.html" target="_blank" rel="noreferrer">Mathjax 数学公式解析</a></p>
<h3 id="_6-1-23" tabindex="-1">6/1/23 <a class="header-anchor" href="#_6-1-23" aria-label="Permalink to &quot;6/1/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ chore: 支持 docker 使用 algolia 爬取网站内容功能</p>
<h3 id="_5-26-23" tabindex="-1">5/26/23 <a class="header-anchor" href="#_5-26-23" aria-label="Permalink to &quot;5/26/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat(FourSeasons): 四季组件，新增夏天模块 -- 主题是：太阳、风车、树、云 和 风；等到 6 月份了，会自己切换 ：）</p>
<h3 id="_5-24-23" tabindex="-1">5/24/23 <a class="header-anchor" href="#_5-24-23" aria-label="Permalink to &quot;5/24/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ idea: 觉得下一代需要早些接触学习编程技能，随着 互联网、AI 技术的发展，<code>Coding</code> 将会成为生活中必备的基本技能之一，可以去<a href="https://studio.code.org/courses" target="_blank" rel="noreferrer">网站</a>学习。</p>
<p>∆ 人们一旦擅长了某件事情那么就会对此充满激情，&quot;如果你热衷于编程，我强烈推荐你阅读 Steve McConnell 编写的《Code Complete》，它将永远改变你的编程思维&quot;。</p>
<p>∆ 看新闻报道，要看到新闻背后辛酸苦辣的故事，因为新闻报导总是很喜欢忽略很多真实的细节</p>
<details class="details custom-block"><summary>阅读专栏</summary>
<ol>
<li><a href="https://x-team.com/blog/10-secrets-to-becoming-a-great-remote-developer/" target="_blank" rel="noreferrer">10 个诀窍助你成为厉害的远程开发人员</a></li>
<li><a href="https://www.36kr.com/p/1641873735681" target="_blank" rel="noreferrer">PM 的必备技能 —— 如何不被 RD 们嫌弃</a></li>
<li><a href="https://www.html5tricks.com/sth-about-money.html" target="_blank" rel="noreferrer">腾讯前员工创业笔记：那些跟钱有关的事儿</a></li>
<li><a href="https://www.html5tricks.com/50-wan-enginer.html" target="_blank" rel="noreferrer">做挖渠道的人啊 挖呀挖</a></li>
</ol>
</details>
<details class="details custom-block"><summary>成为好的程序员</summary>
<ol>
<li>好的程序员知道要在解决一个问题之前先做研究；</li>
<li>渴望深入问题并找出错误的根源；</li>
<li>研究一下源码；</li>
<li>采取行动，立即着手解决，兴奋地发现并处理问题；</li>
<li>防范未然，并精确的解决大部分问题；</li>
<li>善于交流，简洁明了地表达观点；精炼的电子邮件、优雅的报告或者仅仅是高效的备忘录；会把时间花在如何将他们的观点更好地表达出来上面。如果没有人能够理解你写的代码，又有什么意义呢？无论使用什么媒介；</li>
<li>激情、感兴趣、好奇被吸引、痴迷于️专注；</li>
<li>具有良好的沟通反馈习惯，熟悉业务需求，喜欢高效地完成自己的工作、编写清晰优质的代码，可以主动提供帮助、分担一定的任务，具有一定的项目管理经验。</li>
</ol>
</details>
<details class="details custom-block"><summary>如何开会议更高效</summary>
<ol>
<li>会议绝不该超过一小时；</li>
<li>每个会议都应该有一个清晰的目标声明；</li>
<li>在开会之前预先做好功课；</li>
<li>每一个出现在会议上的人都应该是因为他们想要在那里，或者他们需要在那里。一种让你自己对会议负责的可靠方法就是让每个人自行决定是否要参加你的会议。想象一下举行一次大家都真正想要参加的会议，那一定是因为真的很有用，或者很有趣，或者很娱乐；</li>
<li>在会议结束时概括一下待办事项；</li>
<li>快速干活，少说废话，抓住工作的重点。</li>
</ol>
</details>
<h3 id="_5-18-23" tabindex="-1">5/18/23 <a class="header-anchor" href="#_5-18-23" aria-label="Permalink to &quot;5/18/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ fix: 天气组件再次进入页面时，渲染动画异常的问题</p>
<h3 id="_5-17-23" tabindex="-1">5/17/23 <a class="header-anchor" href="#_5-17-23" aria-label="Permalink to &quot;5/17/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>pnpm</code> 管理 <code>node</code> 版本</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-c0x_b" id="tab-jWsi349" checked><label for="tab-jWsi349">windows</label><input type="radio" name="group-c0x_b" id="tab-Y1Wxad9" ><label for="tab-Y1Wxad9">macOS</label></div><div class="blocks">
<div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 1. 查看 pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">WinGet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 2. 安装 pnpm 通过 id</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">WinGet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm.pnpm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 3. 安装 node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> list</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 4. 切换 node 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 5. 卸载 node 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> remove</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 6. 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span></code></pre>
</div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 1. 安装 pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 2. 安装 node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> list</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 3. 切换 node 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 4. 卸载 node 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> remove</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 5. 降低 pnpm 使用版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> enable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> prepare</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm@7.32.4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --activate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 6. 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -v</span></span></code></pre>
</div></div></div>
<h3 id="_5-10-23" tabindex="-1">5/10/23 <a class="header-anchor" href="#_5-10-23" aria-label="Permalink to &quot;5/10/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ refactor: 动态注册全局组件</p>
<p>∆ chore: 修改项目开发环境启动时，自动在浏览器打开 tab</p>
<p>∆ feat: 上线一款 h5 小游戏 —— <a href="/pages/javascript/super-marie.html">超级玛丽 · Simple</a>，tips: 对手残党不是那么友好 ：）</p>
<h3 id="_5-5-23" tabindex="-1">5/5/23 <a class="header-anchor" href="#_5-5-23" aria-label="Permalink to &quot;5/5/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ update: 修改天气组件，天气数据过接口 api 获取</p>
<p><strong>来源</strong>：<a href="https://api.seniverse.com/v3/weather/now.json" target="_blank" rel="noreferrer">心知天气-天气实况</a></p>
<h3 id="_4-28-23" tabindex="-1">4/28/23 <a class="header-anchor" href="#_4-28-23" aria-label="Permalink to &quot;4/28/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: 新增天气组件，是很漂亮的 css 动效</p>
<h3 id="_4-27-23" tabindex="-1">4/27/23 <a class="header-anchor" href="#_4-27-23" aria-label="Permalink to &quot;4/27/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: 添加首页的加载动画 loading</p>
<p>∆ forefront 聊天 AI 支持 GPT-3.5 / 4.0 - <a href="https://chat.forefront.ai/" target="_blank" rel="noreferrer">https://chat.forefront.ai/</a></p>
<h3 id="_4-18-23" tabindex="-1">4/18/23 <a class="header-anchor" href="#_4-18-23" aria-label="Permalink to &quot;4/18/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ blog: 添加「四季」组件，用于页面渲染，已支持：春天 - 樱花飘落 🌸</p>
<p>∆ chore: 项目添加 husky + lint-staged 代码格式化处理</p>
<h3 id="_4-13-23" tabindex="-1">4/13/23 <a class="header-anchor" href="#_4-13-23" aria-label="Permalink to &quot;4/13/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 计划: 思维模型、心理学进修、护工护理、营养师</p>
<p>∆ blog: 文章列表，添加置顶功能</p>
<p>∆ update: 修改博客的部署位置</p>
<h3 id="_3-29-23" tabindex="-1">3/29/23 <a class="header-anchor" href="#_3-29-23" aria-label="Permalink to &quot;3/29/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ blog: 文章列表 - 新增 <a href="/pages/idea/爱和治愈自己.html">爱和治愈自己</a>、<a href="/pages/javascript/前端commit规范.html">前端 commit 提交规范</a></p>
<h3 id="_3-28-23" tabindex="-1">3/28/23 <a class="header-anchor" href="#_3-28-23" aria-label="Permalink to &quot;3/28/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ blog: 新增 小彩蛋 —— 恐龙快跑小游戏</p>
<p>∆ 查看依赖包</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># npm 全局依赖包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --depth=0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># brew 查看安装的依赖包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ls</span></span></code></pre>
</div><p><strong>来源</strong>：<a href="https://www.cnblogs.com/undefined000/p/trex_1.html" target="_blank" rel="noreferrer">chrome 恐龙小游戏源码研究</a></p>
<h3 id="_3-7-23" tabindex="-1">3/7/23 <a class="header-anchor" href="#_3-7-23" aria-label="Permalink to &quot;3/7/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ style(component): [CurtBirdButton] 响应式样式修改</p>
<p>∆ blog：新增 思维模型 - 金字塔原理</p>
<h3 id="_3-6-23" tabindex="-1">3/6/23 <a class="header-anchor" href="#_3-6-23" aria-label="Permalink to &quot;3/6/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ feat: 新增组件 <code>CurtBirdButton</code>，首页跳转按钮替换为此组件</p>
<p>∆ 新增：思维模型 - 刻意学习</p>
<p><strong>来源</strong>：<a href="https://mp.weixin.qq.com/s?__biz=Mzg3OTYzMDkzMg==&amp;mid=2247493043&amp;idx=1&amp;sn=197aca704daa784341a8dd8a5c9d0b73&amp;chksm=cf032a88f874a39e712f7a2f8c29af9c4c371270a50ba49d0628fb07353cd18e6a4e6702c069&amp;scene=178&amp;cur_album_id=2150438405699174401#rd" target="_blank" rel="noreferrer">CSS 的快乐：画一个可爱的三只小鸟 Button</a></p>
<h3 id="_2-20-23" tabindex="-1">2/20/23 <a class="header-anchor" href="#_2-20-23" aria-label="Permalink to &quot;2/20/23&quot;">&ZeroWidthSpace;</a></h3>
<p>看到一篇文章描述成熟的亲密关系，有受到启发，摘要：</p>
<ol>
<li>我为我的人生负责，你为你的人生负责，但是我们俩的人生交织在一起，所以我会充分注意和理解我们对于彼此的影响。</li>
<li>我的存在价值，不会因为对方喜欢或不喜欢我，对我好或对我不好有所增减和改变，相反，它始终都在那里。</li>
<li>虽然，你是你，我是我，但是你的一举一动会影响到我，我的一举一动也会影响到你。 爱虽然不是控制，但爱也不是放任，爱是全心全意为了所爱之人的福祉考虑，为其做尽可能的事。 所以，我爱你，既是我的事，也与你有关。 当一个人，最终进入到“他人意识阶段”后，Ta 会成为一个非常好的恋爱对象，也会成为一个非常好的结婚伴侣。</li>
</ol>
<p><strong>来源</strong>：<a href="https://mp.weixin.qq.com/s/v0Ird2Pcle6QBnkv_fQCAg" target="_blank" rel="noreferrer">写在情人节：真正成熟的亲密关系是什么样的？</a></p>
<h3 id="_2-8-23" tabindex="-1">2/8/23 <a class="header-anchor" href="#_2-8-23" aria-label="Permalink to &quot;2/8/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ fix: <code>algolia</code> 因为 lang 导致无搜索结果的问题，修改 algolia.json 里关于 lang 的设置</p>
<p><strong>来源</strong>：<a href="https://zhuanlan.zhihu.com/p/542544442" target="_blank" rel="noreferrer">vuepress2.x 文档和集成 algolia 配置过程</a></p>
<p>∆ 把首页背景图转 webp 减小图片大小</p>
<p><strong>来源</strong>：<a href="https://convertio.co/zh/png-webp/" target="_blank" rel="noreferrer">convertio 转换工具</a></p>
<h3 id="_2-2-23" tabindex="-1">2/2/23 <a class="header-anchor" href="#_2-2-23" aria-label="Permalink to &quot;2/2/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 新增：思维模型</p>
<p>∆ 新增：algolia 搜索 &amp; Github Action 在 Docker 中执行的 AlgoliaDocSearch scraper action</p>
<h3 id="_1-18-23" tabindex="-1">1/18/23 <a class="header-anchor" href="#_1-18-23" aria-label="Permalink to &quot;1/18/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 暗黑模式疑问：</p>
<ol>
<li>如果客户端 <code>webview</code> 不支持 <code>prefers-color-scheme</code>，那么客户端提供接口 ——客户端 js 注入，前端添加监听</li>
<li>h5 页面无客户端支持时，支持按钮点击切换黑夜模式，按钮入口可配置；或者是默认跟随系统？ ——不需要入口，跟随系统</li>
<li>给银行的，default 下面默认 light、dark，现场可以修改定制，给指导文档 ——这样处理</li>
<li>意味着，都是通过样式变量控制，兼容性？影响范围 ——不考虑兼容 ie</li>
</ol>
<p>∆ 新增文章：暗黑模式方案</p>
<p>∆ 新增 github action 自动部署，调研 travis-ci</p>
<h3 id="_1-17-23" tabindex="-1">1/17/23 <a class="header-anchor" href="#_1-17-23" aria-label="Permalink to &quot;1/17/23&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>shell</code> 脚本语法</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 停止执行，需要输入回车</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '请输入提交信息：'</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> message</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 给默认值；-n 有值；-z 无值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">$message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'deploy：更新博客'</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'deploy：更新博客'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">fi</span></span></code></pre>
</div><p>∆ 问题：github 访问慢问题</p>
<p>方法：</p>
<ol>
<li>解决 <code>github</code> 访问慢问题：修改 hosts，<a href="https://github.com/521xueweihan/GitHub520" target="_blank" rel="noreferrer">访问获取最新 host 文件</a></li>
<li>clone 慢：hub.fastgit.xyz 高速的 GitHub git 仓库镜像，使用：</li>
</ol>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> https://hub.fastgit.xyz/PaddlePaddle/PaddleOCR.git</span></span></code></pre>
</div><h3 id="_8-22-22" tabindex="-1">8/22/22 <a class="header-anchor" href="#_8-22-22" aria-label="Permalink to &quot;8/22/22&quot;">&ZeroWidthSpace;</a></h3>
<p>项目经验管理总结：</p>
<ol>
<li>按照重要性递减的顺序来做下面这些事情</li>
<li>雇佣独立的自由职业者而不是机构（项目规模、管理、资源分配和沟通有关）</li>
<li>串行的任务，增量的结果（1. 如果机构有 8 项完成了 80% 的任务，那么缩小项目范围或更换供应商对你来说代价很大 2. 同时监督 8 项子任务更耗费脑力）</li>
<li>缩小项目范围，规定任务的界限</li>
<li>对时间表达成共识（敦促开发人员评估每一项任务，并要求他们注意工作范围）</li>
<li>及时的沟通、反馈、讨论和解决</li>
</ol>
<p><strong>来源</strong>：<a href="https://mp.weixin.qq.com/s/QbBPLp1votLmAb5nVLCdag" target="_blank" rel="noreferrer">项目经验管理总结</a></p>
<h3 id="_8-17-22" tabindex="-1">8/17/22 <a class="header-anchor" href="#_8-17-22" aria-label="Permalink to &quot;8/17/22&quot;">&ZeroWidthSpace;</a></h3>
<p><code>Git</code> 在提交时，写上分类前缀：</p>
<ul>
<li>feat：新功能</li>
<li>update：更新某功能</li>
<li>fix：修补某功能的 bug</li>
<li>refactor：重构某个功能</li>
<li>optimize: 优化构建工具或运行时性能</li>
<li>style：仅样式改动</li>
<li>docs：仅文档新增/改动</li>
<li>chore：构建过程或辅助工具的变动</li>
</ul>
<h3 id="_8-16-22" tabindex="-1">8/16/22 <a class="header-anchor" href="#_8-16-22" aria-label="Permalink to &quot;8/16/22&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li><code>pnpm</code> 全称是 “Performant NPM”，即高性能的 npm。它结合软硬链接与新的依赖组织方式，大大提升了包管理的效率，也同时解决了 “幻影依赖” 的问题，让包管理更加规范，减少潜在风险发生的可能性。解决了 npm 嵌套复制多份的问题（浪费磁盘资源、嵌套路径过长在 window 下的问题）、处理多版本（还是嵌套）问题、幽灵依赖的问题（同名的包只会提升一个版本的位置，其余的版本依然会复制多次）。不再是复制了，而是都从全局 store 硬连接到 node_modules/.pnpm，然后之间通过软链接来组织依赖关系</li>
<li>快：安装速度快。</li>
<li>准：安装过的依赖会准确复用缓存，甚至包版本升级带来的变化都只 diff，绝不浪费一点空间，逻辑上也严丝合缝。</li>
<li>狠：直接废掉了幻影依赖，在逻辑合理性与含糊的便捷性上，毫不留情的选择了逻辑合理性。</li>
</ol>
<p><strong>来源</strong>：</p>
<ol>
<li><a href="https://mp.weixin.qq.com/s/bZ7AVSjBcZrZ3I387_esmg" target="_blank" rel="noreferrer">pnpm 的 “快、准、狠”</a></li>
<li><a href="https://mp.weixin.qq.com/s/sRKiqFNs24NYPxO4P5jq6Q" target="_blank" rel="noreferrer">pnpm 如何实现对 npm、yarn 的降维打击</a></li>
</ol>
<h3 id="_8-3-22" tabindex="-1">8/3/22 <a class="header-anchor" href="#_8-3-22" aria-label="Permalink to &quot;8/3/22&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 临时安装依赖工具，比如：npx create-react-app my-app
执行以上这条命令 npx 会按以下顺序工作：</p>
<ol>
<li>先查看当前项目有没 <code>create-react-app</code></li>
<li>如果当前项目找不到，会去全局查找 <code>create-react-app</code></li>
<li>如果全局还找不到，会帮我们临时从 <code>npm</code> 包仓库安装 <code>create-react-app</code>，不会污染到当前项目，也不会装到全局</li>
</ol>
<p>∆ mac brew 切换 <code>node</code> 版本</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> unlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> link</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --overwrite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> node@16</span></span></code></pre>
</div><p>如果没权限，执行：</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">whoami</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> /usr/local/Homebrew/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">whoami</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">*</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /usr/local/Frameworks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">whoami</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> /usr/local/Frameworks/</span></span></code></pre>
</div><h3 id="_4-8-22" tabindex="-1">4/8/22 <a class="header-anchor" href="#_4-8-22" aria-label="Permalink to &quot;4/8/22&quot;">&ZeroWidthSpace;</a></h3>
<p>能不能涨薪和当前形势的关系并没有那么大。</p>
<p>涨薪考量的关键因素，还得是你所在公司的业务模式行不行、业绩如何、发展好不好、现金流是否健康等等。当然，最重要的还得看你是否具备涨薪的“潜质”。</p>
<p>薪酬是能力、经验和岗位的体现，更大的职责、更高的岗位自然会有更高的工资。当前形势，日子都不好过，所以企业不管是涨薪还是招聘，也都会比之前更加谨慎。所以要想脱颖而出，就要具备更 “硬” 的技术和能力，要让公司能看得到你的价值。</p>
<p>说到提升价值，根据我这些年的经验，我认为以下几点比较重要：</p>
<ol>
<li>技术不能落伍。技术要跟得上形势，编码和设计能力要能跟得上发展，这是程序员的基本功。</li>
<li>学习比自己强的人的技术思维。任何的学习都不能闭门造车，站在巨人的肩膀上才能看的更远。</li>
<li>讲究方式方法，把学习做到有效性。</li>
<li>长期坚持学习。互联网时代，信息传播快，各项技术更新换代也快。如果不坚持学习积累，你将会很容易被替代。</li>
<li>合理安排时间，利用好碎片化时间，做知识的积累。</li>
</ol>
<h3 id="_4-6-22" tabindex="-1">4/6/22 <a class="header-anchor" href="#_4-6-22" aria-label="Permalink to &quot;4/6/22&quot;">&ZeroWidthSpace;</a></h3>
<p>持续集成(CI)：目标是更早，更容易地识别开发过程中可能出现的问题。可以设置代码样式的检查，代码复杂度（低复杂性使测试过程更简单）和其他检查。 这有助于最大限度地减少负责代码审查的人员的工作量，节省时间并提高代码质量。</p>
<ol>
<li>开发人员在其本地计算机上检查代码</li>
<li>完成后 - 他们将代码变更提交到代码仓</li>
<li>代码仓向 CI 系统发送请求（webhook）</li>
<li>CI 服务器运行任务（测试，覆盖率，检查语法等）</li>
<li>CI 服务器发布已保存的工件（artifacts）以进行测试</li>
<li>如果构建或测试失败，CI 服务器会向团队发出警报</li>
<li>该团队解决了这个问题</li>
</ol>
<p><strong>来源</strong>：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/59686072" target="_blank" rel="noreferrer">持续集成 CircleCI vs Travis CI vs Jenkins</a></li>
<li><a href="https://www.jianshu.com/p/36af6af74dfc" target="_blank" rel="noreferrer">使用 CircleCI 2.0 进行持续集成/持续部署</a></li>
</ol>
<h3 id="_3-21-22" tabindex="-1">3/21/22 <a class="header-anchor" href="#_3-21-22" aria-label="Permalink to &quot;3/21/22&quot;">&ZeroWidthSpace;</a></h3>
<p>关于 <code>fiber</code>：</p>
<ol>
<li>react fiber：时间切片，改善大批量 dom 渲染时导致 cpu 占用，用户操作无相应的问题；</li>
<li>HCI 研究表明，除非它在做动画，否则对于正常的用户交互，大多数人不会感觉到差异，除非更新时间超过 100 毫秒。</li>
<li>也就是说，只有当频繁的更新需要超过 100 毫秒的纯 CPU 时间时，时间切片才变得实际有用。</li>
<li>Vue3 的优化，使占用 CPU 的时间要少得多，在 CPU 空间花费 100+毫秒的可能性大大降低，而且只有在极端情况下才会遇到，在这种情况下，DOM 可能会成为更重要的瓶颈。</li>
</ol>
<p><strong>来源</strong>：<a href="https://github.com/vuejs/rfcs/issues/89" target="_blank" rel="noreferrer">Why remove time slicing from vue3? #89</a></p>
<h3 id="_3-18-22" tabindex="-1">3/18/22 <a class="header-anchor" href="#_3-18-22" aria-label="Permalink to &quot;3/18/22&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ idea: 日志里加链接，相当于目录索引，可以在文件夹里归档详细内容。例如：在桌面添加里快捷方式，方便添加日志。</p>
<p>∆ Github 访问失败或者缓慢的原因：</p>
<p>本机网络设置的 DNS 服务器解析 Github 相关域名的 IP 地址，这些 IP 地址要么本身无法访问，要么节点过远，从而导致了访问失败或者速度缓慢。
那么我们修改的方案可以是：</p>
<ol>
<li>
<p>修改本机 Hosts 文件，Hosts 文件的作用就是绑定域名与 IP 的映射关系，这样我们主动建立域名与 IP 的映射关系，访问到这些域名时直接使用 Hosts 指定的 IP，绕过 DNS 解析。</p>
</li>
<li>
<p>修改网络的 DNS 服务器，换到能够解析出合适 IP 的 DNS 服务器。</p>
</li>
</ol>
<p>因为 DNS 服务器储存的映射关系是动态更新的，无法直接控制。直接修改本机 Hosts 文件，锁定域名对应的 IP，更加有效方便。</p>
<p><strong>来源</strong>：<a href="./test链接地址.html">关于 webpack 打包/path</a></p>
<h3 id="_2-14-22" tabindex="-1">2/14/22 <a class="header-anchor" href="#_2-14-22" aria-label="Permalink to &quot;2/14/22&quot;">&ZeroWidthSpace;</a></h3>
<p>薪福通 &amp; 苏薪通 POC 对比</p>
<ol>
<li>创建薪资组（创建薪资表），我们这边写了名字、选月份，直接创建了，简化了很多（选择人员、计薪周期、薪资规则的配置，薪福通这样的对需求的覆盖范围更广）</li>
<li>在核对算薪人员，同步计薪人员，把人员数据都拉过来了没有按部门区分；（薪福通在创建薪资组时，支持部门、岗位、状态来筛选选择）</li>
<li>薪资规则我们这边是默认了一个，不支持修改配置（规则是什么？），模型，用于后端计算薪资？（数据来源、计算规则）；规则落库，逻辑自洽</li>
<li>薪资规则不同，导入的模版不同，计算规则不同；薪福通预置了几种规则。</li>
</ol>
<h3 id="_1-25-22" tabindex="-1">1/25/22 <a class="header-anchor" href="#_1-25-22" aria-label="Permalink to &quot;1/25/22&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>研究<code>vitepress</code>，整了一个 my-blog-vitepress 版本；感觉 vitepress 没有提供插件，文档内容很少。</li>
<li>fix：博客部署时，关于 document 的报错警告（因为 VuePress 是在 Node.js 服务端渲染，node 没有 window，所以报错）</li>
</ol>
<h3 id="_1-21-22" tabindex="-1">1/21/22 <a class="header-anchor" href="#_1-21-22" aria-label="Permalink to &quot;1/21/22&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>这阵儿忙过去了，开始写博客。</li>
<li>幸存者偏差：看到的现象、得到的结论是片面的，要警惕、辩证、全面地去思考。来源：二战英国，对返航飞机统计，大多受损的地方在机翼，所以要加厚机翼装甲？可更重要的不是机腹的装甲么？实际上是机腹中弹的飞机飞不回来了。</li>
</ol>
<h3 id="_11-17-21" tabindex="-1">11/17/21 <a class="header-anchor" href="#_11-17-21" aria-label="Permalink to &quot;11/17/21&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>不想过得没意义，所以开始认真定目标计划，每天、每周、每月。</li>
<li>还有每个晚上的，大致安排。</li>
<li>有目标，过得清楚，有意义。</li>
<li>整理了我的滴答清单，过了一遍。</li>
<li>
<Egg name="-彩蛋 🌈 - 被你发现了 点它 : )" tips="点击空格，开始游戏！"><DinosaurRunner></DinosaurRunner></Egg></li>
</ol>
<h3 id="_9-30-21" tabindex="-1">9/30/21 <a class="header-anchor" href="#_9-30-21" aria-label="Permalink to &quot;9/30/21&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>早上去体检，做彩超，等的人真多。</li>
<li>blog：修复注册评论组件的问题：enhanceApp 的触发时机问题，改为在路由变化时注册组件，且设定时器（因为没有回调、生命周期），等 dom 渲染完。</li>
<li>规划、开发博客列表组件，接下来去整理下博客内容。</li>
<li>blog：新增文章列表。</li>
</ol>
<h3 id="_9-29-21" tabindex="-1">9/29/21 <a class="header-anchor" href="#_9-29-21" aria-label="Permalink to &quot;9/29/21&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>下载了 element-plus 源码，结合 <a href="https://mp.weixin.qq.com/s?__biz=Mzg3MTU4NTI3OA==&amp;mid=2247488540&amp;idx=1&amp;sn=a201dc3d84c443012b6881b38d9383e9&amp;scene=21#wechat_redirect" target="_blank" rel="noreferrer">文章：从 Element UI 源码的构建流程来看前端 UI 库设计</a> 学习</li>
<li>发现了 pnpm（npm/yarn 升级版）、vitepress（vuepress 升级版：vite + vue3.0）</li>
<li>学习 UI 库的构造结构、复习 vue3.0 的语法结构（setup、hook）、学习 vitepress 对比 vuepress</li>
<li>昨晚的暴雨，可真刺激。乌云压的很低，天上是水，地上是水，天地之间被雨幕连接，雨水眯着眼睛看不清，穿着雨衣感觉车像在湖面上骑着，除了雨声听不到其它的声音了。</li>
<li>博客：根据 md 文件 title 的参数<code>gitalkConfig</code>，判断是否渲染评论组件</li>
</ol>
<h3 id="_9-28-21" tabindex="-1">9/28/21 <a class="header-anchor" href="#_9-28-21" aria-label="Permalink to &quot;9/28/21&quot;">&ZeroWidthSpace;</a></h3>
<p>博客</p>
<ol>
<li>新增了百度统计功能</li>
<li>重写 copy 监听，带上版权信息</li>
<li>找到了原博客主的构建他博客的文章，赞</li>
</ol>
<h3 id="_9-27-21" tabindex="-1">9/27/21 <a class="header-anchor" href="#_9-27-21" aria-label="Permalink to &quot;9/27/21&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>我的博客新增 gitalk 评论功能</li>
<li>调整博客布局、样式</li>
</ol>
<h3 id="_9-26-21" tabindex="-1">9/26/21 <a class="header-anchor" href="#_9-26-21" aria-label="Permalink to &quot;9/26/21&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>使用 wd 硬盘备份我的 mac（之前安装了虚拟机）识别 wd 很慢，考虑是接触不良，或者反应慢要等一会儿</li>
<li>继续整理浏览器书签</li>
<li>完善每日计划</li>
</ol>
<h3 id="_5-14-20" tabindex="-1">5/14/20 <a class="header-anchor" href="#_5-14-20" aria-label="Permalink to &quot;5/14/20&quot;">&ZeroWidthSpace;</a></h3>
<p>反思：
摸到 bug 的脚了但我没有抓住它 需要反思</p>
<p>描述：晚上周伟有反馈问题 / 样式丢失问题 / dev 环境正常？？</p>
<ol>
<li>没定位到问题,所以我换了组件</li>
<li>定位是样式丢失，没能反应过来，是没 import 引入组件样式，这个组件跟其他的是不一样的，是没带上样式的</li>
<li>列表发现有问题，没能想更近一步，忽视了商品新增/编辑的，用到这个组件的地方</li>
<li>如果想到这一点 再全局搜索就好了；如果引入组件的时候 仔细点就好了</li>
</ol>
<p>总结：</p>
<ol>
<li>仔细点，看起来没问题，不代表真的没问题</li>
<li>这个地方有问题，其他地方会不会也有问题（多想一点）</li>
</ol>
<h3 id="_4-17-20" tabindex="-1">4/17/20 <a class="header-anchor" href="#_4-17-20" aria-label="Permalink to &quot;4/17/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 开发流程</p>
<p>master：线上稳定版本（所有功能都是稳定的）</p>
<p>dev：新功能测试版本（每个功能都是基本完整的，可用的，但可能不稳定，属于测试阶段）</p>
<p>xiak-monitor-pay：功能开发分支（开发中）</p>
<p>...</p>
<p>线上紧急问题修复
直接从 master 拉一个 fix-bug 分支出来修复，测试完毕后，然后合并到 master 以解决紧急问题</p>
<p>然后不要忘了，dev 和 功能开发分支 要拉 master 的更新</p>
<p>git 开发流程/规则
master：主分支，线上生产环境代码</p>
<p>dev：开发测试分支，测试环境代码，用于内部测试</p>
<p>master 和 dev 上从不直接修改代码，只接受合并</p>
<p>开发新功能和迭代永远只在 master 拉分支出来的功能分支上进行</p>
<p>开发过程中，经常从 master 往自己的功能分支合并，越频繁越好（重复三遍）</p>
<p>功能开发完毕（最新的 master 往上合过并通过自测才算是开发完毕），先合到 dev 上进行测试</p>
<p>测试(内侧)没问题就可以往 master 上合并上线</p>
<p>如果一个功能最初是从某个功能分支中出来的，那么只要涉及该功能的更新，就需要一直维护该分支，没有特殊情况不要抛弃它而去建立新的迭代分支，确保不要出现一个功能分散在多个分支中</p>
<p>建立功能分支时功能要确定，不能模棱两可，一个功能只能在一个分支中，确保该功能的整个生命周期都由该分支来维护和迭代。</p>
<p>功能分支只有测试通过，需要直接上线时才需要往 master 上合并</p>
<p>经常从 master 往自己所开发的功能分支上合并是好习惯</p>
<p>dev 只能接受合并，永远不能往其他任何分支合并，切记！</p>
<p>git 的合并操作是：往当前所在的分支合，一定不要看错了当前所在分支（命令行中可能没实时显示，按下回车或查看当前所在分支）</p>
<p>功能分支的粒度要尽量小，不要把很多功能都放在一个功能分支中，尽量一个小功能一个功能分支</p>
<p>处于开发的功能分支之间不能有任何肢体接触</p>
<p>处于开发的功能分支是不完备的，经常有 coding...这样临时保存代码的提交，而 dev 和 master 上，决不允许出现这样的提交（HEAD）</p>
<p>有时候需要单独测试某个功能分支，dev.abc.com 环境切换为需测试的分支即可</p>
<p>每次开始写代码前，不要忘记 git pull 拉代码，并且开发过程中需要经常拉代码，越频繁越好，因为即使某一个功能分支也往往是由多人同时开发的。</p>
<p>功能开发完毕后合并到 master 分支上线时别忘记了检查开发时的一些为开发环境所作的特定配置修改，如一些硬编码的配置参数，要仔细检查，如预定功能的预定限额(硬编码)，开发时往往为了方便会调整这些值，但是正式上线时一定要修改为正式环境的配置再上线。否则如果把开发/测试环境的配置带到线上了就会造成严重的后果。</p>
<p>严格遵守以上规则，如果你发现你想做的操作不包含在以上规则中，则一定不要做！</p>
<p>其他
当然如果时间过去很久，都差不多忘记当初的分支了，也可以抛弃它再新建分支</p>
<p>速记：</p>
<p>master：可以把我合到任何地方，但别轻易合并到我身上。</p>
<p>dev：要测试的往我这儿合并，但不要让我合并到你身上，否则你就完了。</p>
<p>上线：上线时检查所有开发环境的配置(硬编码参数等)，确保线上除了逻辑代码正常外所有软硬配置也要正确。</p>
<p>各功能分支间：尽量不要有交流，实在想交流的话，彼此得要做好充分的准备，沟通协商好（这意味着两个功能有不可避免的耦合）；如果上线了，要交流通过 master。</p>
<h3 id="_3-31-20" tabindex="-1">3/31/20 <a class="header-anchor" href="#_3-31-20" aria-label="Permalink to &quot;3/31/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 关于学习</p>
<ol>
<li>能把知识熟练地表达出来</li>
<li>记得满满的笔记，满书的荧光笔等等，这些方法不好，是实际上的思想懒惰，我们的大脑会以为我们记住了，实则不然。</li>
<li>只有不断检索知识，给知识打结，才能保证知识是属于自己的。</li>
<li>如果能够间隔练习，并穿插着不同的内容记性练习才是最能帮助长期记忆的。</li>
<li>在别人交给你答案之前，先尝试自己解决问题，这样效果会更好，哪怕在尝试中犯下一下错误，也是有助于帮助自己提升认知的。</li>
<li>思考自己工作中的问题会更有助于提高自己的专业水平。</li>
</ol>
<p>∆ js 代码规范</p>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 超长的不可分割的代码允许例外，比如复杂的正则表达式。长字符串不在例外之列。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// [强制] 运算符处换行时，运算符必须在新行的行首。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 示例：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    (user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">isAuthenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">isInRole</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'admin'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">hasAuthority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'add-admin'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">||</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">hasAuthority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'delete-admin'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // Code</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    ''</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> // 此处用一个空字符串，以便整个 HTML 片段都在新行严格对齐</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    '&#x3C;article>'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    '&#x3C;h1>Title here&#x3C;/h1>'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    '&#x3C;p>This is a paragraph&#x3C;/p>'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    '&#x3C;footer>Complete&#x3C;/footer>'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">    '&#x3C;/article>'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 三元运算符由3部分组成，因此其换行应当根据每个部分的长度不同，形成不同的情况。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> thisIsAVeryVeryLongCondition </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> resultA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> resultB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> condition </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> thisIsAVeryVeryLongResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> resultB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// [强制] 在 if / else / for / do / while 语句中，即使只有一行，也不得省略块 {...}。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 示例：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (condition) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    callFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// TODO: 有功能待实现。此时需要对将要实现的功能进行简单说明。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// FIXME: 该处代码运行没问题，但可能由于时间赶或者其他原因，需要修正。此时需要对如何修正进行简单说明。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// HACK: 为修正某些问题而写的不太好或者使用了某些诡异手段的代码。此时需要对思路或诡异手段进行描述。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// XXX: 该处存在陷阱。此时需要对陷阱进行描述。</span></span></code></pre>
</div><h3 id="_3-30-20" tabindex="-1">3/30/20 <a class="header-anchor" href="#_3-30-20" aria-label="Permalink to &quot;3/30/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 看了<code>lavas</code>的文档：关于移动端、vue、pwa 的开发框架，可以在手机桌面上生成图标</p>
<p><strong>来源</strong>：<a href="https://lavas.baidu.com/guide/v2/basic/introduction" target="_blank" rel="noreferrer">lavas 参考文档</a></p>
<h3 id="_3-25-20" tabindex="-1">3/25/20 <a class="header-anchor" href="#_3-25-20" aria-label="Permalink to &quot;3/25/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ Mac 内存 cpu 占用大 查是 Spotlight 引起</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 关闭</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> mdutil</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> off</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 打开</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> mdutil</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> on</span></span></code></pre>
</div><h3 id="_2-24-20" tabindex="-1">2/24/20 <a class="header-anchor" href="#_2-24-20" aria-label="Permalink to &quot;2/24/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 疫情没那么严重了 复工第一天 我的日志也开始写起来了</p>
<h3 id="_1-22-20" tabindex="-1">1/22/20 <a class="header-anchor" href="#_1-22-20" aria-label="Permalink to &quot;1/22/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ Git ignore 修改无效</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'removed xxx from repository'</span></span></code></pre>
</div><h3 id="_1-21-20" tabindex="-1">1/21/20 <a class="header-anchor" href="#_1-21-20" aria-label="Permalink to &quot;1/21/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 我还有哪些 30 岁前想要尝试的事？</p>
<p>∆ 整理我的博客</p>
<p>∆ web 学习路线</p>
<p><img src="/images/blog/log/web学习路线.png" alt="" loading="lazy"></p>
<h3 id="_1-20-20" tabindex="-1">1/20/20 <a class="header-anchor" href="#_1-20-20" aria-label="Permalink to &quot;1/20/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 开始写个人博客了</p>
<p><strong>来源</strong>：<a href="https://juejin.im/post/5dce1e0e5188254eda3936c5" target="_blank" rel="noreferrer">1 小时搞定 vuepress 快速制作 vue 文档/博客+免费部署预览</a></p>
<h3 id="_1-17-20" tabindex="-1">1/17/20 <a class="header-anchor" href="#_1-17-20" aria-label="Permalink to &quot;1/17/20&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://gitbook.cn/" target="_blank" rel="noreferrer">https://gitbook.cn/</a></p>
<p>GitChat 是一款基于微信平台的知识分享产品。通过这款产品我们希望改变 IT 知识的学习方式。</p>
<h3 id="_1-16-20" tabindex="-1">1/16/20 <a class="header-anchor" href="#_1-16-20" aria-label="Permalink to &quot;1/16/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 学习<code>react-navigation</code>的 demo 学习记录；参见 2020-1-16</p>
<h3 id="_1-15-20" tabindex="-1">1/15/20 <a class="header-anchor" href="#_1-15-20" aria-label="Permalink to &quot;1/15/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 结合<code>react-navigation</code> example 目录下的示例 完成 MyApp 的改造</p>
<p>∆ ios 的状态栏配置 用的是<code>react-navigation</code>的</p>
<p>∆ 0.6+ 版本 RN 项目启动方式</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 1.安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">yarn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 2.链接库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> &#x26;&#x26; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 3.参考 package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ios</span></span></code></pre>
</div><h3 id="_1-14-20" tabindex="-1">1/14/20 <a class="header-anchor" href="#_1-14-20" aria-label="Permalink to &quot;1/14/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ RN 看 demo</p>
<p>看美团的 rn 的项目架构 学会 RN 的界面搭建，路由跳转</p>
<p>∆ 查看 yarn、npm 全局安装过的包</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --depth=0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --depth=0</span></span></code></pre>
</div><p>∆ rn 的路由 demo 下载 待研究</p>
<h3 id="_1-13-20" tabindex="-1">1/13/20 <a class="header-anchor" href="#_1-13-20" aria-label="Permalink to &quot;1/13/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ <code>ReactNative</code> 再熟悉下 架子搭起来</p>
<p><strong>来源</strong> RN 中文官网 安装 pod - gem - ruby 换源 0.6 版以上的 RN-ios 版跑起来了</p>
<h3 id="_1-9-20" tabindex="-1">1/9/20 <a class="header-anchor" href="#_1-9-20" aria-label="Permalink to &quot;1/9/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 整理之前的 Notes，记忆宫殿，下载了《学习之道》</p>
<h3 id="_1-8-20" tabindex="-1">1/8/20 <a class="header-anchor" href="#_1-8-20" aria-label="Permalink to &quot;1/8/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 看了以前的<code>ffmpeg</code>文档 试了<code>ffmpeg</code>视音频分离；fetch 鬼灭之刃的动漫，优化了 python 脚本</p>
<h3 id="_1-7-20" tabindex="-1">1/7/20 <a class="header-anchor" href="#_1-7-20" aria-label="Permalink to &quot;1/7/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 和 王斌 &amp; 超哥的谈话</p>
<p>王斌：未来的展望，个人的规划，工作的态度</p>
<p>超哥：随时间的增长 个人技术的形状‘梯形’ 广度 &amp; 深度；5 年是技术的目标； 又提起了去看源码的念头</p>
<p>分析自己：</p>
<p>我现在还在基础的层级里，接触 <code>React</code>，<code>RN</code>，<code>小程序</code>，<code>Vue</code>，<code>uni-app</code>，<code>python</code>之类的技术，涉及不深。</p>
<p>最近 研究新技术的时间不多，我想我应该再去想想，做个规划。尤其，规划好个人的一天怎么过得更充实些，往里面塞些好东西进去。</p>
<p>∆ MAC 快捷键</p>
<p>查网页，整理 mac 快捷键，PDF 文档参见：2020-1-7</p>
<p>∆ 链接我的 windows 电脑</p>
<p>使用<code>TeamViewer</code>，感觉向日葵好用些，<code>Microsoft Remote Desktop</code>也还好。</p>
<h3 id="_1-4-20" tabindex="-1">1/4/20 <a class="header-anchor" href="#_1-4-20" aria-label="Permalink to &quot;1/4/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 写了 Vue 触发式组件，根据博客上的 demo 改装，思路如下：</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 1.Components 写页面</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 2.Index.js 初始化 处理挂载到vue实例后的逻辑</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 3.main.js 挂载到vue实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> VoicePrompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '@/components/VoicePrompt'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(VoicePrompt)</span></span></code></pre>
</div><h3 id="_1-3-20" tabindex="-1">1/3/20 <a class="header-anchor" href="#_1-3-20" aria-label="Permalink to &quot;1/3/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 整理了文件夹</p>
<p>百度云笔记的文件夹 还有 MAC 的 Notes</p>
<p>把 <code>Google Cloud Platform</code> 上搭建<code>shadowSocks</code>的命令行复制到文件夹里了</p>
<p>∆ 当别人问问题</p>
<p>需要我做什么，我能帮到你什么？</p>
<p>你想知道什么 （明确目的） 耐心些 （分析下）我帮不到你，但我知道对应负责人你可以去找他，阿东</p>
<h3 id="_1-2-20" tabindex="-1">1/2/20 <a class="header-anchor" href="#_1-2-20" aria-label="Permalink to &quot;1/2/20&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 实践<code>ffmpeg</code>与<code>python</code>结合</p>
<p>在原基础上写了个脚本获取 动漫网的 m3u8 地址</p>
<p>难点：</p>
<ol>
<li>获取嵌套的<code>iframe</code>里的地址前缀，查资料使用 py 插件<code>selenium</code>模拟打开浏览器解决；</li>
<li>运行时报错，须官网下载<code>driver</code>对应<code>chrome</code>的版本才行，复制到<code>/usr/local/bin</code> 解决</li>
<li>最后使用<code>ffmpeg</code>下载视频，同时开了 3 个<code>ffmpeg</code>但是结果很慢</li>
</ol>
<h3 id="_12-31-19" tabindex="-1">12/31/19 <a class="header-anchor" href="#_12-31-19" aria-label="Permalink to &quot;12/31/19&quot;">&ZeroWidthSpace;</a></h3>
<p>∆ 想使用<code>python</code>下载「刀剑神域」</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 1.下载 ffmpeg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ffmpeg</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 2.打开页面 F12 - source 查找 index.m3u8（它是分片下载的 .ts）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 3.寻找编号6885_4996de9a,6886_007a5837,6887_f08da6c7</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 4.运行命令 下载合并</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "https://youku.cdn-163.com/20180507/6885_4996de9a/1000k/hls/index.m3u8"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "01.mp4"</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 参考：https://blog.csdn.net/weixin_33906657/article/details/88595352</span></span></code></pre>
</div><p>∆ git 执行 commit 后，还没执行 push 时，想要撤销这次的 commit，该怎么办（sourceTree）？</p>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --soft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> HEAD^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 然后重启sourceTree</span></span></code></pre>
</div><p>∆ 想用<code>ssh</code>登录<code>github</code></p>
<ol>
<li>检查<code>SSH</code>密钥是否存在</li>
</ol>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ~/.ssh,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ~/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 如果有文件id_rsa.pub 或 id_dsa.pub，则密钥存在。</span></span></code></pre>
</div><ol start="2">
<li>生成新的<code>ssh</code>密钥
在命令行中输入</li>
</ol>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "your_email@example.com"</span></span></code></pre>
</div><p>生成 ssh 密钥后，可以到~/.ssh 目录下查看相关文件，一般来说 ssh 密钥会包含 id_rsa 和 id_rsa.pub 两个文件，分别表示生成的私钥和公钥。
在 git 等源代码管理中，使用 cat ~/.ssh/id_rsa.pub 命令，打印并将相应内容复制到源代码管理服务器即可实现 git 的无密码管理。</p>
]]></content:encoded>
            <enclosure url="https://bayi-95.eu.org/images/blog/log/git-cheat-sheet.png" length="0" type="image/png"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 308 期）：工作找不到，博士能读吗？]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-308</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-308</guid>
            <pubDate>Fri, 12 Jul 2024 16:21:53 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
北京怀柔的箭扣长城]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-308-期-工作找不到-博士能读吗" tabindex="-1">科技爱好者周刊（第 308 期）：工作找不到，博士能读吗？ <a class="header-anchor" href="#科技爱好者周刊-第-308-期-工作找不到-博士能读吗" aria-label="Permalink to &quot;科技爱好者周刊（第 308 期）：工作找不到，博士能读吗？&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4743" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024071107.jpg" alt="" loading="lazy"></p>
<p>北京怀柔的箭扣长城五期保护修缮项目，修复915米的长城，包含六座烽火台，预计2026年完工。（<a href="https://m.bjnews.com.cn/detail/1720180768129506.html" target="_blank" rel="noreferrer">新京报</a>）</p>
<h2 id="工作找不到-博士能读吗" tabindex="-1">工作找不到，博士能读吗？ <a class="header-anchor" href="#工作找不到-博士能读吗" aria-label="Permalink to &quot;工作找不到，博士能读吗？&quot;">&ZeroWidthSpace;</a></h2>
<p>最近几年，我国的博士招生数量急剧增长。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070601.webp" alt="" loading="lazy"></p>
<p>2016年还是7万余人，2023年就增长到了<a href="https://www.sohu.com/a/762421020_121678151" target="_blank" rel="noreferrer">15.33万人</a>（上图只到2022年）。</p>
<p>最新消息是，2024年还会<a href="https://www.sohu.com/a/749608492_121124034" target="_blank" rel="noreferrer">扩招</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070602.webp" alt="" loading="lazy"></p>
<p>博士招生增长这么快，我想多少跟这几年的就业形势有关系。</p>
<p>如果你因为就业压力，正在考虑要不要读博士，我推荐本周的<a href="https://medium.com/@jpolak/should-you-get-a-phd-4806663cf380" target="_blank" rel="noreferrer">一篇文章</a>。</p>
<p>作者是加拿大麦吉尔大学的一个数学博士，但现在是野生动物摄影师。别人问他，你觉得博士学位值得读吗？他就写了这篇文章。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070603.webp" alt="" loading="lazy"></p>
<p>他说，你要考虑清楚，<strong>博士学位并不像听上去那样美好</strong>。</p>
<p>首先，硕士+博士至少需要5年，毕业了能不能找到更好的工作，并不确定。这段时间你完全可以在另一个地方，建立你的职业生涯。</p>
<p>其次，很多博士学位名不符实，只是一堆半生不熟的课程，最后你提交一篇低标准的论文，就可以通过，可能学不到什么东西。</p>
<p>最后，不要相信大学的宣传。学校总是说，自己的博士课程有多好，目的只是想要更多的学生，这样就可以赚更多的钱。</p>
<p>你考虑问题的标准应该是，生命只有一次，不要浪费你的时间。你决定如何行动，应该基于它们能否帮助你的自我发展和成长。</p>
<p>如果博士学位满足下面的条件之一，就值得读。</p>
<blockquote>
<ul>
<li>它的研究方向，能够真正激发你的某个兴趣。</li>
<li>它让你真正成长为自己的更好版本。</li>
<li>你用它去做一些可以达到人生新高度的事情。</li>
</ul>
</blockquote>
<p>反过来，上面的条件都达不到，反而有下面的特征，博士就不值得读。</p>
<blockquote>
<ul>
<li>读博结束后，它只是让你的简历多了另一行。</li>
<li>博士期间学到的东西，你自己一个人也可以学会。</li>
<li>你读博的唯一目的，只是为了找到一份工作，但它不能帮助你成长。</li>
</ul>
</blockquote>
<p>最后，他说了一个简单的判别方法。</p>
<blockquote>
<p>“你一想到读博这件事，感到激动不已，仿佛内心的火焰被点燃，觉得它会大大丰富你的人生，带给你成长和以新方式看待世界，那就去读。”</p>
<p>“反之，你对这件事毫不激动，有种无可奈何的感觉，那你最好先花几个月，认真思考你想做什么，如何度过自己的生命，这可能会让你避免浪费宝贵的几年时间。”</p>
</blockquote>
<p>我很认同这段话，但是必须承认，这太理想化了。</p>
<p>找不到工作是非常现实的压力，而读博是有工资的。走投无路的时候，其实是没有选择的，内心的意愿并不重要。</p>
<p>我转发他的文章，只是因为喜欢他说的，<strong>只要有可能，就应该从自我发展和成长的角度，来思考人生的选择</strong>，否则读博只是把眼前的就业困境，推迟到几年后，而且那时的选择余地比现在更少。</p>
<h2 id="本周精选-ai-超市-302-ai" tabindex="-1">[本周精选] AI 超市 302.AI <a class="header-anchor" href="#本周精选-ai-超市-302-ai" aria-label="Permalink to &quot;[本周精选] AI 超市 302.AI&quot;">&ZeroWidthSpace;</a></h2>
<p>AI 产品层出不穷，大家都在研究，怎么使用它们。</p>
<p>下面介绍的 <a href="https://302.ai/" target="_blank" rel="noreferrer">302.AI</a>，思路很独特。它把自己定位为 <strong>“AI 超市”，在一个网站汇集，全世界的各种 AI 机器人 + 工具 + API</strong>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070801.webp" alt="" loading="lazy"></p>
<p>注册后，它会让你选择，要搭建什么机器人（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070803.webp" alt="" loading="lazy"></p>
<p>比如，选择“<strong>聊天机器人</strong>”，你就需要指定底层模型（下图），一共有几十种模型可以选。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070811.webp" alt="" loading="lazy"></p>
<p>然后，系统分配一个二级域名，通过这个域名使用该模型。也就是说，用户选择后端，它来生成使用界面。</p>
<p>这个界面跟官方的是一样的，支持 OpenAI 的所有最新特性，比如上传图片文件、语音对话等等，还能实时预览 HTML 和 SVG 代码效果。</p>
<p><a href="https://302.ai/" target="_blank" rel="noreferrer">302.AI</a> 基本上都是这个模式：<strong>用户想要什么 AI，它都做了适配，为你生成使用界面</strong>。并且，它分配的二级域名是你独享的，你可以分享给其他人，但是这样会消耗你的额度，所以系统允许你设置一个“分享码”（页面密码）。</p>
<p>除了聊天机器人，它还提供其他类型的机器人。</p>
<p>（1）绘图机器人：生成“文生图”使用界面，底层模型可选 Midjourney 或 Stable Diffusion 3。</p>
<p>（2）应用机器人：对应 OpenAI 的应用商店。你可以<a href="https://gpts.302.ai/" target="_blank" rel="noreferrer">搜索</a>里面的50万个应用，一键生成使用界面。</p>
<p>（3）API 超市：提供不同模型的 <a href="https://apifox.com/apidoc/project-4012774" target="_blank" rel="noreferrer">API 统一调用接口</a>，都放在<code>api.302.ai</code>这个域名下面，通过参数<code>model</code>指定模型。它支持的 API 非常多，最新的视频生成模型 Luma AI 和 Runway 都是可用的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070814.webp" alt="" loading="lazy"></p>
<p>（4）工具超市：提供一些专门的 AI 功能，目前有几十个工具可选，比如 AI 搜索引擎、AI 翻译、提示词生成、老照片修复、照片放大、电商图片生成等等。</p>
<p>举例来说，工具里面有一个“AI 网页复制器”（下图）。进入使用界面后，我上传了抖音首页的截图，它就给出了网页代码，还能在 CodePen 打开。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070903.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070904.webp" alt="" loading="lazy"></p>
<p>最后，302.AI 的开发团队就是 <a href="https://www.proxy302.com/" target="_blank" rel="noreferrer">Proxy302</a> 的开发团队，在跨境软件服务上有丰富的经验和资源，已经稳定运作了4年。</p>
<p>关于费用，他们是<strong>按需付费，没有月费</strong>，用多少付多少，而且国外模型是原价的五折，详见<a href="https://302.ai/pricing_robot/" target="_blank" rel="noreferrer">定价页</a>。</p>
<p>大家可以去他们的<a href="https://302.ai/" target="_blank" rel="noreferrer">官网</a>，开通试用，体验一下。如果你使用 <a href="https://www.coze.cn/" target="_blank" rel="noreferrer">Coze</a>，他们在那里也上架了插件、bot 和工作流。详细了解，可以看<a href="https://help.302.ai/docs/302-AI-wu-fen-zhong-shang-shou-jiao-cheng" target="_blank" rel="noreferrer">官方文档</a>。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://today.line.me/hk/v2/article/LXwy2oz" target="_blank" rel="noreferrer">香港的无影时间</a></p>
<p>香港媒体报道，7月8日和7月9日，连续两天的中午12点28分和29分左右，香港街头出现“无影时间”，事物没有影子。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024071104.webp" alt="" loading="lazy"></p>
<p>上图左侧的标示牌没有影子，而汽车和行人的影子都正好在脚底下，如果从头顶垂直看下来，也是没有影子。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024071105.webp" alt="" loading="lazy"></p>
<p>这是因为这个时间，太阳正好直射香港。今年夏至是6月21日，太阳到达北纬23°26的北回归线，然后就不断南移。</p>
<p>香港是北纬22度，这两天太阳的直射点正好到达香港。</p>
<p>2、<a href="https://obrhubr.org/reverse-engineering-diploma" target="_blank" rel="noreferrer">证书防伪</a></p>
<p>一个法国程序员在业余时间读学位，终于拿到了学位证书。</p>
<p>他意外发现，证书右上角有一个二维码。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070503.webp" alt="" loading="lazy"></p>
<p>这用于证书防伪，使用政府开发的一个 App 扫描后，就会告诉你证书是否为真，以及内容细节。</p>
<p>这个二维码本质上是一个数字签名，使用政府的私钥签署，而 App 包含了公钥，可以验证签名是否为真。</p>
<p>这真是证书防伪的好方法，简单成本低，普通手机就能检验，国内值得借鉴。唯一的问题是，万一私钥泄漏，二维码就作废了，但又不能重新颁发证书，很难补救。</p>
<p>3、<a href="https://www.yankodesign.com/2024/06/26/boost-your-productivity-with-moft-snap-flow-the-ultimate-portable-focus-tool/" target="_blank" rel="noreferrer">手机的手写笔记本</a></p>
<p>有些人就是习惯手写笔记，不习惯手机做笔记。</p>
<p>针对这部分人群，一家美国创业公司推出了，跟手机配套的手写笔记本。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070704.webp" alt="" loading="lazy"></p>
<p>这种笔记本使用磁力，吸附在手机背面。使用时，打开它，就能在里面的便签记录自己的想法。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070705.webp" alt="" loading="lazy"></p>
<p>目前，这个产品正在 <a href="https://www.kickstarter.com/projects/moft/moft-snap-note-stand" target="_blank" rel="noreferrer">KickStart</a> 众筹，可以将它当作一个实验，看看手写笔记的用户现在还有多少。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070706.webp" alt="" loading="lazy"></p>
<p>4、<a href="https://electrek.co/2024/05/24/bladeless-rooftop-wind-turbines-box-buildings/" target="_blank" rel="noreferrer">无叶片风力发电</a></p>
<p>我们日常所见的风力发电机，都拥有巨大叶片，这使得它无法在安装在城市，只能在野外使用。</p>
<p>一家美国创业公司发明了无叶片的风力发电机，没有转动的叶片，因此可以安装在楼房顶部。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052601.webp" alt="" loading="lazy"></p>
<p>它类似于转经筒，有一根垂直的转轴，封装在一个圆筒内。风穿过圆筒，就会带动转轴，进行发电。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052602.webp" alt="" loading="lazy"></p>
<p>它很适合那些没有足够阳光、不适合太阳能发电的城市。看来以后，城市不会有空屋顶，要么是光伏板，要么就是风力发电机。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://medium.com/@faizan711/what-are-webhooks-d02e88b77359" target="_blank" rel="noreferrer">webhook 是什么？</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061014.webp" alt="" loading="lazy"></p>
<p>本文解释 webhook 的概念，它其实是一种事件通知机制，既可以节省资源，又可以及时获得最新状态。</p>
<p>2、<a href="https://linuxiac.com/how-to-install-java-on-ubuntu-24-04-lts/" target="_blank" rel="noreferrer">如何在 Linux 安装 Java</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051002.webp" alt="" loading="lazy"></p>
<p>一篇初学者教程，以 Ubuntu 为例，详细介绍 Java 的安装，以及一些基本概念，比如 OpenJDK 和 OpenJRE 的区别。</p>
<p>3、<a href="https://tommihovi.com/2024/05/demystifying-cookies-and-tokens/" target="_blank" rel="noreferrer">Cookie 与 Token</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061003.webp" alt="" loading="lazy"></p>
<p>本文介绍 Cookie 与 Token 的概念，各自的适用场景。</p>
<p>4、<a href="https://maciejwalkowiak.com/blog/postgres-uuid-primary-key/" target="_blank" rel="noreferrer">PostgreSQL 的 UUID 主键</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070710.webp" alt="" loading="lazy"></p>
<p>本文讨论将 UUID 格式作为 PostgreSQL 数据库主键的最佳实践。</p>
<p>5、<a href="https://benhoyt.com/writings/hash-table-in-c/" target="_blank" rel="noreferrer">如何用 C 语言实现哈希表</a>（英文）</p>
<p>一篇 C 语言教程，详细讲解如何实现一个简单的哈希表。</p>
<p>6、<a href="https://rootsofprogress.org/steam-engine-origins" target="_blank" rel="noreferrer">蒸汽机的起源</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023113001.webp" alt="" loading="lazy"></p>
<p>本文介绍蒸汽机的历史，它是怎么发明和制造出来的。它配有大量动画示例，这是文章的亮点。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/kasmtech/KasmVNC" target="_blank" rel="noreferrer">KasmVNC</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024033102.webp" alt="" loading="lazy"></p>
<p>一个远程桌面的 VNC 软件，不需要客户端，只要服务器安装后，就可以通过浏览器访问。类似的软件还有 <a href="https://guacamole.apache.org/" target="_blank" rel="noreferrer">Apache Guacamole</a>。</p>
<p>2、<a href="https://flet.dev/" target="_blank" rel="noreferrer">Flet</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070707.webp" alt="" loading="lazy"></p>
<p>一个 Python 的跨平台图形界面的框架，相当于用 Python 脚本写 Flutter</p>
<p>3、<a href="https://github.com/sebastianwessel/quickjs" target="_blank" rel="noreferrer">QuickJS</a></p>
<p>一个 npm 模块，使用 WebAssembly 建立了一个沙箱，让 JS 代码在沙箱中运行。</p>
<p>4、<a href="https://github.com/szimek/sharedrop" target="_blank" rel="noreferrer">ShareDrop</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070809.webp" alt="" loading="lazy"></p>
<p>一个开源的 Web 应用，允许用户在局域网里通过 WebRTC 分享文件。如果不在同一局域网，可以进入同一个页面进行分享。</p>
<p>5、<a href="https://github.com/ElliotKillick/rss2newsletter" target="_blank" rel="noreferrer">rss2newsletter</a></p>
<p>将 RSS 转换成邮件发送，用于自建邮件列表。</p>
<p>6、<a href="https://github.com/gvcgo/asciinema/blob/main/docs/README_CN.md" target="_blank" rel="noreferrer">asciinema</a></p>
<p>终端录屏工具 asciinema 的跨平台版本，使用 Go 语言编写。（<a href="https://github.com/ruanyf/weekly/issues/4792" target="_blank" rel="noreferrer">@moqsien</a> 投稿）</p>
<p>7、<a href="https://github.com/ayangweb/EcoPaste" target="_blank" rel="noreferrer">EcoPaste</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024071102.webp" alt="" loading="lazy"></p>
<p>开源的多平台剪切板管理工具。（<a href="https://github.com/ruanyf/weekly/issues/4798" target="_blank" rel="noreferrer">@ayangweb</a> 投稿）</p>
<p>8、<a href="https://github.com/winterx/color4bg.js" target="_blank" rel="noreferrer">color4bg.js</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024071103.webp" alt="" loading="lazy"></p>
<p>生成动态、抽象的背景图的工具。（<a href="https://github.com/ruanyf/weekly/issues/4805" target="_blank" rel="noreferrer">@winterx</a> 投稿）</p>
<h2 id="关于-ai" tabindex="-1">关于 AI <a class="header-anchor" href="#关于-ai" aria-label="Permalink to &quot;关于 AI&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.memfree.me/" target="_blank" rel="noreferrer">MemFree</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070906.webp" alt="" loading="lazy"></p>
<p>一个混合 AI 搜索引擎，代码<a href="https://github.com/memfreeme/memfree" target="_blank" rel="noreferrer">开源</a>，可以自托管。（<a href="https://github.com/ruanyf/weekly/issues/4787" target="_blank" rel="noreferrer">@ahaapple</a> 投稿）</p>
<p>2、<a href="https://voicechanger.im/" target="_blank" rel="noreferrer">VoiceChanger.im</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070502.webp" alt="" loading="lazy"></p>
<p>该网站可以克隆语音，以及文本转语音，免费使用。（<a href="https://github.com/ruanyf/weekly/issues/4775" target="_blank" rel="noreferrer">@dddm25896</a> 投稿）</p>
<p>3、<a href="https://www.apifaucet.com/" target="_blank" rel="noreferrer">共享 ChatGPT</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070501.webp" alt="" loading="lazy"></p>
<p>这个网站让你登入共享账号，免费使用 ChatGPT。（<a href="https://github.com/ruanyf/weekly/issues/4773" target="_blank" rel="noreferrer">@740400019</a> 投稿）</p>
<p>4、<a href="https://photo2poem.top/" target="_blank" rel="noreferrer">诗境</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070907.webp" alt="" loading="lazy"></p>
<p>根据上传的照片匹配诗句，生成分享卡片。（<a href="https://github.com/ruanyf/weekly/issues/4744" target="_blank" rel="noreferrer">@gui66497</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="http://ythunt.com/" target="_blank" rel="noreferrer">YTHunt</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070708.webp" alt="" loading="lazy"></p>
<p>Youtube 热门视频的实时精选。</p>
<p>2、<a href="https://linear.axler.net/" target="_blank" rel="noreferrer">Linear Algebra Done Right</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023103002.webp" alt="" loading="lazy"></p>
<p>一本英文的线性代数本科生教材，免费阅读。类似的教材还有<a href="https://www.math.brown.edu/streil/papers/LADW/LADW.html" target="_blank" rel="noreferrer">《Linear Algebra Done Wrong》</a>。</p>
<p>3、<a href="https://book.mixu.net/css/" target="_blank" rel="noreferrer">CSS 布局教程</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022914.webp" alt="" loading="lazy"></p>
<p>一组系列文章，介绍 CSS 布局的概念和各种实现方法。</p>
<p>4、<a href="https://webcamaze.engineering.zhaw.ch/watchingtheworld/" target="_blank" rel="noreferrer">随机摄像头</a></p>
<p>该网站从13000个世界各地的在线摄像头，随机选出9个，展示此刻的世界某个角落。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122301.webp" alt="" loading="lazy"></p>
<p>它还按照内容，对这些摄像头进行了分类（机场、动物、车辆等等），可以分类查看。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.ancientoriginsunleashed.com/p/is-the-10000-year-old-yonaguni-monument" target="_blank" rel="noreferrer">与那国岛水下遗址</a></p>
<p>日本与那国岛的水下，有一处神秘的遗址。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070701.webp" alt="" loading="lazy"></p>
<p>巨石仿佛都被切割过，切面都是平整的，垂直地堆叠在一起。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070702.webp" alt="" loading="lazy"></p>
<p>有些科学家认为，这是人工遗址，另一些科学家认为这是自然原因造成的。目前没有定论，但是自然原因的可能性大一些，因为与那国岛历史上没有大量人口，无法完成这样巨大的工程。</p>
<p>2、<a href="https://www.archdaily.cn/cn/784175/zhe-xie-fang-ge-zhi-ceng-jing-bei-yong-yu-she-ji-chao-ji-ma-li" target="_blank" rel="noreferrer">超级马里奥的手稿</a></p>
<p>1985年，任天堂的著名游戏《超级马里奥》正式发行。跟今天不一样，这个游戏的设计稿是手绘的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032401.webp" alt="" loading="lazy"></p>
<p>设计师先在纸上画出游戏的样子，然后再交给程序员去实现。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032402.webp" alt="" loading="lazy"></p>
<p>如果要改动设计，就会非常麻烦。现在留下来的设计图，充满了涂改液的修改痕迹（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032403.webp" alt="" loading="lazy"></p>
<p>单独的手绘图还不足以表达意图，旁边都做了文字说明。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032404.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032405.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.kitze.io/posts/saddest-just-ship-it-story-ever" target="_blank" rel="noreferrer">一个悲伤的软件发布故事</a></p>
<p>2018年1月1日，我决定写一个应用程序。</p>
<p>几天后，最小可用原型写好了。我不是一个优秀的程序员，但是这个程序很简单，所以写得很快。我把版本定为 0.0.1 alpha。</p>
<p>我本可以发布它，但是我想再加一个功能，用户可能会更喜欢，就没发布。</p>
<p>后来，我断断续续加了几个功能，是时候发布了。我又犹豫了，我想不如把手机 App 也一起做出来，否则留不住用户。于是，我花了几个月，去学习 React Native，来开发手机 App。</p>
<p>转眼两年过去了，我在 Web、React Native、Expo、GraphQL 这些技术的迷宫里面徘徊，总是感觉技术堆栈不顺手，许多地方需要改动，没有好的解决方案。</p>
<p>最终，我灰心了，停止开发，放弃了发布该应用程序的想法。</p>
<p>最近，我又把这个程序找出来，开始使用它。我马上意识到，它缺少很多功能，我要么重新开发它，要么去找别人写的替代方案。</p>
<p>我决定使用别人写的程序。当我滚动他们的登陆页面时，我既高兴又愤怒。高兴的是，有人解决了我想解决的问题，仿佛他们读懂了我的想法并实现了出来。愤怒的是我放弃了，如果我坚持下来，现在这个程序应该是我写的。我没有及时发布，我行动太慢了。</p>
<p>现在我不再需要编码了。世界永远不会看到我的程序，但我在上面浪费了很多时间。这种感情真复杂。</p>
<p>然后，就是最悲伤的部分。我在他们的程序里面注册了一个账户，仔细看了帮助中心，觉得他们做得很好。等到30天试用期结束了，我默默拿出了信用卡，成为了付费用户。</p>
<p>想到我是一个从未发布的失败者，我不禁流下了眼泪。</p>
<p>这个故事的教训就是。不要觉得自己的应用程序还不完善、笨重、有缺陷、缺少功能、没有人会使用等等。如果它可以运行，可以完成基本功能，你就发布它。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>具身智能（有物理形态的人工智能）是实现通用人工智能的最有效途径。只有结合了身体和感知，人工智能才有“活着”的感觉。</p>
<p>-- <a href="https://k.sina.com.cn/article_7517400647_1c0126e4705905elig.html" target="_blank" rel="noreferrer">王兴兴</a>，宇树科技创始人</p>
<p>2、</p>
<p>我没有选择去健身房锻炼，而是养了15只小鸡，它们同样要求你弯腰、深蹲并搬运重物。</p>
<p>而且，你没法偷懒，每天一定要去照顾它们，否则它们会死掉。这还有一个额外的好处，就是你会得到鸡蛋。</p>
<p>-- <a href="https://text.npr.org/g-s1-6784" target="_blank" rel="noreferrer">《养鸡代替健身》</a></p>
<p>3、</p>
<p>大学课程《计算机体系结构》，选择的 CPU 往往不是流行的架构，比如 x86 和 ARM，而是一些很原始、早被淘汰的 CPU。</p>
<p>原因是这门课的目的是架构的思想，而不是细节，因此选择一个“原始” CPU 更有帮助。</p>
<p>-- <a href="https://academia.stackexchange.com/questions/209300/when-teaching-computer-architecture-why-are-universities-using-obscure-or-even" target="_blank" rel="noreferrer">StackExchange</a></p>
<p>4、</p>
<p>信息技术的发展，并没有帮助人类治愈癌症。原因不是生物学缺乏数学或计算人才，而是生物系统不是数学系统，它的复杂性和不可预测性，限制了计算机的用处。</p>
<p>-- <a href="https://www.writingruxandrabio.com/p/why-havent-biologists-cured-cancer" target="_blank" rel="noreferrer">《为什么生物学家没有治愈癌症》</a></p>
<p>5、</p>
<p>提高管理效率往往违背公司大多数员工的利益，因为这相当于缩减预算。</p>
<p>-- <a href="https://yosefk.com/blog/advantages-of-incompetent-management.html" target="_blank" rel="noreferrer">《管理不善的优点》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/07/weely-issue-261.html" target="_blank" rel="noreferrer">黑客马拉松的正确方式</a>（2023 #261）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/06/weekly-issue-211.html" target="_blank" rel="noreferrer">虚拟商品可以拉动 GDP</a>（2022 #211）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/06/weekly-issue-161.html" target="_blank" rel="noreferrer">再见了，学术硕士</a>（2021 #161）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/06/weekly-issue-111.html" target="_blank" rel="noreferrer">智能电视的误区</a>（2020 #111）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202407/bg2024071107.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 307 期）：不要看重 Product Hunt]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-307</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-307</guid>
            <pubDate>Fri, 05 Jul 2024 16:20:51 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
西双版纳的中国科学]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-307-期-不要看重-product-hunt" tabindex="-1">科技爱好者周刊（第 307 期）：不要看重 Product Hunt <a class="header-anchor" href="#科技爱好者周刊-第-307-期-不要看重-product-hunt" aria-label="Permalink to &quot;科技爱好者周刊（第 307 期）：不要看重 Product Hunt&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4743" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070203.webp" alt="" loading="lazy"></p>
<p>西双版纳的中国科学院热带植物园，萤火虫进入爆发期。（<a href="https://www.sohu.com/a/788850308_120815119" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="不要看重-product-hunt" tabindex="-1">不要看重 Product Hunt <a class="header-anchor" href="#不要看重-product-hunt" aria-label="Permalink to &quot;不要看重 Product Hunt&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.producthunt.com/" target="_blank" rel="noreferrer">Product Hunt</a> 是一个美国网站，专门分享新产品。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070311.webp" alt="" loading="lazy"></p>
<p>它的首页有一张实时榜单，显示当天最受欢迎的新产品，排名来自访问者的投票。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070312.webp" alt="" loading="lazy"></p>
<p>很多开发者非常看重这个网站，会在上面发布自己的作品，并把它的 Logo 挂上自己的产品页面，显示得到了多少票。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070313.webp" alt="" loading="lazy"></p>
<p>上图显示，这个产品得到了651票。于是，你就可以宣传这件事，“我们的产品排名 Product Hunt 当天（或者当周）第一。”</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070404.webp" alt="" loading="lazy"></p>
<p><strong>我一直对 Product Hunt 不以为然，觉得它的排名压根不重要。</strong></p>
<p>本周，“黑客新闻”论坛上，正好有一位读者写了<a href="https://news.ycombinator.com/item?id=40844727" target="_blank" rel="noreferrer">一篇文章</a>，跟我的看法一样，题目就叫《不要看重 Product Hunt》，说得非常好。</p>
<p>为什么 Product Hunt 排名不重要？</p>
<p>原因很简单，<strong>它的访问者不是你的真正客户</strong>。</p>
<p>它的大多数访问者都是产品经理、设计师或创始人。其实也不是真正的创始人，而是想成为创始人的人，因为前者太忙了，没空经常来看 Product Hunt 又出现了什么新产品。</p>
<p>你的真正客户不会访问 Product Hunt，他们不关心新产品的排名。程序员和开发者也不会来，而是去专门的程序员论坛或者编程网站。</p>
<p><strong>产品经理和设计师，才是最关心新产品的人</strong>，因为他们想为自己的项目寻找想法和灵感，把握当前的趋势，捕捉风口出现的迹象。这种心态注定了，他们感兴趣的是产品的创意，而不是产品本身。</p>
<p>这样的人投票给你的产品，并不意味着看好这个产品，更不意味着成为你的客户，而是意味着<strong>他们非常可能抄袭你的想法</strong>。</p>
<p>Pruduct Hunt 的投票，不等于客户的投票。就算你的产品得了1000票，如果投票者不使用它，那就不会转化成你的客户，因此毫无用处。</p>
<p>启动一个新产品的正确方式，不是去 Product Hunt 打榜，而是<strong>找到你的真正客户，面对他们宣传，直接把产品信息传递给他们</strong>。</p>
<p>举例来说，你做了一个人力资源的 SaaS 产品，人力主管是你的用户。他们不会来 Product Hunt，所以你不应该在那里发布产品，而应该去 LinkedIn 找到的每一位人力主管的联系方式，发邮件给他们，说你可以为他们解决什么问题。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070405.webp" alt="" loading="lazy"></p>
<p>你也可以在社交平台上，针对目标用户投放广告，都会比 Product Hunt 的排名更有效果，因为真正的客户看到的机会更大。</p>
<p>总之，<strong>你的目标客户在哪里，就去哪里推广你的产品</strong>。</p>
<p>Product Hunt 的意义在于，可能会引起风险投资家的注意。另外，它提供了一个场所，让你展示营销材料。</p>
<p>但是，就算成功拿到了投资，这也不重要。</p>
<p>决定公司命运的，不是你的投资者，而是你的客户。如果没有客户，公司最终还是活不下去。你最重要的任务是找到客户，越多越好，Product Hunt 对此帮助不大。</p>
<h2 id="上周末-稀土开发者大会" tabindex="-1">上周末，稀土开发者大会 <a class="header-anchor" href="#上周末-稀土开发者大会" aria-label="Permalink to &quot;上周末，稀土开发者大会&quot;">&ZeroWidthSpace;</a></h2>
<p>上周末，“稀土开发者大会 2024”在北京顺利举行，很多读者朋友都去了吧。</p>
<p>现场非常热闹，1500多人到场，酒店的场地都挤满了，大家看看照片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070409.webp" alt="" loading="lazy"></p>
<p>人气最旺的，莫过于外场的 AI 展区、“海洋航行”主题 IP 体验区、动手实验室 Code Lab，那里可以跟产品互动，现场动手玩。</p>
<p>下面告诉大家一个好消息，<strong>5位主论坛嘉宾、12位出品人、70余位技术专家的所有演讲，已经全部上网了</strong>。</p>
<p>大家进入 <a href="https://conf.juejin.cn/xdc2024/" target="_blank" rel="noreferrer">conf.juejin.cn</a>，就可以查看所有演讲的录像。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070411.webp" alt="" loading="lazy"></p>
<p>公众号“掘金开发者社区”（上面二维码）还有视频片段，包括演讲金句和精彩时刻，欢迎关注。<strong>PPT 整理完成后，马上开放下载，也会在那里通知</strong>。或者进入稀土掘金官网 <a href="https://juejin.cn/" target="_blank" rel="noreferrer">juejin.cn</a>，关注“稀土君”发文。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.cnn.com/2024/06/25/style/paris-2024-olympic-village/index.html" target="_blank" rel="noreferrer">环保奥运会</a></p>
<p>巴黎奥运会将于7月26日开幕。组委会宣布，这是一届环保的奥运会。</p>
<p>但是，它的环保措施让人有一种简陋的感觉，似乎更大的目的是为了省钱，毕竟巴黎市的财政并不宽裕。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070212.webp" alt="" loading="lazy"></p>
<p>首先，这次的奥运村不是专门新建的，而是现有楼房改建的（上图）。</p>
<p>阳台也是改建过程中添加的简易阳台（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070213.webp" alt="" loading="lazy"></p>
<p>室内就更简单了，床是纸板床（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070214.webp" alt="" loading="lazy"></p>
<p>甚至椅子（下图）也是纸板做的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070215.webp" alt="" loading="lazy"></p>
<p>很多人最不习惯的地方大概是，所有房间都没有装空调，使用的是地热调温（即跟地下岩层进行热交换）。</p>
<p>如果你还是觉得热（大概率如此），可以向组委会借用那种放在地板上的空调扇。</p>
<p>2、<a href="https://theconversation.com/what-makes-a-good-tree-we-used-ai-to-ask-birds-233281" target="_blank" rel="noreferrer">人造树冠</a></p>
<p>澳大利亚东南部，曾经有数百万平方公里的森林，如今只剩下不到5%。</p>
<p>很多大树消失了，或者变成了电线杆，对于栖息的鸟类是一场灾难。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070208.webp" alt="" loading="lazy"></p>
<p>一个澳大利亚研究团队，希望重建鸟类栖息地。他们使用人工智能，分析怎样的树冠最吸引鸟类。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070209.webp" alt="" loading="lazy"></p>
<p>然后根据分析结果，他们画出了设计图，在电线杆安装人造树冠。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070210.webp" alt="" loading="lazy"></p>
<p>我有点好奇，这种树冠造出来，会有鸟类喜欢住在里面吗？</p>
<p>3、<a href="https://soranews24.com/2024/06/30/fighting-mild-hunger-with-a-japanese-soda-that-turns-into-jelly-in-the-stomach%e3%80%90taste-test%e3%80%91/" target="_blank" rel="noreferrer">饱腹苏打水</a></p>
<p>一家日本公司推出了一种“饱腹苏打水”，只要喝下，就不饿了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070218.webp" alt="" loading="lazy"></p>
<p>这种饮料会跟胃酸发生化学反应，变成果冻状，从而产生饱腹感，缓解饥饿。</p>
<p>根据喝过的人说，它确实有效，可以坚持两个小时，然后你会重新感到饥饿。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070219.webp" alt="" loading="lazy"></p>
<p>一罐的容量是190毫升，售价为1.5美元（约11元人民币），不便宜。不过，它提醒我们，减肥可以吃果冻，既能产生饱腹感，而且热量低。</p>
<p>4、<a href="https://newatlas.com/marine/seabike-swimming-propeller/" target="_blank" rel="noreferrer">水下自行车</a></p>
<p>船只依靠螺旋桨推动前进，那么人类装上螺旋桨，不就能长距离游泳了吗？</p>
<p>一家法国公司真的发明了这样的装置，让你在水里踩螺旋桨，有点像水下自行车。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050901.webp" alt="" loading="lazy"></p>
<p>它固定在两腿之间，有两个踏板。你用力踩踏板，就会带动后面的螺旋桨，将你推动前进。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050902.webp" alt="" loading="lazy"></p>
<p>该公司表示，该装置配合水肺，可以让你在水中轻松长距离行进。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050903.webp" alt="" loading="lazy"></p>
<p>另外，它也可以逆向行进，只是倒车的话，你需要把它放在脑袋前面，双手转动踏板，姿势就会有点古怪。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://new.qq.com/rain/a/20240701A04VGO00" target="_blank" rel="noreferrer">上海 MWC 参观记</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070207.webp" alt="" loading="lazy"></p>
<p>上海最近举办了世界移动通信大会，本文介绍大会展出的 5.5G 通信和 AI 应用。</p>
<p>2、<a href="https://blog.brachiosoft.com/posts/git/" target="_blank" rel="noreferrer">Git 的故事</a>（繁体中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070206.webp" alt="" loading="lazy"></p>
<p>一篇长文，详细介绍 Git 诞生历史，也说到了 GitHub 的来历。</p>
<p>3、<a href="https://justyy.com/archives/65184" target="_blank" rel="noreferrer">我在亚马逊 AWS 云 On Call</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070306.webp" alt="" loading="lazy"></p>
<p>从2020年到2021年，我在亚马逊（AWS 云）担任软件开发工程师（SDE）。有人说 SDE 代表”Someone Does Everything”（什么都做的人），这相当准确。（<a href="https://github.com/ruanyf/weekly/issues/4739" target="_blank" rel="noreferrer">@DoctorLai</a> 投稿）</p>
<p>4、<a href="https://coryrylan.com/blog/flow-charts-with-css-anchor-positioning" target="_blank" rel="noreferrer">CSS 锚点定位</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062708.webp" alt="" loading="lazy"></p>
<p>Chrome 125 引入了 CSS 锚点定位（Anchor Positioning），这种新语法使得元素之间相对定位变得异常容易。</p>
<p>5、<a href="https://linuxiac.com/how-to-change-docker-data-directory/" target="_blank" rel="noreferrer">如何更改 Docker 的数据目录</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060507.webp" alt="" loading="lazy"></p>
<p>如果 Docker 容器分配的空间不足，如何更改它的数据目录，将其移到其他位置？</p>
<p>6、<a href="https://zacharylee.substack.com/p/memory-management-every-programmer" target="_blank" rel="noreferrer">内存的栈和堆的区别</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043003.webp" alt="" loading="lazy"></p>
<p>本文解释了内存的基本知识，不涉及细节，只解说概念，说得挺好的。</p>
<p>7、<a href="https://www.outsideonline.com/outdoor-adventure/hiking-and-backpacking/lightning-safety-facts-hikers/" target="_blank" rel="noreferrer">关于避雷的误解</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070217.webp" alt="" loading="lazy"></p>
<p>本文提出野外避雷的很多建议都是错的，比如躲在大树下面，或者躲在山洞里，都不能减少雷击风险。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://css.winterveil.net/" target="_blank" rel="noreferrer">Magick.CSS</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032302.webp" alt="" loading="lazy"></p>
<p>一个最简化的 CSS 框架。</p>
<p>2、<a href="https://pulsar-edit.dev/" target="_blank" rel="noreferrer">Pulsar</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024063006.webp" alt="" loading="lazy"></p>
<p>一个跨平台的文本编辑器，代码基础是现已结束的 Atom 编辑器。</p>
<p>3、<a href="https://github.com/o2sh/onefetch" target="_blank" rel="noreferrer">Onefetch</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032409.webp" alt="" loading="lazy"></p>
<p>一个命令行工具，可以显示 Git 仓库的详细统计信息，比如代码行数、体积、贡献者等等。</p>
<p>4、<a href="https://github.com/cunzaizhuyi/hashplate-cn" target="_blank" rel="noreferrer">hashplate-cn</a></p>
<p>一个字符串的哈希函数，生成结果为中国车牌格式，比如“渝G·VGUA1”。（<a href="https://github.com/ruanyf/weekly/issues/4767" target="_blank" rel="noreferrer">@cunzaizhuyi</a> 投稿）</p>
<p>5、<a href="https://pikimov.com/" target="_blank" rel="noreferrer">PIKIMOV</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070211.webp" alt="" loading="lazy"></p>
<p>一个在线软件，用来制作 2D 和 3D 的视频动画，After Effects 的替代品。</p>
<p>6、<a href="https://fireflycard.shushiai.com/" target="_blank" rel="noreferrer">流光卡片</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070305.webp" alt="" loading="lazy"></p>
<p>一个在线工具，生成文字分享的卡片图。（<a href="https://github.com/ruanyf/weekly/issues/4737" target="_blank" rel="noreferrer">@someone1128</a> 投稿）</p>
<p>7、<a href="https://starflare.app/" target="_blank" rel="noreferrer">StarFlare</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070303.webp" alt="" loading="lazy"></p>
<p>一个 Web 应用程序，用来管理你在 GitHub 上给过 star 的项目。（<a href="https://github.com/ruanyf/weekly/issues/4732" target="_blank" rel="noreferrer">@nieheyong</a> 投稿）</p>
<p>8、<a href="https://github.com/huglemon/inwind-landing-page" target="_blank" rel="noreferrer">inWind Landing Page</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070307.webp" alt="" loading="lazy"></p>
<p>一个开源的落地页模板，适合作为产品主页。（<a href="https://github.com/ruanyf/weekly/issues/4746" target="_blank" rel="noreferrer">@huglemon</a> 投稿）</p>
<p>9、<a href="https://github.com/jaywcjlove/copybook-generator" target="_blank" rel="noreferrer">宝宝字帖</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070308.webp" alt="" loading="lazy"></p>
<p>一个开源的 Mac 应用，用来生成字帖，练习书写。（<a href="https://github.com/ruanyf/weekly/issues/4755" target="_blank" rel="noreferrer">@jaywcjlove</a> 投稿）</p>
<p>10、<a href="https://play.google.com/store/apps/details?id=com.earth.wallpaper" target="_blank" rel="noreferrer">Live Earth Wallpaper</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070309.webp" alt="" loading="lazy"></p>
<p>一个安卓 App，每半小时动态更新的卫星影像壁纸。（<a href="https://github.com/ruanyf/weekly/issues/4758" target="_blank" rel="noreferrer">@GongShengyue</a> 投稿）</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://stable-diffusion-art.com/realistic-people/" target="_blank" rel="noreferrer">如何在 Stable Diffusion 生成逼真人像</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024063004.webp" alt="" loading="lazy"></p>
<p>一篇长文，详细介绍各个参数，用来在 Stable Diffusion 生成逼真人像。</p>
<p>2、<a href="https://chromeai.org/" target="_blank" rel="noreferrer">ChromeAI.org</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070401.webp" alt="" loading="lazy"></p>
<p>一个测试 Chrome 浏览器内置的 Gemini Nano 模型的网站。（<a href="https://github.com/ruanyf/weekly/issues/4765" target="_blank" rel="noreferrer">@debugtheworldbot</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.compuserve.com/" target="_blank" rel="noreferrer">CompuServe.com</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023082301.webp" alt="" loading="lazy"></p>
<p>这个网站恐怕绝无仅有，还保留着20年前的样貌，并且每天在更新。它是供电话拨号上网用户使用的，一直保留到了现在。大家可以感受一下20年前的网站是什么样的。</p>
<p>2、<a href="https://infos.imhcg.cn/" target="_blank" rel="noreferrer">英文博客汇聚</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070302.webp" alt="" loading="lazy"></p>
<p>该网站汇总每周的英文技术博客，并提供每篇文章的中文摘要。（<a href="https://github.com/ruanyf/weekly/issues/4730" target="_blank" rel="noreferrer">@hochenggang</a> 投稿）</p>
<p>3、<a href="https://github.com/Ceelog/DictionaryByGPT4" target="_blank" rel="noreferrer">DictionaryByGPT4</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070304.webp" alt="" loading="lazy"></p>
<p>一本 GPT4 生成的英语单词书，收入8000+常用单词，涵盖了词义、例句、词根词缀、变形、文化背景、记忆技巧和小故事。（<a href="https://github.com/ruanyf/weekly/issues/4734" target="_blank" rel="noreferrer">@Ceelog</a> 投稿）</p>
<p>4、<a href="https://picfind.top/" target="_blank" rel="noreferrer">ImageSearch</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070402.webp" alt="" loading="lazy"></p>
<p>一个以图搜图的网站，聚合了百度和谷歌的结果。（<a href="https://github.com/ruanyf/weekly/issues/4769" target="_blank" rel="noreferrer">@DBAAZzz</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.smithsonianmag.com/smart-news/buddha-statue-found-berenike-egypt-180982075/" target="_blank" rel="noreferrer">贝勒尼基佛像</a></p>
<p>2022年，考古学家在埃及港口城市贝勒尼基，发现了一尊佛像。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070201.webp" alt="" loading="lazy"></p>
<p>考古学家认为，这是公元二世纪在埃及本地雕刻的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070202.webp" alt="" loading="lazy"></p>
<p>这是一个重大发现，以前人们只知道，佛教最西传到了阿富汗，这尊佛像证明其实一直传到了古罗马帝国。</p>
<p>2、<a href="https://edition.cnn.com/travel/article/drake-passage-rough-sea-scn/index.html" target="_blank" rel="noreferrer">德雷克海峡</a></p>
<p>德雷克海峡（Drake Passage）位于南美洲与南极洲之间，太平洋和大西洋在这里交汇。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070406.webp" alt="" loading="lazy"></p>
<p>南极大陆的干冷空气与美洲大陆湿暖的气流之间存在气压差，使得这里成为地球上最危险的海域，终年有八级以上大风，狂浪肆虐，无数水手丧生于此。</p>
<p>海峡一侧就是南美洲最南端的合恩角，在这里耸立着一块纪念碑。上面写着，纪念在此处死于海难的至少 10,000 名水手。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020903.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.popularmechanics.com/space/deep-space/a19893704/any-aliens-on-super-earths-would-have-a-tough-time-flying-to-space/" target="_blank" rel="noreferrer">如果地球再大一点，我们就无法探索太空</a></p>
<p>地球是一颗很罕见的星球，它的大小刚刚好。</p>
<p>如果地球再大一点，比如直径增大一倍，那么我们可能就无法离开地球，探索太空。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070407.webp" alt="" loading="lazy"></p>
<p>因为直径增大一倍，星球的质量可能会增大10倍左右，引力可能会强两倍以上，具体取决于行星的成分。</p>
<p>这时，额外的重力一方面有利于生命的形成，因为会产生更厚的大气层，保护地表生命免受有害宇宙射线的伤害。</p>
<p>另一方面，也将难以发射火箭离开地球。10倍重力的情况下，发射同样负载，火箭燃料需要增加三倍左右。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202407/bg2024070408.webp" alt="" loading="lazy"></p>
<p>如果要发射45吨负载（相当于阿波罗登月任务），那么火箭重量将达到大约400,000吨，相当于大金字塔的大小。</p>
<p>想象一下，把金字塔那样的庞然大物发射上天，这只在理论上是可能的，实际上很难做到。</p>
<p>因此，我们寻找外星生命的时候，如果发现重力很大的星球，它上面即使存在智慧生物，也很难飞离这颗星球。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>我们反对浪费粮食，不仅仅因为它会浪费食物，还因为它会浪费大量劳动力和能源。</p>
<p>粮食生产需要田间机械和灌溉泵，需要肥料和杀虫剂，还需要用于制造这些农具的钢铁、铝和塑料。粮食生产过程中，还会发生土壤侵蚀、硝酸盐浸出、生物多样性丧失、抗生素耐药细菌的产生等等问题。只要你浪费粮食，这一切就都浪费掉了。</p>
<p>-- 瓦茨拉夫·斯密尔（Vaclav Smil），加拿大著名能源科学家</p>
<p>2、</p>
<p>我们花费了地球上一半的工程努力，来为每个应用程序添加 AI 聊天机器人，而世界上一半的行业还没有弄清楚如何经常备份数据库。</p>
<p>推出 AI 产品的公司数量，远远超过了实际用例的数量。他们的大多数人只是骗子和炒作者。</p>
<p>-- <a href="https://ludic.mataroa.blog/blog/i-will-fucking-piledrive-you-if-you-mention-ai-again/" target="_blank" rel="noreferrer">《如果你再提 AI，我就要发作了》</a></p>
<p>3、</p>
<p>日本公共交通非常发达，几乎每个角落都能到达。其中一个原因是，日本有很多个人的小型零售企业（夫妻店），他们需要发达的公共交通带来人流，政府不得不维持公交系统。</p>
<p>-- <a href="https://www.noahpinion.blog/p/secrets-of-japanese-urbanism-part" target="_blank" rel="noreferrer">《日本城市化的秘密》</a></p>
<p>4、</p>
<p>我知道许多开发者不喜欢前端，主要有两个原因。一是前端太受流行风潮的影响，二是前端开发者主要由年轻的/新入行的/自学的人员组成，他们“不断发现”新范式。</p>
<p>这使得前端技术极不稳定，你学不到真正长久的东西，一切都每过六个月到两年重复一次，这就像看着只活一天的蜉蝣在争论长期的政治问题一样。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=37133035" target="_blank" rel="noreferrer">Hacker News 用户</a></p>
<p>5、</p>
<p>隐私可能是最近才出现的概念。我小时候住在一个3000人的小镇上，每个人都知道每个人在做什么。那时没有私人电话，邮政局长可以看到每个人收到的邮件。</p>
<p>工业化导致了巨型城市的出现，大量人口的聚集产生了隐私感，而科技的发展可能使得隐私再次丧失。</p>
<p>-- <a href="https://www.theverge.com/2013/11/20/5125922/vint-cerf-google-internet-evangelist-says-privacy-may-be-anomaly" target="_blank" rel="noreferrer">文特·瑟夫</a> （Vint Cerf），TCP 协议的发明者之一</p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/06/weekly-issue-260.html" target="_blank" rel="noreferrer">你的旅程不会停在 Day 1</a>（2023 #260）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/06/weekly-issue-210.html" target="_blank" rel="noreferrer">为什么软件变得复杂</a>（2022 #210）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/05/weekly-issue-160.html" target="_blank" rel="noreferrer">中年码农的困境</a>（2021 #160）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/06/weekly-issue-110.html" target="_blank" rel="noreferrer">如果不能去美国上市</a>（2020 #110）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202407/bg2024070203.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 306 期）：信息就像糖一样上瘾]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-306</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-306</guid>
            <pubDate>Fri, 28 Jun 2024 16:20:36 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
香港屯门码头，海边]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-306-期-信息就像糖一样上瘾" tabindex="-1">科技爱好者周刊（第 306 期）：信息就像糖一样上瘾 <a class="header-anchor" href="#科技爱好者周刊-第-306-期-信息就像糖一样上瘾" aria-label="Permalink to &quot;科技爱好者周刊（第 306 期）：信息就像糖一样上瘾&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4550" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062704.webp" alt="" loading="lazy"></p>
<p>香港屯门码头，海边的夜色。（<a href="https://www.facebook.com/groups/553511078046085/permalink/8085453638185087" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="信息就像糖一样上瘾" tabindex="-1">信息就像糖一样上瘾 <a class="header-anchor" href="#信息就像糖一样上瘾" aria-label="Permalink to &quot;信息就像糖一样上瘾&quot;">&ZeroWidthSpace;</a></h2>
<p>工业革命有一个很少人提到的后果，就是人类可以大量生产糖了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062505.webp" alt="" loading="lazy"></p>
<p>古时候，糖主要来自甘蔗和蜂蜜，难以大量生产。所以，古人的菜肴不放糖，主要依靠食物本身的甜味。可以想象，古代的大部分食物，尤其是日常食品，应该是不好吃的。</p>
<p><strong>一旦糖大量生产，人类就疯狂地爱上了它</strong>。我们喜欢糖，喜欢到现在的大部分食物，都必须添加糖，比如饮料、糕点、奶制品，甚至鸡排的配料都包含糖。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062506.webp" alt="" loading="lazy"></p>
<p>对糖上瘾，已经成了一种常见病。百度百科有一个“<a href="https://baike.baidu.com/item/%E7%B3%96%E7%98%BE/5685388" target="_blank" rel="noreferrer">糖瘾</a>”条目，解释上瘾原因是“甜味会带给人愉悦的感觉。”</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062507.webp" alt="" loading="lazy"></p>
<p>科学家认为，<strong>糖会增加多巴胺的分泌，使大脑兴奋，感觉不到饱腹</strong>。通俗地说，就是糖会让你吃得很愉快，从而吃了还想吃，即使已经饱了。</p>
<p>过量摄入糖，是体重超标的根本原因。<strong>糖本身只是一种甜味剂，没有营养，只有热量</strong>，最终都转化为体内脂肪，让你越来越胖。世界卫生组织一直在呼吁<a href="https://www.who.int/zh/news/item/04-03-2015-who-calls-on-countries-to-reduce-sugars-intake-among-adults-and-children" target="_blank" rel="noreferrer">少吃糖</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062508.webp" alt="" loading="lazy"></p>
<p>不过，我今天想谈的不是糖，而是最近看到的一篇<a href="https://www.gurwinder.blog/p/the-intellectual-obesity-crisis" target="_blank" rel="noreferrer">文章</a>，里面有一个很有趣的观点：<strong>信息就像糖，让人上瘾</strong>。</p>
<p>作者列举了，信息与糖的相似之处。</p>
<p><strong>（1）低成本的大量生产</strong>。信息革命之后，人类就像生产糖一样，大量生产信息。</p>
<p>信息不仅生产成本低，传播成本更低，可以接近零成本地到达消费者。</p>
<p><strong>（2）上瘾机制相同</strong>。2019年，加州大学伯克利分校的一项研究发现，信息也会刺激大脑产生多巴胺，跟糖的作用机制相同。</p>
<p>所以，看到一则吸引人的信息，跟吃一件甜点，带给你的满足感是一样的。你会对信息上瘾，看了还想看，具体表现就是放不下手机，划了又划。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062509.webp" alt="" loading="lazy"></p>
<p><strong>（3）垃圾信息泛滥</strong>。就像垃圾食品流行一样，人类对信息上瘾的后果，就是垃圾信息的大量供给。</p>
<p>生产商发现，那些最刺激多巴胺的信息，有最多的阅读量，可以赚到更多的钱。于是，垃圾信息就被大量生产，变得无处不在。</p>
<p>人类已经陷入了这样一种境地，最容易获得的食品是垃圾食品，最容易接触到的信息是垃圾信息。</p>
<p><strong>（4）思维“发胖”</strong>。就像垃圾食品让人体发胖一样，垃圾信息也会让思维发胖。</p>
<p>垃圾信息降低你的思考水平，将没意义的内容充斥你的大脑，分散你的注意力，堵塞你的思考，让你思维迟缓，判断力下降。</p>
<p>综上所述，信息上瘾与糖瘾一样有危害，需要积极防治。健康生活不仅少吃糖，还要少接触垃圾信息。</p>
<p>但是，就像躲不开糖一样，生活中根本没机会躲开垃圾信息。我们只能自我克制，反复告诫自己，远离垃圾信息，防止信息上瘾。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.wired.com/story/amazon-ai-cameras-emotions-uk-train-passengers/" target="_blank" rel="noreferrer">摄像头情绪检测</a></p>
<p>英国火车站的摄像头，正在使用一种新技术，监控火车站。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061803.webp" alt="" loading="lazy"></p>
<p>它不进行人脸识别，而是进行情绪识别。</p>
<p>它会根据脸部表情，判断每个人的情绪，到底是快乐、悲伤，还是愤怒。如果你的情绪异常，就说明很可疑，它就会通知工作人员，查看怎么回事。</p>
<p>这提醒我们，以后进入公共场合，需要注意自己的表情，以免招来麻烦。</p>
<p>2、<a href="https://www.tomshardware.com/tech-industry/optical-pcie-70-connection-hits-a-blazing-128-gts" target="_blank" rel="noreferrer">PCIe 光通信</a></p>
<p>目前，在计算机的内部，CPU 与周边设备都使用 PCIe 接口进行通信。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061804.webp" alt="" loading="lazy"></p>
<p>PCIe 接口与设备之间，则是使用铜手指传输数据。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061805.webp" alt="" loading="lazy"></p>
<p>但是，铜手指有物理限制，到了一定程度后，传输速率就上不去了。</p>
<p>本月早些时候，一家美国公司公布了 PCIe 7.0 版的接口原型，放弃了铜手指，改用光纤传输数据，比目前主流的 PCIe 4.0 版快了8倍。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061806.webp" alt="" loading="lazy"></p>
<p>上图的黄线就是光纤，将设备连接到主板。以后，凡是大带宽的通信，可能都不使用铜了，而改用光纤。</p>
<p>3、<a href="https://news.northeastern.edu/2023/04/21/parrots-talking-video-calls/" target="_blank" rel="noreferrer">鹦鹉的视频聊天</a></p>
<p>美国科学家做了一个实验，让鹦鹉视频聊天。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120407.webp" alt="" loading="lazy"></p>
<p>科学家在笼子里放了一个平板电脑，两只鹦鹉通过平板电脑见面，互相通话（鸣叫）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120405.webp" alt="" loading="lazy"></p>
<p>科学家发现，鹦鹉很喜欢视频聊天，会连续跟屏幕互动几个小时。</p>
<p>最神奇的地方是，一旦它们学会如何呼叫对方。它们就会自己打开关着的平板电脑，主动找对方聊天。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120408.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120406.webp" alt="" loading="lazy"></p>
<p>这件事是不是说明，群居动物都有可能网络上瘾？</p>
<p>4、<a href="https://www.bbc.com/news/articles/cg33kgd81mvo" target="_blank" rel="noreferrer">癫痫治疗</a></p>
<p>癫痫是一种神经系统的常见病，发病时会不由自主抽搐和丧失意识。</p>
<p>它的原因是脑电波异常，也就是大脑里面有异常的电流，通过神经系统，导致意识和行为失常。</p>
<p>最近，英国完成了世界第一例大脑植入，治疗癫痫。患者是一个小男孩，每天都会严重发作好几次。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062705.webp" alt="" loading="lazy"></p>
<p>医生在他的大脑里面，植入了一个3.5厘米 x 3.5厘米的神经刺激器，通过电极连接脑神经。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062706.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062707.webp" alt="" loading="lazy"></p>
<p>这个装置会不断向神经系统放电，干扰异常的脑电波信号，从而减少癫痫的发作。据说，小男孩手术后，发作次数就大幅下降。</p>
<p>联想到马斯克正在搞的“脑机接口”，我感觉人脑和电脑的物理连接，可能很快就会变成现实。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.landiannews.com/archives/104662.html" target="_blank" rel="noreferrer">GitCode 全盘搬运 GitHub</a>（中文）</p>
<p>国内代码托管服务 GitCode，全盘搬运了 GitHub，将后者的仓库一模一样放到自己网站上。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062703.webp" alt="" loading="lazy"></p>
<p>开源代码或许可以搬运，但把作者账户也一起搬运过来，未免太过份了。</p>
<p>2、<a href="https://kilianvalkhof.com/2024/javascript/the-problem-with-new-url-and-how-url-parse-fixes-that/" target="_blank" rel="noreferrer">new URL() 的问题</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052403.webp" alt="" loading="lazy"></p>
<p>JS 的 <code>URL()</code> 用来解析网址，遇到非法字符串会抛错。作者认为这是一个非常糟糕的设计，并给出了解决办法。</p>
<p>3、<a href="https://www.scientificamerican.com/article/how-the-guinness-brewery-invented-the-most-important-statistical-method-in/" target="_blank" rel="noreferrer">t 检验是怎么来的</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052705.webp" alt="" loading="lazy"></p>
<p>《科学美国人》杂志的文章，介绍一家英国啤酒厂如何促成统计学 t 检验的诞生，它的含义是什么。可能读起来有点费劲，但是写得不错。</p>
<p>4、<a href="https://jakearchibald.com/2024/attributes-vs-properties/" target="_blank" rel="noreferrer">HTML 属性与 DOM 属性</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042505.webp" alt="" loading="lazy"></p>
<p>一篇前端初级教程，介绍 HTML 元素的属性（attribue）与 DOM 节点的属性（property）的差异，这个地方很容易混淆。</p>
<p>5、<a href="https://www.onsclom.net/posts/javascript-tco" target="_blank" rel="noreferrer">Bun 的 JavaScript 尾调用优化</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010101.webp" alt="" loading="lazy"></p>
<p>JS 语言的服务器运行环境，目前有三种：Node、Deno 和 Bun。前两种使用 V8 引擎，而 Bun 使用 Safari 的 JavaScriptCore 引擎。</p>
<p>它们的“尾调用优化”（TCO）行为不一致，只有 Bun 支持，本文作者进行了测试。</p>
<p>6、<a href="https://romeov.github.io/malicious_ip_addresses/malicious_ip_analysis.html" target="_blank" rel="noreferrer">恶意 IP 地址的可视化</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042604.webp" alt="" loading="lazy"></p>
<p>作者的服务器每天收到几千次恶意访问，本文讲述他如何将这些 IP 地址的物理位置，进行可视化。</p>
<p>7、<a href="https://www.pythonmorsels.com/cli-tools/" target="_blank" rel="noreferrer">Python 的命令行小工具</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060402.webp" alt="" loading="lazy"></p>
<p>Python 自带很多实用的小工具，不用编写脚本，就可以在命令行下直接使用。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.figma.com/slides/" target="_blank" rel="noreferrer">Figma Slides</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062701.webp" alt="" loading="lazy"></p>
<p>Figma 公司新发布的幻灯片制作工具。</p>
<p>2、<a href="https://github.com/plankanban/planka" target="_blank" rel="noreferrer">Planka</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031901.webp" alt="" loading="lazy"></p>
<p>一个 Trello 的开源替代品，可以自己搭建，进行项目管理。</p>
<p>3、<a href="https://github.com/pacexy/flow" target="_blank" rel="noreferrer">Flow</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121908.webp" alt="" loading="lazy"></p>
<p>一款基于浏览器的 Epub 阅读器，可以自己部署。</p>
<p>4、<a href="https://github.com/Librum-Reader/Librum" target="_blank" rel="noreferrer">Librum</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121914.webp" alt="" loading="lazy"></p>
<p>一款开源的桌面软件，用来管理电子书。</p>
<p>5、<a href="https://github.com/plasmicapp/plasmic" target="_blank" rel="noreferrer">Plasmic</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122005.webp" alt="" loading="lazy"></p>
<p>一款 React 框架的无代码/低代码开发工具，可视化生成网站和应用程序。</p>
<p>6、<a href="https://github.com/streetwriters/notesnook" target="_blank" rel="noreferrer">Notesnook</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122009.webp" alt="" loading="lazy"></p>
<p>一个端对端加密的开源笔记本，有 Web 版和跨平台的桌面版。</p>
<p>7、<a href="https://shipfa.st/tools/logo-fast" target="_blank" rel="noreferrer">LogoFast</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122102.webp" alt="" loading="lazy"></p>
<p>一个徽标设计工具。</p>
<p>8、<a href="https://observablehq.com/plot/" target="_blank" rel="noreferrer">Observable Plot</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202304/bg2023043005.webp" alt="" loading="lazy"></p>
<p>D3.js 团队推出的新的图表库，用来做线性图，大大简化了语法。</p>
<p>9、<a href="https://wasp-lang.dev/" target="_blank" rel="noreferrer">Wasp</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121602.webp" alt="" loading="lazy"></p>
<p>一个将 React + Prisma（数据库的 ORM 库）封装在一起的 Node.js 全栈框架，设计目标是尽量像 Rails 一样好用。</p>
<p>10、<a href="https://oxc-project.github.io/docs/guide/usage/linter.html" target="_blank" rel="noreferrer">Oxlint</a></p>
<p>一个 JS 的 Linter 代码检查工具，可以取代 ESLint。它是用 Rust 写的，据称比 ESLint 快50-100倍。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://logogalleria.com/zh-CN/app" target="_blank" rel="noreferrer">Logo Galleria</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062201.webp" alt="" loading="lazy"></p>
<p>免费的在线 AI 徽标制作器。（<a href="https://github.com/ruanyf/weekly/issues/4675" target="_blank" rel="noreferrer">@ddewfrefref</a> 投稿）</p>
<p>2、<a href="https://github.com/bravekingzhang/gpt-frontend-code-gen" target="_blank" rel="noreferrer">React 组件的 AI 生成器</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062503.webp" alt="" loading="lazy"></p>
<p>一个开源的 Web 应用，通过 AI 快速生成 React 组件，用于预览前端效果。（<a href="https://github.com/ruanyf/weekly/issues/4704" target="_blank" rel="noreferrer">@bravekingzhang</a> 投稿）</p>
<p>3、<a href="https://github.com/Richasy/Rodel.Agent" target="_blank" rel="noreferrer">小幻助理</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062504.webp" alt="" loading="lazy"></p>
<p>一个开源的 Windows 桌面应用，可以接入各种 AI 模型，提供聊天、文生图、文本转语音、机器翻译。（<a href="https://github.com/ruanyf/weekly/issues/4706" target="_blank" rel="noreferrer">@Richasy</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://jakelazaroff.com/words/an-interactive-intro-to-crdts/" target="_blank" rel="noreferrer">CRDT 入门介绍</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100502.webp" alt="" loading="lazy"></p>
<p>本文用代码实例详细介绍多人实时协同算法 CRDT。</p>
<p>2、<a href="https://www.igloo.inc/" target="_blank" rel="noreferrer">IGloo</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062501.webp" alt="" loading="lazy"></p>
<p>这是一家区块链公司的主页，全部采用 3D 制作，非常炫酷。</p>
<p>3、<a href="https://jrmf.org/puzzle/" target="_blank" rel="noreferrer">数学小游戏</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041811.webp" alt="" loading="lazy"></p>
<p>这个网站收集各种小朋友可以玩的数学游戏。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://fabulous.systems/posts/2024/06/if-i-ever-get-a-dog-ill-name-it-rover-ms-bob-retrospective/" target="_blank" rel="noreferrer">微软鲍勃</a></p>
<p>1995年，Windows 95 即将发布，用户界面进行了重大升级，与前一个版本 Windows 3.2 完全不同。</p>
<p>微软为了让用户接受新界面，特别发布了一个应用程序，叫做“微软鲍勃”，教你怎么使用新版 Windows。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062401.webp" alt="" loading="lazy"></p>
<p>打开程序，会有一条小狗，充当向导，领你进入一栋住宅。</p>
<p>它的客厅里面有各种物件。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062402.webp" alt="" loading="lazy"></p>
<p>小狗会让你依次点击各个物件，跳出对应的程序，让你熟悉使用方法。</p>
<p>比如，点击桌面上的笔记本，就会跳出一个文本框，让你写一封信。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062403.webp" alt="" loading="lazy"></p>
<p>下面是点击“行事历”跳出的程序。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062404.webp" alt="" loading="lazy"></p>
<p>你还可以进入其他房间，游戏室里会有一些小游戏。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062405.webp" alt="" loading="lazy"></p>
<p>这个软件总体上就是这样，但是微软犯了一个错误：它不是免费提供的，而是要花钱购买。</p>
<p>可以想象，这个软件的销量和评价，都非常糟糕。以至于1996年初，这个项目就被撤销了，寿命不到一年，可能是正式发售的寿命最短的微软产品。</p>
<p>2、<a href="https://kottke.org/24/02/this-artist-used-microsoft-paint-to-create-art-into-her-90s" target="_blank" rel="noreferrer">Microsoft Paint 作画</a></p>
<p>西班牙艺术家孔查·加西亚·赛拉（Concha García Zaera）去年去世了，享年93岁。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020801.webp" alt="" loading="lazy"></p>
<p>她生前一直用 Windows 内置的画图程序（Paint）作画。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020802.webp" alt="" loading="lazy"></p>
<p>她的作品细腻、清新、精美，观众很难意识到，它们都是老太太用鼠标一个像素、一个像素地画出来的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020803.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020804.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020805.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://taylor.town/-10x" target="_blank" rel="noreferrer">如何成为 -10x 工程师</a></p>
<p>互联网行业有一个共识，就是寻找 10x（10倍效率）的工程师。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062801.webp" alt="" loading="lazy"></p>
<p>这样的工程师很难找，现实生活中不一定能遇到，你反而可能遇到 -10x（负10倍效率）的工程师。</p>
<p>所谓 -10x 工程师，就是他不仅不能为团队节省时间，反而每周要浪费团队 400 个小时的工作。</p>
<p>-10x 工程师有以下特征。</p>
<p>（1）他会创造出大量的无效工作。最常见的就是，他会推动建立毫无意义的流程，以及让大家忙于幻灯片、图表、报告、工单管理等等。</p>
<p>（2）他会鼓励团队追求优雅，而不是实用主义。</p>
<p>（3）他会使得团队无法一锤定音地做出任何决定。</p>
<p>（4）他写出冗长的消息/文件，并尽可能广泛地分享，让所有人发表意见并参与讨论。</p>
<p>（5）他编写很慢的程序，比如避免数据库索引、在16核机器上运行单线程程序、不压缩文件。</p>
<p>（6）他编写只有自己看得懂的脚本，并且没有文档。</p>
<p>（7）他编写缓慢的构建，以及缓慢的测试。</p>
<p>（8）他编写无意义的测试用例。</p>
<p>（9）他添加需要大量时间维护的依赖项，迫使工程师单独学习每个库。</p>
<p>（10）他将10名工程师困在一个艰难的项目中，吸引并浪费他们的才智。</p>
<p>（11）他让管理层低估项目的难度，并夸大项目的实用性，直至最后延迟完成或根本无法完成。</p>
<p>（12）他雇用其他毫无生产力的工程师。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>PCRE 是 Perl 语言的正则库，作者 Philip Hazel 在1998年创建了这个库，那一年他54岁。</p>
<p>今天，他80岁了，还在维护这个库。他正在找接班人，准备移交工作。他说，当初做梦也想不到，他要在这个项目上一直工作到2024年。</p>
<p>-- <a href="https://lwn.net/SubscriberLink/978463/608c876c1153fd31/" target="_blank" rel="noreferrer">《自由软件如何劫持 Philip Hazel 的生活》</a></p>
<p>2、</p>
<p>Kubernetes 和微服务都是重量级工具，会让你的软件变得更重。</p>
<p>使用它们之前，请务必想清楚，你能不能处理它们带来的额外的重量、运营成本、工程开销。</p>
<p>-- <a href="https://toot.cat/@plexus/112403882840794498" target="_blank" rel="noreferrer">Arne Brasseur</a></p>
<p>3</p>
<p>如果你过于悲观，就意味着你会做出不必要的牺牲，试图减轻实际上不存在的风险。</p>
<p>-- <a href="https://causal.app/blog/forecasting-with-uncertainty" target="_blank" rel="noreferrer">《极端的假设可能导致更极端的结果》</a></p>
<p>4、</p>
<p>苹果公司发现，大多数用户同时拥有 Mac 电脑和 iPad。</p>
<p>所以尽管两者的硬件几乎一样，但是苹果坚决不让 iPad 运行 macOS 系统，因为这样的话，用户可能只购买 iPad，不再购买 Mac 了。</p>
<p>-- <a href="https://9to5mac.com/2024/05/15/majority-of-mac-users-also-own-ipad/" target="_blank" rel="noreferrer">《macOS 永远不会出现在 iPad 上》</a></p>
<p>5、</p>
<p>公司的 CEO 谈论工作场所文化时，实际上谈的是工作场所控制。</p>
<p>-- <a href="https://scottberkun.com/2021/why-bad-ceos-fear-remote-work/" target="_blank" rel="noreferrer">《为什么糟糕的 CEO 害怕远程工作》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/06/weekly-issue-259.html" target="_blank" rel="noreferrer">第 259 期</a>（2023 #259）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/06/weekly-issue-209.html" target="_blank" rel="noreferrer">程序员是怎样的人</a>（2022 #209）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/05/weekly-issue-159.html" target="_blank" rel="noreferrer">游戏开发者的年薪</a>（2021 #159）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/05/weekly-issue-109.html" target="_blank" rel="noreferrer">播客的价值</a>（2020 #109）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202406/bg2024062704.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 305 期）：随机数，这是一个问题]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-305</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-305</guid>
            <pubDate>Fri, 21 Jun 2024 16:20:19 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
重庆“悦来江湾”公]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-305-期-随机数-这是一个问题" tabindex="-1">科技爱好者周刊（第 305 期）：随机数，这是一个问题 <a class="header-anchor" href="#科技爱好者周刊-第-305-期-随机数-这是一个问题" aria-label="Permalink to &quot;科技爱好者周刊（第 305 期）：随机数，这是一个问题&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4550" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061403.webp" alt="" loading="lazy"></p>
<p>重庆“悦来江湾”公交车站，由几块巨石组成，象征当地江边的鹅卵石。（<a href="http://www.cqyuelai.com/yuelai_content/2023-09/21/content_10592221.htm" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="随机数-这是一个问题" tabindex="-1">随机数，这是一个问题 <a class="header-anchor" href="#随机数-这是一个问题" aria-label="Permalink to &quot;随机数，这是一个问题&quot;">&ZeroWidthSpace;</a></h2>
<p>今天谈谈，怎么生成真正的随机数。</p>
<p>这个问题超难，但有一些很有趣的内容。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061814.webp" alt="" loading="lazy"></p>
<p>首先，编程语言提供的随机数，是伪随机数。</p>
<p>V8 引擎的官网有<a href="https://v8.dev/blog/math-random" target="_blank" rel="noreferrer">一篇文章</a>（下图），特别提醒大家这一点。它内置的随机数不是真随机数，而是伪随机数。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061606.webp" alt="" loading="lazy"></p>
<p>所谓伪随机数，并非真的随机，而是算法得到的。只要初始的种子值相同，算法会给出一样的结果。</p>
<p>JavaScript 和许多其他语言，都有这个问题。所以，遇到特别强调随机的场合，都不应该使用语言内置的随机数生成器。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061815.webp" alt="" loading="lazy"></p>
<p>真随机数需要满足三个条件。</p>
<blockquote>
<p><strong>（1）无法预测。</strong> 随机数不能被猜到，所以必须非常大，否则会被暴力破解。</p>
<p><strong>（2）不能重复。</strong> 每次生成的随机数，不能是一样的。</p>
<p><strong>（3）均匀分布。</strong> 随机数必须平均散布在所有区间，不能集中在某些区间。</p>
</blockquote>
<p><strong>一般来说，只有通过硬件，才能得到真随机数</strong>，单纯的软件算法做不到。</p>
<p>科学家绞尽脑汁，想出各种办法，通过硬件生成随机数。</p>
<p>著名的 <a href="https://www.random.org/" target="_blank" rel="noreferrer">Random.org</a> 就是专门生成一个随机数的网站。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061816.webp" alt="" loading="lazy"></p>
<p>它在全世界部署了多个无线电接收器，专门监听大气无线电波（即大气噪音，可以理解成大气的布朗运动），通过随机的无线电信号来生成随机数。下图是它的早期硬件设备。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061817.webp" alt="" loading="lazy"></p>
<p>因为有硬件支出，使用它的随机数，需要付费。所以，大家可以看到，真随机数是有成本的，不是跑一下程序就可以了。</p>
<p>世界最大的 CDN 服务商 Cloudflare ，为了得到真随机数，做得更绝。</p>
<p>它的三个办公室，每个都有<a href="https://blog.cloudflare.com/harnessing-office-chaos" target="_blank" rel="noreferrer">不一样</a>的随机数生成装置。</p>
<p><strong>（1）旧金山总部</strong>。一进门就有一堵墙，放满了几十盏熔岩灯。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031204.webp" alt="" loading="lazy"></p>
<p>熔岩灯内部是融化的蜡，每时每刻都在变化着形状。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061818.webp" alt="" loading="lazy"></p>
<p>需要随机数的时候，就对着这堵墙拍一张照片。每张照片都是不一样的，然后计算照片的哈希，将其作为种子值，计算得到一个随机数。</p>
<p><strong>（2）伦敦办公室。</strong> 那里有一面“单摆墙”，放满了各种单摆装置。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031205.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031206.webp" alt="" loading="lazy"></p>
<p>单摆和它们的影子，每时每刻都在摆动。每次照片的哈希也是不一样的，可以作为随机数的种子值。</p>
<p><strong>（3）奥斯汀办公室。</strong> 那里的天花板，挂了很多彩色的反光片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031207.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031208.webp" alt="" loading="lazy"></p>
<p>这些反光片对空气流动十分敏感，开门、关门、空调、温度、湿度，都会让其转动，反射出不同颜色的光。因此，也可以用来当作随机数的种子值。</p>
<h2 id="下周五-稀土开发者大会" tabindex="-1">下周五，稀土开发者大会 <a class="header-anchor" href="#下周五-稀土开发者大会" aria-label="Permalink to &quot;下周五，稀土开发者大会&quot;">&ZeroWidthSpace;</a></h2>
<p>过去一个月，周刊一直在预热今年的“稀土开发者大会”。</p>
<p>它的开幕时间就是下周五（6月28日）。</p>
<p>作为今年的大活动，所有日程安排现在都出来了。下图就是<strong>主论坛和10个分论坛的 70 多场演讲题目</strong>。</p>
<p><a href="https://cdn.beekka.com/blogimg/asset/202406/bg2024062005.webp" target="_blank" rel="noreferrer"><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062004.webp" alt="" loading="lazy"></a>)</p>
<p>点击看<a href="https://cdn.beekka.com/blogimg/asset/202406/bg2024062005.webp" target="_blank" rel="noreferrer">大图</a>，都是技术热点和前沿领域。演讲者是来自全球的技术专家和第一线的主力工程师。</p>
<p>另外，大会还有外场的 AI 活动，一共4个特色展区，可以接触众多国内头部 AI 公司的展台，参与各种互动小游戏，赢取纪念品。这部分是免费的。</p>
<p>活动详情可以点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">这个链接</a>，或者扫描上方海报的二维码，购买内场演讲票，或者领取免费的外场票，以及预约现场直播。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.wsj.com/science/space-astronomy/boeing-sent-two-astronauts-into-space-now-it-needs-to-get-them-home-99d96633" target="_blank" rel="noreferrer">Starliner 飞船</a></p>
<p>美国宇航局最近遇到了一件尴尬的事情。</p>
<p>波音公司的 Starliner 飞船（下图），将两名宇航员送入国际空间站以后，却回不来了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061906.webp" alt="" loading="lazy"></p>
<p>飞船发射后，出现了氦气泄漏和推进器故障。迟迟没有找到原因，美国宇航局就不敢用它把宇航员送回来。</p>
<p>本次任务原定8天，现在已经20天了。目前暂定6月26日返航，但可能再次推迟。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061907.webp" alt="" loading="lazy"></p>
<p>好在国际空间站有4个月的食物储备，不至于有物资问题。</p>
<p>本次飞行是 Starliner 飞船首次执行任务，就搞成这样。实在不行的话，只能再派一艘飞船去把人接回来。</p>
<p>2、<a href="https://www.nhm.ac.uk/discover/news/2024/june/face-ancient-australian-giga-goose-revealed-after-fossil-skull-found.html" target="_blank" rel="noreferrer">澳大利亚巨型鹅</a></p>
<p>澳大利亚与其他大陆隔绝，存在着许多奇特动物。</p>
<p>科学家很早就知道，澳大利亚有过一种巨型鹅（下图最右侧），大小跟鸵鸟相仿，身高超过2米，体重240公斤，但是已经在45000年前灭绝了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061501.webp" alt="" loading="lazy"></p>
<p>那时正好是第一批人类来到澳大利亚，所以科学家猜测，它的灭绝与人类有关。人类可能大规模捕杀这种鹅，毕竟它不会飞，又跑得慢。</p>
<p>以前，这种鹅只出土过零星的化石，最近终于出土了第一个完整头骨。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061502.webp" alt="" loading="lazy"></p>
<p>科学家画出它的还原像，大家看看，这种地球已经不存在的巨型鹅长什么样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061503.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://x.com/soren_iverson/status/1801253187602788424" target="_blank" rel="noreferrer">眼球监控</a></p>
<p>一位国外网友，在推特上贴出一张图片。</p>
<p>他在手机上看 Youtube 视频，结果跳出了这个提示。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061506.webp" alt="" loading="lazy"></p>
<p>意思是，系统发现，他的眼球没有注视广告，所以重新播放一次广告。</p>
<p>这张图应该是伪造的，不过技术上很简单。只要播放广告时，启动摄像头，就能识别镜头前有没有人，眼球看哪里。</p>
<p>我怀疑，这种场景会变成现实。以后，付费用户正常使用，免费用户必须通过眼球监控，确保正在注视广告。</p>
<p>4、<a href="https://globalvoices.org/2024/06/13/the-ingenious-network-tree-defying-gazas-connectivity-blockade/" target="_blank" rel="noreferrer">上网篮</a></p>
<p>加沙地区由于战争原因，互联网服务已经完全中断了。</p>
<p>一个国际组织为了帮助那里的人民上网，想出了一个解决办法。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061504.webp" alt="" loading="lazy"></p>
<p>他们先在其他国家购买了一批 eSIM 卡，将参数传给当地人。因为 eSIM 是虚拟卡，只要填入参数，就能开通，相对容易。</p>
<p>然后，当地人把手机连上充电宝，放在一个篮子里，带到边境地区，挂在高处。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061505.webp" alt="" loading="lazy"></p>
<p>通过 eSIM 卡，手机可以连上邻国的 4G 网络，这时打开手机热点，那么在篮子下面的人，就都能上网了。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.36kr.com/p/2826590796843272" target="_blank" rel="noreferrer">AI 芯片的未来，未必是 GPU</a>（中文）</p>
<p>本文认为，加速计算未必只能通过 GPU 实现，FPGA 或 ASIC 或许是更优的底层计算设备。</p>
<p>2、<a href="https://medium.com/@ideatocode/what-i-learned-as-an-artist-writing-my-own-blog-engine-for-10-years-straight-0cb8297e7712" target="_blank" rel="noreferrer">我编写自己的博客引擎的10年</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040801.webp" alt="" loading="lazy"></p>
<p>作者为自己写了一个博客引擎，坚持了10年，他讲述在这个过程中学到的东西和体会。</p>
<p>3、<a href="https://www.joshwcomeau.com/react/folding-the-dom/" target="_blank" rel="noreferrer">CSS 的 3D 折叠效果</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040601.webp" alt="" loading="lazy"></p>
<p>本文介绍如何使用 CSS 实现 3D 的页面折叠动画效果（上图）。</p>
<p>4、<a href="https://pncnmnp.github.io/blogs/fibonacci-hashing.html" target="_blank" rel="noreferrer">随机歌单的算法</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121001.webp" alt="" loading="lazy"></p>
<p>本文介绍 Spotify 生成随机歌单的算法，要求是同一个歌手的歌曲不能连续播放。</p>
<p>5、<a href="https://www.asianometry.com/p/whats-next-for-asml" target="_blank" rel="noreferrer">ASML 总部访问记</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061702.webp" alt="" loading="lazy"></p>
<p>作者访问荷兰光刻机公司 ASML 总部，在埃因霍温市的郊区，这里是他的见闻。</p>
<p>6、<a href="https://lazamar.github.io/virtual-dom/" target="_blank" rel="noreferrer">200行 JavaScript 代码实现虚拟 DOM</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052205.webp" alt="" loading="lazy"></p>
<p>虚拟 DOM 是很多 JS 框架的底层基础，本文演示怎么自己从头实现它。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/porsager/postgres" target="_blank" rel="noreferrer">Postgres.js</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101401.webp" alt="" loading="lazy"></p>
<p>Node.js 和 Deno 的 PostgreSQL 客户端，类似软件还有 <a href="https://jawj.github.io/zapatos/" target="_blank" rel="noreferrer">Zapatos</a>。</p>
<p>2、<a href="https://opencclint.vercel.app/" target="_blank" rel="noreferrer">OpenccLint</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061601.webp" alt="" loading="lazy"></p>
<p>一个基于 OpenCC 的繁简体中文转换工具，支持编辑器和命令行界面。（<a href="https://github.com/ruanyf/weekly/issues/4629" target="_blank" rel="noreferrer">@hddhyq</a> 投稿）</p>
<p>3、<a href="https://github.com/kangpeiqin/bilivideo_down" target="_blank" rel="noreferrer">BiliVideoDown</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061604.webp" alt="" loading="lazy"></p>
<p>一款基于 Flutter 的桌面端 B 站视频下载器，代码开源。（<a href="https://github.com/ruanyf/weekly/issues/4640" target="_blank" rel="noreferrer">@kangpeiqin</a> 投稿）</p>
<p>4、<a href="https://gitee.com/howcode/aq-chat-server" target="_blank" rel="noreferrer">AQChat</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061605.webp" alt="" loading="lazy"></p>
<p>一款匿名的在线聊天软件，用户可以自由登录、创建房间、会话和传输文件，体验 <a href="https://aqchat.run/" target="_blank" rel="noreferrer">demo</a>。链接是后端代码，另有 <a href="https://gitee.com/howcode/aq-chat" target="_blank" rel="noreferrer">Web 端</a>和<a href="https://gitee.com/ghosthhf/aqchat-mobile" target="_blank" rel="noreferrer">移动端</a>。（<a href="https://github.com/ruanyf/weekly/issues/4643" target="_blank" rel="noreferrer">@howcodes</a> 投稿）</p>
<p>5、<a href="https://voicer.hellogeek.work/" target="_blank" rel="noreferrer">Voicer</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061808.webp" alt="" loading="lazy"></p>
<p>一个 Chrome 浏览器插件，用来语音朗读网页文本。（<a href="https://github.com/ruanyf/weekly/issues/4647" target="_blank" rel="noreferrer">@wang-jianliang</a> 投稿）</p>
<p>6、<a href="https://www.1txm.com/barcode" target="_blank" rel="noreferrer">易条形</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061810.webp" alt="" loading="lazy"></p>
<p>一个在线的条形码生成器。（<a href="https://github.com/ruanyf/weekly/issues/4651" target="_blank" rel="noreferrer">@FZliweiliang</a> 投稿）</p>
<p>7、<a href="https://scienhub.com/templates" target="_blank" rel="noreferrer">ScienHub</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061812.webp" alt="" loading="lazy"></p>
<p>LaTex 在线编辑器，提供很多实用的模板。（<a href="https://github.com/ruanyf/weekly/issues/4657" target="_blank" rel="noreferrer">@tc1989tc</a> 投稿）</p>
<p>8、<a href="https://github.com/qqAys/trash.sh" target="_blank" rel="noreferrer">trash.sh</a></p>
<p>rm 命令的简单替代品，提供一个删除文件的回收站。（<a href="https://github.com/ruanyf/weekly/issues/4658" target="_blank" rel="noreferrer">@qqAys</a> 投稿）</p>
<p>9、<a href="https://cloud.myfont.bid/" target="_blank" rel="noreferrer">我的字体</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061813.webp" alt="" loading="lazy"></p>
<p>一个制作个人手写字体的在线工具。（<a href="https://github.com/ruanyf/weekly/issues/4659" target="_blank" rel="noreferrer">@harbor2009</a> 投稿）</p>
<p>10、<a href="https://github.com/chengfengfengwang/lingo-link/blob/main/README_ZH-CN.md" target="_blank" rel="noreferrer">lingo link</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062001.webp" alt="" loading="lazy"></p>
<p>一个开源的浏览器插件，支持划词翻译、AI 翻译、生词标记。（<a href="https://github.com/ruanyf/weekly/issues/4670" target="_blank" rel="noreferrer">@chengfengfengwang</a> 投稿）</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://lunaai.video/" target="_blank" rel="noreferrer">Luma AI Video Generator</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061602.webp" alt="" loading="lazy"></p>
<p>Luma AI 视频生成器免费在线使用。（<a href="https://github.com/ruanyf/weekly/issues/4628" target="_blank" rel="noreferrer">@sunnyjingliu</a> 投稿）</p>
<p>2、<a href="https://stablediffusion3.net/zh-CN" target="_blank" rel="noreferrer">Stable Diffusion 3 AI 图像生成器</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061603.webp" alt="" loading="lazy"></p>
<p>免费使用 Stable Diffusion 3，通过文本生成图像，无需注册。（<a href="https://github.com/ruanyf/weekly/issues/4637" target="_blank" rel="noreferrer">@ddewfrefref</a> 投稿）</p>
<p>3、<a href="https://elevenlabs.io/" target="_blank" rel="noreferrer">Generative Voice AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101615.webp" alt="" loading="lazy"></p>
<p>一个文字转语音的服务，支持中文，免费账户每月可以转10000字（约10分钟音频）。</p>
<p>4、<a href="https://github.com/luyu0279/BrainyAI" target="_blank" rel="noreferrer">BrainyAI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061809.webp" alt="" loading="lazy"></p>
<p>一个开源的 Chrome 插件，在侧边栏加载 AI 模型，是类似产品 <a href="https://sider.ai/" target="_blank" rel="noreferrer">Sider AI</a>, <a href="https://monica.im/" target="_blank" rel="noreferrer">Monica</a>, <a href="https://www.getmerlin.in/" target="_blank" rel="noreferrer">Merlin</a>, 和 <a href="https://www.maxai.me/" target="_blank" rel="noreferrer">MaxAI</a> 的免费替代品。（<a href="https://github.com/ruanyf/weekly/issues/4648" target="_blank" rel="noreferrer">@luyu0279</a> 投稿）</p>
<p>5、<a href="https://www.rockai.online/" target="_blank" rel="noreferrer">Rock AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061908.webp" alt="" loading="lazy"></p>
<p>该网站托管了一些开源 AI 模型，可以免费调用。（<a href="https://github.com/ruanyf/weekly/issues/4668" target="_blank" rel="noreferrer">@hellokidder</a> 投稿）</p>
<p>6、<a href="https://chrome-ai.cc/" target="_blank" rel="noreferrer">Chrome AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061811.webp" alt="" loading="lazy"></p>
<p>使用 chrome 内置 AI 模型搭建的本地聊天工具。（<a href="https://github.com/ruanyf/weekly/issues/4655" target="_blank" rel="noreferrer">@zengkan0703</a> 投稿）</p>
<p>7、<a href="https://www.sheshbabu.com/posts/system-wide-text-summarization-using-ollama-and-applescript/" target="_blank" rel="noreferrer">mac 电脑的本地文本总结</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061512.webp" alt="" loading="lazy"></p>
<p>本文介绍如何在 mac 电脑上，架设本地的 Ollama 模型，用它建立一个快捷方式，自动对打开的网页进行内容总结。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://tonsky.me/blog/unicode/" target="_blank" rel="noreferrer">开发者必须了解的 Unicode 知识</a>（2023版）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100210.webp" alt="" loading="lazy"></p>
<p>这篇长文介绍最新的 Unicode 知识。</p>
<p>2、<a href="https://www.loadership.com/" target="_blank" rel="noreferrer">loadership</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024012002.webp" alt="" loading="lazy"></p>
<p>该网站可以定制纯 CSS 的页面加载动画（loader）。</p>
<p>3、<a href="https://github.com/federico-busato/Modern-CPP-Programming" target="_blank" rel="noreferrer">现代 C++ 编程</a>（Modern C++ Programming）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112902.webp" alt="" loading="lazy"></p>
<p>一个开源的 C++ 英文教程。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.snopes.com/fact-check/magic-roundabout-photo/" target="_blank" rel="noreferrer">奇怪的环岛</a></p>
<p>英国有一个奇怪的环岛，分成内圈和外圈，它们之间还分布着5个小环岛。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061703.webp" alt="" loading="lazy"></p>
<p>它的内圈是逆时针方向，外圈是顺时针方向。</p>
<p>从外圈进入内圈，或者从内圈进入外圈，都必须通过5个小环岛。</p>
<p>下图是当地的交通指示牌。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061704.webp" alt="" loading="lazy"></p>
<p>这个环岛建于1972年，多年没有发生过重大的交通事故。</p>
<p>2、<a href="https://en.wikipedia.org/wiki/Elbe_Tunnel_(1911)" target="_blank" rel="noreferrer">易北河隧道</a></p>
<p>易北河流经德国汉堡市中心。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022101409.webp" alt="" loading="lazy"></p>
<p>1911年，汉堡市政府在河底挖了一条426米的隧道，方便两岸的交通。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022101410.webp" alt="" loading="lazy"></p>
<p>这条隧道的奇特之处，就是没有引道。行人和车辆必须使用升降机，进入和离开隧道。下图两侧的黄色垂直通道，就是升降机。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022101412.webp" alt="" loading="lazy"></p>
<p>下图是车辆升降机的入口。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022101411.webp" alt="" loading="lazy"></p>
<p>这个隧道直到今天还在使用，甚至还在里面开过音乐会。下图是在升降机底部仰望出口。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022101413.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://tratt.net/laurie/blog/2023/how_big_should_a_programming_language_be.html" target="_blank" rel="noreferrer">编程语言应该多大？</a></p>
<p>编程语言有小有大。</p>
<p>一些语言只提供最核心的功能，另一些语言无所不包。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062002.webp" alt="" loading="lazy"></p>
<p>还有一些语言，开始时很小，后来不断添加功能，变得越来越大，甚至庞大到难以使用。</p>
<p>Python 语言的初始版本很小，前几个版本故意保持这种特色，添加功能的建议都被明确拒绝，理由是它们会使语言太大。</p>
<p>某个时刻（也许是在 Python 1.6 和 Python 2.0 之间），事情发生了变化：功能建议不会因为使语言变大而被拒绝，只会因为没有解决重要问题而被拒绝。</p>
<p>从此以后，Python 就走向了庞大语言的道路。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024062003.webp" alt="" loading="lazy"></p>
<p>在我看来，一旦语言的设计者不再担心语言的大小，这种语言的无限制增长是不可避免的。</p>
<p>很多语言都是如此。尽管 Java 从来都不是小型语言，但在泛型添加到 Java 1.5 之前，它的变化相当小。泛型似乎是 Java 大型语言之旅的起点。</p>
<p>JavaScript 本来是一个周末设计出来的小型语言，现在变成了一种相当庞大的语言。</p>
<p>Rust 是一种已经很大的语言，但它正在考虑添加更多功能，变得更大。</p>
<p>为什么那么多语言都走上了变大的道路？</p>
<p>我的看法是，因为没有一种编程语言是完美的，总有不能很好支持的用例。许多情况下，添加新功能有助于更好地支持这些用例。</p>
<p>由于潜在用例是无限的，因此我们总是加入新的设计，让语言变得“更好”，副作用就是每次都让语言变得更大一点。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>拉斯维加斯正在举行一年一度的电子表格 Excel 世界锦标赛，它有一个其他比赛都没有的特点，那就是毫无趣味。</p>
<p>-- <a href="https://www.theverge.com/c/24133822/microsoft-excel-spreadsheet-competition-championship" target="_blank" rel="noreferrer">《Excel 世界锦标赛》</a></p>
<p>2、</p>
<p>哈勃望远镜确定，宇宙的准确年龄是138亿年。那就是我们这个世界的起源，在这之前是什么，没人知道。</p>
<p>--<a href="https://www.esa.int/Science_Exploration/Space_Science/Webb/Webb_Hubble_confirm_Universe_s_expansion_rate" target="_blank" rel="noreferrer">《韦伯望远镜提供的新线索》</a></p>
<p>3、</p>
<p>农活忙不过来。</p>
<p>-- <a href="https://github.com/dylanaraps" target="_blank" rel="noreferrer">@dylanaraps</a>，Kiss Linux 的创始人，他的 GitHub 主页上只留了这一句话，项目已经两年多不更新了</p>
<p>4、</p>
<p>我不记得读过的书，就像不记得吃过的饭一样；即便如此，它们还是造就了我。</p>
<p>-- <a href="https://blog.jim-nielsen.com/2024/you-are-what-you-read/" target="_blank" rel="noreferrer">爱默生</a></p>
<p>5、</p>
<p>早期，民航客机的驾驶舱最多有五名成员。由于导航和通信的自动化，导航员和无线电操作员率先被淘汰。然后，飞行工程师也被淘汰了，只剩下两名飞行员。</p>
<p>随着飞行员成本的飙升，航空公司开始要求，只有一个飞行员的窄体飞机，副驾驶员被淘汰只是时间问题。</p>
<p>最终，仅剩的一个飞行员也会被淘汰，以后的飞机主要靠自动驾驶，再配上一名能够有限控制飞机的地面操作员。</p>
<p>-- <a href="https://airfactsjournal.com/2024/06/the-last-pilot/" target="_blank" rel="noreferrer">《最后的飞行员》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p>2023：<a href="https://www.ruanyifeng.com/blog/2023/06/weekly-issue-258.html" target="_blank" rel="noreferrer">卡马克的猫</a>（#258）</p>
<p>2022：<a href="https://www.ruanyifeng.com/blog/2022/05/weekly-issue-208.html" target="_blank" rel="noreferrer">晋升制度的问题</a>（#208）</p>
<p>2021：<a href="https://www.ruanyifeng.com/blog/2021/05/weekly-issue-158.html" target="_blank" rel="noreferrer">内容渠道的贬值</a>（#158）</p>
<p>2020：<a href="http://www.ruanyifeng.com/blog/2020/05/weekly-issue-108.html" target="_blank" rel="noreferrer">阵地战与奇袭战</a>（#108）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202406/bg2024061403.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[如何计算密码强度？]]></title>
            <link>https://bayi-95.eu.org/pages/javascript/计算展示密码强度</link>
            <guid>https://bayi-95.eu.org/pages/javascript/计算展示密码强度</guid>
            <pubDate>Fri, 21 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[密码设置的好不好，关乎到你的账号安全性，越复杂的密码越安全，所以密码强度很重要。那么密码强度怎么计算？应该如何实现呢？]]></description>
            <content:encoded><![CDATA[<h1 id="如何计算密码强度" tabindex="-1">如何计算密码强度？ <a class="header-anchor" href="#如何计算密码强度" aria-label="Permalink to &quot;如何计算密码强度？&quot;">&ZeroWidthSpace;</a></h1>
<hr>
<p>平时我们在浏览各种网站和 APP 的时候，都接触过<strong>密码</strong>这个东西。</p>
<p>密码设置的好不好，关乎到你的账号安全性，越复杂的密码越安全，所以<strong>密码强度</strong>很重要，而我们在做注册功能的时候，也有责任去帮协助用户设置一个高密码强度的密码。</p>
<p>那么<strong>密码强度怎么计算呢？</strong> 且应该如何实现以下这样的<strong>密码强度动画展示效果</strong>呢？</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_gif/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPRYa3PHTJkCBV7ZIwtFjkEe4d6icRoFxjThTSwgGUMP1EOpBZHRm3p1g/640?wx_fmt=gif&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">&ZeroWidthSpace;</a></h2>
<p>其实思路很简单：</p>
<ol>
<li>
<p>监听密码输入框的变化</p>
</li>
<li>
<p>密码变化时，获取密码文本，并通过某种方式计算这个密码的<strong>强度分数</strong></p>
</li>
<li>
<p>根据<strong>强度分数</strong>，改变下方块的颜色和宽度：</p>
</li>
</ol>
<p>(a) 0分：强度低，红色，宽度 20%</p>
<p>(b) 1分：强度低，红色，宽度 40%</p>
<p>(c) 2分：强度中，橙色，宽度 60%</p>
<p>(d) 3分：强度高，绿色，宽度 80%</p>
<p>(e) 4分：强度高，绿色，宽度 100%</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPWpQ9TFyA1LQXF2qIZhonw9wFLJvIaH0DnsuVI3ALribFmFmNGLH8A8g/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="计算密码强度分数" tabindex="-1">计算密码强度分数 <a class="header-anchor" href="#计算密码强度分数" aria-label="Permalink to &quot;计算密码强度分数&quot;">&ZeroWidthSpace;</a></h2>
<p>用什么方式去计算密码强度方式呢？我们可以用 <code>@zxcvbn-ts/core</code>这个库来计算。</p>
<p><code>@zxcvbn-ts/core</code> 是 <code>zxcvbn</code> 密码强度估计器的 TypeScript 实现版本，用于帮助开发者评估用户设置密码的复杂度和安全性，计算的依据有：</p>
<ul>
<li>
<p><strong>密码长度：</strong> 越长分数越高</p>
</li>
<li>
<p><strong>字符类型：</strong> 数字、字母、符号</p>
</li>
<li>
<p><strong>词典攻击检测：</strong> 内置词典列表，检测密码强度</p>
</li>
<li>
<p><strong>评分系统：</strong> 0-4分，分数越高越安全</p>
</li>
<li>
<p><strong>熵计算：</strong> 评测密码所需尝试次数，熵越高，分数越高</p>
</li>
</ul>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm i @zxcvbn-ts/core</span></span></code></pre>
</div><p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPQAM4YEic8icl2L6liaweYKTjEgDeksh7xlI1nSO6moUXiauP4ZvS1wfhHA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="密码强度动画展示效果" tabindex="-1">密码强度动画展示效果 <a class="header-anchor" href="#密码强度动画展示效果" aria-label="Permalink to &quot;密码强度动画展示效果&quot;">&ZeroWidthSpace;</a></h2>
<p>计算了分数之后，我们需要根据分数去展示</p>
<ul>
<li>
<p>不同的颜色</p>
</li>
<li>
<p>不同的宽度</p>
</li>
</ul>
<p>我们可以使用<strong>属性选择器</strong>的方式，去完成这一个效果，看以下代码：</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPFJQKMaMjj7zPUpa4uLlwxKF9I4gQZRXkod65fFSvXZyaNicLPlOrXag/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>当密码改变的时候，会实时计算密码强度分数，这也就是意味着 <code>data-score</code> 这个属性会一直变，接着我们可以在样式中，去根据<strong>属性选择器</strong>去设置不同的颜色和宽度</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPpicbsHl2Hl8vKIe6cDJuP2GdvibjdDHzRWeDu5aX3n0T3m5E6w0jWv6A/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>现在可以看到这样的效果</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_gif/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPlHU3Ht3HYpbhpVqOI3FJric0dibGpXve9jDLicJpT3aHmVJTCJYvyMhRg/640?wx_fmt=gif&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="完善动画效果" tabindex="-1">完善动画效果 <a class="header-anchor" href="#完善动画效果" aria-label="Permalink to &quot;完善动画效果&quot;">&ZeroWidthSpace;</a></h2>
<p>但是我们如果想实现<strong>分格</strong>的效果，可以借助<strong>伪元素</strong>去做。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPkicQ0tia23sbxSxTAGvjPLJtLDYBcMiazQzJ0tV6RD7XcbEXeWwjJEArQ/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>现在可以达到我们期望的效果。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_gif/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPRYa3PHTJkCBV7ZIwtFjkEe4d6icRoFxjThTSwgGUMP1EOpBZHRm3p1g/640?wx_fmt=gif&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="完整代码" tabindex="-1">完整代码 <a class="header-anchor" href="#完整代码" aria-label="Permalink to &quot;完整代码&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { Input } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'antd'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { useMemo, useState } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'react'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { zxcvbn } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '@zxcvbn-ts/core'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> './Index.less'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> Index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">   const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">setPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">''</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">   const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> passwordStrength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> useMemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> zxcvbn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(password).score  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">   }, [password])  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">   const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> onChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> React</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">ChangeEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">> </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">        setPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(e.target.value)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">   }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">   return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> &#x3C;>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        &#x3C;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">Input.Password</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{password} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">onChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{onChange} />  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        &#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'strength-meter-bar'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            &#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'strength-meter-bar--fill'</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{passwordStrength}>&#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        &#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    &#x3C;/>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Index</span></span></code></pre>
</div><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// Index.less  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">.strength-meter-bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">relative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> auto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 增加的伪元素样式代码  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    &#x26;::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    &#x26;::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">''</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      z-index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      border-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      border-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    &#x26;::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    &#x26;::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 增加的伪元素样式代码  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    &#x26;--fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> ease-in-out</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">      background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">      &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'0'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">darken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#e74242</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">      &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#e74242</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">      &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'2'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#efbd47</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">      &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'3'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">fade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#55d187</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">      &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">data-score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'4'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">#55d187</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  }</span></span></code></pre>
</div><p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPo2Qq8WOZDyJQHY2Fv9eDlMUCmbzrq6UW1TicTOTaicDtF8MuDMU9hfWg/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>本文转自 <a href="https://mp.weixin.qq.com/s/8uR-LCTF2tuXY44sNF7vqQ" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/8uR-LCTF2tuXY44sNF7vqQ</a>，如有侵权，请联系删除。</p>
]]></content:encoded>
            <enclosure url="https://mmbiz.qpic.cn/mmbiz_gif/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPRYa3PHTJkCBV7ZIwtFjkEe4d6icRoFxjThTSwgGUMP1EOpBZHRm3p1g/640?wx_fmt=gif&from=appmsg" length="0" type="image//mmbiz_gif/TZL4BdZpLdiaG6skH2teEozzqOEccUnzPRYa3PHTJkCBV7ZIwtFjkEe4d6icRoFxjThTSwgGUMP1EOpBZHRm3p1g/640"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 304 期）：最受欢迎的颜色]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-304</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-304</guid>
            <pubDate>Fri, 14 Jun 2024 16:20:28 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
烟台港码头，正在等]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-304-期-最受欢迎的颜色" tabindex="-1">科技爱好者周刊（第 304 期）：最受欢迎的颜色 <a class="header-anchor" href="#科技爱好者周刊-第-304-期-最受欢迎的颜色" aria-label="Permalink to &quot;科技爱好者周刊（第 304 期）：最受欢迎的颜色&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4550" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061025.jpg" alt="" loading="lazy"></p>
<p>烟台港码头，正在等待装船出口的数万辆汽车。（<a href="http://www.news.cn/photo/20240402/6310c7ba74db420ab9d8d3fe1df78b79/c.html?page=1" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="最受欢迎的颜色" tabindex="-1">最受欢迎的颜色 <a class="header-anchor" href="#最受欢迎的颜色" aria-label="Permalink to &quot;最受欢迎的颜色&quot;">&ZeroWidthSpace;</a></h2>
<p>人类作为一个群体，有没有最受欢迎的颜色？</p>
<p>虽然这个问题取决于“最受欢迎”的定义，但是有一个方法可以参考，而且很客观。</p>
<p>那就是看看，什么颜色的车卖得最好。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061015.webp" alt="" loading="lazy"></p>
<p>市场上，哪种颜色的车最多、最好卖，就说明公众强烈偏好这种颜色。</p>
<p>上周，美国的一个汽车网站，公布了2023年美国出售的所有新车的<a href="https://www.thedrive.com/news/cars-are-way-less-colorful-today-than-they-were-20-years-ago-study" target="_blank" rel="noreferrer">颜色排名</a>。</p>
<p><strong>结果是灰色系最受欢迎</strong>，即不同比例的黑白混合，主要包含四种颜色：白、黑、灰、银。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061016.webp" alt="" loading="lazy"></p>
<p>这四种颜色占了美国去年新车的80%：白27.6%，黑22%，灰21.3%，银9.1%。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061017.webp" alt="" loading="lazy"></p>
<p>这真是出人意料：<strong>灰色系最没特色，却是最受欢迎的颜色</strong>。</p>
<p>我们常说，生活多姿多彩，但事实上大众却偏好保守的颜色，而且这种偏好越来越强烈。2004年，灰色系只占新车的60%，现在上升到了80%。</p>
<p>这并非美国独有的现象，全世界皆是如此。<strong>灰色系在中国的占比，甚至更高。</strong></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061018.webp" alt="" loading="lazy"></p>
<p>2021年，<a href="https://chejiahao.autohome.com.cn/info/10067942" target="_blank" rel="noreferrer">中国最受欢迎的汽车颜色</a>，前三名分别是白色（50%）、黑色（22%）、灰色（14%）。单单这三种颜色，就占了86%，比美国还要集中。相比之下，其他颜色都属于非常小众。</p>
<p>人们偏好灰色系的车辆，原因可能有下面三点。</p>
<p>（1）成本低。因为购买的人多，这几种颜色的生产成本和销售成本比其他颜色更低。举例来说，在中国购买特斯拉，黑色以外的其他颜色，是要加钱的。</p>
<p>（2）转售价值高。如果颜色很花哨，二手车不容易转卖，从而不得不降价。</p>
<p>（3）这些颜色更安全。大众习惯了这些颜色，它们不引人注目，不会显得特立独行，容易被社会接受。</p>
<p>上面三个原因里面，我认为最主要是第三点。<strong>人们更愿意与大多数人保持一致，避免与众不同。</strong></p>
<p>这就是从众心理。日常生活中，这种现象比比皆是。最流行的就是最安全的，选择它不会错。凡是面向公众的商品，都趋向最流行的少数几种款式。而且，市场越大，集中趋势越明显。</p>
<p>举例来说，公寓楼的设计，不管哪一家开发商，房型都相差不大，都是中规中矩的布局。这样的设计没特色，但是好卖，如果设计得很有特色和个性，销售就有风险，二手更难卖。</p>
<p>互联网行业也是如此，最流行的那几个 App，页面设计高度雷同。下图是美团和饿了么的首页，国内的大众 App 几乎都是这个设计。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061019.webp" alt="" loading="lazy"></p>
<p>面向企业的云服务商，就更不敢有个性了。阿里云（下图一）、腾讯云（下图二）、华为云（下图三），用的是同一个模板吗？</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061020.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061021.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061022.webp" alt="" loading="lazy"></p>
<p>人也是如此。小时候或许很有个性，有棱有角，但是长大进入社会，就要逐渐失去个性和棱角，跟周围的人越来越像。因为这样最安全，最容易被社会接受，你跟别人越像，就越好相处。</p>
<p>只有少数人始终不妥协，个性到老。这样其实也蛮好，不会心累，社会也需要有个性的人，但是这种人注定会终身孤立。</p>
<h2 id="如何配置家庭资产" tabindex="-1">如何配置家庭资产 <a class="header-anchor" href="#如何配置家庭资产" aria-label="Permalink to &quot;如何配置家庭资产&quot;">&ZeroWidthSpace;</a></h2>
<p>上周，<a href="https://baike.baidu.com/item/%E5%AD%99%E6%98%8E%E5%B1%95/55347274" target="_blank" rel="noreferrer">孙明展老师</a>从广州联系我，他们今年的活动要开始了。</p>
<p>这是我认识他的第七年。他以前在世界500强保险公司，后来辞职创业，开了一家<strong>家庭财务咨询公司</strong>，专门做家庭财务规划。</p>
<p>那时，他看到我的网站，就找我合作，觉得程序员这个群体很需要“家庭资产配置规划服务”。以后每年搞活动，他就到周刊发消息，转眼第七年了。</p>
<p>他在百度百科有<a href="https://baike.baidu.com/item/%E5%AD%99%E6%98%8E%E5%B1%95/55347274" target="_blank" rel="noreferrer">个人条目</a>，网上搜一下“孙明展”，也有很多介绍。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060701.webp" alt="" loading="lazy"></p>
<p>他们的公司相当正规，发展得很好，员工数百人，还拿到了 B+ 轮投资，做了自己的咨询软件引擎。大家可以看看<a href="https://www.trussan.com/" target="_blank" rel="noreferrer">官网</a>（下图），里面很多财务科普文章和自有品牌“谱蓝”的介绍。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202304/bg2023041702.webp" alt="" loading="lazy"></p>
<p><u>这次活动是一个纯粹的咨询活动，不收取任何费用，一对一解答家庭资产配置规划方面的问题，承诺不推销任何理财、P2P 产品。</u></p>
<p>活动目的就是帮大家减少财务风险，普及家庭财务规划、教育规划、养老规划等干货知识，推广他们的品牌。</p>
<p>你有任何这方面的问题，到时都可以向专业的顾问免费咨询，比如医疗保险如何规划、怎么看懂“免责条款”、怎么进行养老储蓄、孩子教育规划等。</p>
<p>今年活动主题是 <strong>《如何全方位家庭资产配置规划》</strong>。他们会给出一些针对性的建议，怎么防范财务风险，尽量让资产保值增值。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202206/bg2022060406.webp" alt="" loading="lazy"></p>
<p>活动中，理财师除了回答问题，还会根据每个人的情况，为你设计一套<strong>家庭财务保障方案</strong>（上图），包括存款、投资、保险等金融产品的配置，兼顾抗风险和养老的需求。</p>
<p>如果大家有财务方面的问题，对这个活动感兴趣，点击<a href="https://media.trussan.com/index.php?s=/planClick/bp/aW1wb3J0aWQ9MjI2ODcmcG9zaXRpb249MQ%3D%3D" target="_blank" rel="noreferrer">这个链接</a>，或者微信扫描下方二维码，就可以<strong>免费领取</strong>价值1600元家庭资产配置规划服务，前200名还可以获赠一份《家庭财务宝典》。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061304.webp" alt="" loading="lazy"></p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.economist.com/science-and-technology/2024/05/21/a-new-age-of-sail-begins" target="_blank" rel="noreferrer">风力轮船</a></p>
<p>远洋货轮都使用燃油，二氧化碳排放巨大。如果改造成清洁能源，需要解决大海里充电的问题。</p>
<p>一家美国公司借鉴古代的风帆，发明了一种装在船上的风力发电机。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060901.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060902.webp" alt="" loading="lazy"></p>
<p>它的结构就是一根巨大的卷轴，内部安装了大量转子，风通过缝隙吹进转筒，带动转子发电。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060903.webp" alt="" loading="lazy"></p>
<p>这种转轴高达35米，造价大约每根100万欧元，据说可以节省燃油15%到30%。</p>
<p>以后，我们看到轮船上的大圆筒，不要以为那是烟囱，也有可能是风力发电机。</p>
<p>2、<a href="https://www.americaspace.com/2024/06/04/nasa-tests-mobile-launchers-slidewire-baskets/" target="_blank" rel="noreferrer">火箭逃生</a></p>
<p>美国准备使用 Artemis 2 重型火箭，在2026年将宇航员重新送上月球。</p>
<p>但是，存在一种极端情况：火箭已经点火了，突然发生故障，即将爆炸，宇航员这时如何从发射架逃生？</p>
<p>他们为此准备了一些难以想象的措施。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061010.webp" alt="" loading="lazy"></p>
<p>首先，火箭发射架有一个喷淋系统，在火箭爆炸前的几秒内，可以喷出170万升水（上图）。</p>
<p>这些水的目的，不是为了消除爆炸。因为可能无法消除，而是为了尽量减少爆炸的破坏性。</p>
<p>宇航员逃生，则是必须依靠发射台顶部安装的一个逃生吊篮。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061011.webp" alt="" loading="lazy"></p>
<p>一旦火箭在发射台出现故障，宇航员必须赶紧从飞船出来，坐进吊篮，快速滑向地面。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061012.webp" alt="" loading="lazy"></p>
<p>滑轨尽头是一个坚固的混凝土避难室，足以抵挡爆炸的冲击波。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061013.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://www.cnn.com/2024/06/07/tech/ikea-job-roblox-intl-scli-gbr/index.html" target="_blank" rel="noreferrer">虚拟商店的真人员工</a></p>
<p>Roblox 是一个虚拟世界游戏，允许玩家在游戏里面开店和交易。</p>
<p>世界最大家具公司宜家，6月27日就将在 Roblox 里面开设一个虚拟商店。它为此最近发布了一则招聘广告（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061205.webp" alt="" loading="lazy"></p>
<p>宜家要为它的 Roblox 虚拟商店，招聘10名真人员工，通过网络充当商店的远程服务员。</p>
<p>这些真人员工，跟宜家实体商场的员工享受一样的待遇，都是每小时报酬13.15英镑。</p>
<p>他们以虚拟形象（下图），帮助顾客选择家具。如果顾客想要就餐，他们会提供宜家著名的肉丸，不过是数字的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061206.webp" alt="" loading="lazy"></p>
<p>这反映了人类世界正在与数字世界融合：一方面 AI 替代人类劳动，另一方面虚拟人物背后可能是一个真人。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.163.com/dy/article/J4B8JQK60511DSSR.html" target="_blank" rel="noreferrer">国产AI大战高考物理</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061102.webp" alt="" loading="lazy"></p>
<p>媒体让多个国产 AI 模型，去解答今年的高考物理卷，看谁得分高。另有作文、数学、物理三科的<a href="https://www.cnbeta.com.tw/articles/tech/1434322.htm" target="_blank" rel="noreferrer">模型排名</a>。</p>
<p>2、<a href="https://cblgh.org/trustnet/" target="_blank" rel="noreferrer">网络社区的信任算法</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121008.webp" alt="" loading="lazy"></p>
<p>本文介绍一种算法，确定开放式的网络社区每个成员的可信度。</p>
<p>3、<a href="https://www.bleepingcomputer.com/news/security/ssh-keys-stolen-by-stream-of-malicious-pypi-and-npm-packages/" target="_blank" rel="noreferrer">盗窃 SSH 密钥的 PyPI 和 npm 模块</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121102.webp" alt="" loading="lazy"></p>
<p>最近出现了一些恶意模块，安装后会偷偷读取用户的 SSH 密钥，发到远程服务器。</p>
<p>4、<a href="https://engineeringatscale.substack.com/p/how-quic-is-displacing-tcp-for-speed" target="_blank" rel="noreferrer">为什么 QUIC 优于 TCP？</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021003.webp" alt="" loading="lazy"></p>
<p>一篇很好的科普文章，作者介绍谷歌开发的 QUIC 协议（HTTP/3 的基础），解决了基于 TCP 的 HTTP/1.1 和 HTTP/2.0 的哪些问题。</p>
<p>5、<a href="https://btxx.org/posts/Please_Make_Your_Table_Headings_Sticky/" target="_blank" rel="noreferrer">如何让表格标题栏变成粘性？</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022401.webp" alt="" loading="lazy"></p>
<p>本文是 CSS 初级教程，只要两行 CSS 代码，就可以让网页表格的标题栏变成粘性，不管如何滚动，始终显示。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/fifteen42/localhostai" target="_blank" rel="noreferrer">LocalhostAI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061001.webp" alt="" loading="lazy"></p>
<p>Chrome 浏览器 Dev 版已经<a href="https://m.cnbeta.com.tw/view/1434218.htm" target="_blank" rel="noreferrer">内置了 Gemini Nano 模型</a>，这个工具可以用来跟这个内置模型交互，离线可用，试用 <a href="https://www.localhostai.xyz/" target="_blank" rel="noreferrer">demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4602" target="_blank" rel="noreferrer">@fifteen42</a> 投稿）</p>
<p>2、<a href="https://sora-ai-video.com/zh/kling-ai" target="_blank" rel="noreferrer">Kling AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061023.webp" alt="" loading="lazy"></p>
<p>快手推出的“文生视频”模型，可以生成2分钟的视频，目前需要申请试用。</p>
<p>3、<a href="https://lmstudio.ai/" target="_blank" rel="noreferrer">LM Studio</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060804.webp" alt="" loading="lazy"></p>
<p>在笔记本电脑上离线运行大语言模型，可选择多种模型。（<a href="https://github.com/ruanyf/weekly/issues/4586" target="_blank" rel="noreferrer">@leqisdu</a> 投稿）</p>
<p>4、<a href="https://texttospeech.im/zh-CN" target="_blank" rel="noreferrer">TexttoSpeech.im</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060807.webp" alt="" loading="lazy"></p>
<p>一个免费的在线应用，将文本转换为语音，支持50种语言、8000种声音。（<a href="https://github.com/ruanyf/weekly/issues/4599" target="_blank" rel="noreferrer">@sunnyjingliu</a> 投稿）</p>
<p>5、<a href="https://humanize.im/zh-CN" target="_blank" rel="noreferrer">Humanize.im</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060808.webp" alt="" loading="lazy"></p>
<p>使用 GPT-4o 将 AI 生成的文本，转换为更自然、更类似人类的文本，防止被 AI 内容检测系统发现。（<a href="https://github.com/ruanyf/weekly/issues/4600" target="_blank" rel="noreferrer">@sunnyjingliu</a> 投稿）</p>
<p>6、<a href="https://midjourneysref.com/" target="_blank" rel="noreferrer">MidJourney Sref</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061104.webp" alt="" loading="lazy"></p>
<p>MidJourney 有一个风格参数 Sref，指定生成图片的风格，该网站收集和分类各种 Sref 参数。（<a href="https://github.com/ruanyf/weekly/issues/4609" target="_blank" rel="noreferrer">@underwoodxie</a> 投稿）</p>
<p>7、<a href="https://kaisouai.com/" target="_blank" rel="noreferrer">开搜 AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061106.webp" alt="" loading="lazy"></p>
<p>一个基于 AI 的问答引擎。（<a href="https://github.com/ruanyf/weekly/issues/4611" target="_blank" rel="noreferrer">@mochen00111</a> 投稿）</p>
<p>8、<a href="https://informedainews.com/zh-Hans/" target="_blank" rel="noreferrer">知闻 AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061107.webp" alt="" loading="lazy"></p>
<p>AI 筛选出来的新闻。（<a href="https://github.com/ruanyf/weekly/issues/4612" target="_blank" rel="noreferrer">@jiangjiax</a> 投稿）</p>
<p>9、<a href="https://gpt4o.so/zh-CN" target="_blank" rel="noreferrer">GPT4o.so</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061207.webp" alt="" loading="lazy"></p>
<p>免费使用 GPT-4o 模型，不用注册和登录。（<a href="https://github.com/ruanyf/weekly/issues/4617" target="_blank" rel="noreferrer">@sunnyjingliu</a> 投稿）</p>
<p>10、<a href="https://math.bot/" target="_blank" rel="noreferrer">Math Bot</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061208.webp" alt="" loading="lazy"></p>
<p>利用 GPT-4o 求解数学题，可以上传数学题的照片，免费使用。（<a href="https://github.com/ruanyf/weekly/issues/4618" target="_blank" rel="noreferrer">@sunnyjingliu</a> 投稿）</p>
<h2 id="活动-线下-ai-游园会" tabindex="-1">[活动] 线下 AI 游园会 <a class="header-anchor" href="#活动-线下-ai-游园会" aria-label="Permalink to &quot;[活动] 线下 AI 游园会&quot;">&ZeroWidthSpace;</a></h2>
<p>这个月的28日（周五）和29日（周六），在北京的同学看过来。</p>
<p><u>有一个面向程序员的线下 AI 游园会，免费参加</u>，里面分成四个展区。</p>
<blockquote>
<p><strong>（1）AI 展区</strong>。这里有许多国内头部 AI 公司的展位，比如商汤、月之暗面、宇树（unitree）、Jina AI、科大讯飞、硅基流动、零一万物、Zilliz、扣子、字节 cloud IDE 等等，参会者现场跟他们的产品互动，体验 AI 魅力。</p>
<p><strong>（2）稀土掘金 IP 展区</strong>。这里以海洋航行为主题，有超多互动小游戏，参会者在现场参与互动，还有精美礼品相赠。</p>
<p><strong>（3）游园打卡</strong>。参会者在各展台进行打卡，成功集齐后即可兑换丰富礼品。</p>
<p><strong>（4）稀土掘金动手实验室</strong>。参会者在这里领取 AI 相关题目，通过自带电脑完成题目赚取积分，兑换相应礼品。</p>
</blockquote>
<p>游园会属于“稀土开发者大会2024”的外场活动。大会还有内场的技术演讲，也非常精彩，但需要购票。</p>
<p>感兴趣的同学，可以点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">这个链接</a>，或者扫描下方海报二维码，了解详情。<u>注意，游园会的免费票也是在购票区领取。</u></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061303.webp" alt="" loading="lazy"></p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.partykit.io/" target="_blank" rel="noreferrer">PartyKit</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100209.webp" alt="" loading="lazy"></p>
<p>一个 npm 软件包，宣称用它就可以实现各种软件的实时协作。</p>
<p>2、<a href="https://proton.me/pass" target="_blank" rel="noreferrer">Proton Pass</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060802.webp" alt="" loading="lazy"></p>
<p>Proton 公司新推出的密码管理器，支持各种系统。</p>
<p>3、<a href="https://github.com/danvergara/dblab" target="_blank" rel="noreferrer">dblab</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060803.webp" alt="" loading="lazy"></p>
<p>开源的数据库终端管理器，可以作为常见数据库的命令行终端客户端。</p>
<p>4、<a href="https://github.com/godruoyi/gblog" target="_blank" rel="noreferrer">Gblog</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060805.webp" alt="" loading="lazy"></p>
<p>一个开源的、基于 Astro 的博客项目。（<a href="https://github.com/ruanyf/weekly/issues/4595" target="_blank" rel="noreferrer">@godruoyi</a> 投稿）</p>
<p>5、<a href="https://github.com/Websoft9/websoft9" target="_blank" rel="noreferrer">Websoft9</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060806.webp" alt="" loading="lazy"></p>
<p>开源的应用托管平台，预置了200多种应用的部署模板，通过它可以一键部署这些应用。（<a href="https://github.com/ruanyf/weekly/issues/4597" target="_blank" rel="noreferrer">@chendelin1982</a> 投稿）</p>
<p>6、<a href="https://github.com/childrentime/pareto" target="_blank" rel="noreferrer">Pareto</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061103.webp" alt="" loading="lazy"></p>
<p>一个轻量级 React SSR（服务端渲染）框架，比 next.js 更简单易用。（<a href="https://github.com/ruanyf/weekly/issues/4608" target="_blank" rel="noreferrer">@childrentime</a> 投稿）</p>
<p>7、<a href="https://siphon.ink/" target="_blank" rel="noreferrer">Siphon 吸词</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061105.webp" alt="" loading="lazy"></p>
<p>一个浏览器插件，也有客户端和小程序，双击英语单词自动加入到生词本，便于以后进行复习。（<a href="https://github.com/ruanyf/weekly/issues/4610" target="_blank" rel="noreferrer">@chaosflutter</a> 投稿）</p>
<p>8、<a href="https://airegex.cn/" target="_blank" rel="noreferrer">电子发票提取 Excel</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061108.webp" alt="" loading="lazy"></p>
<p>电子发票 PDF 打包成一个 zip 文件，上传到网站，自动整理成 Excel 电子表格。（<a href="https://github.com/ruanyf/weekly/issues/4605" target="_blank" rel="noreferrer">@zippo-zu</a> 投稿）</p>
<p>9、<a href="https://send.bitiful.com/" target="_blank" rel="noreferrer">缤纷快传</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061209.webp" alt="" loading="lazy"></p>
<p>基于缤纷云的文件实时分享服务。（<a href="https://github.com/ruanyf/weekly/issues/4619" target="_blank" rel="noreferrer">@ethan-bitiful</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/panyanyany/Awesome-ChatTTS" target="_blank" rel="noreferrer">Awesome ChatTTS</a></p>
<p>这个仓库收集文本转语音库 <a href="https://github.com/2noise/ChatTTS" target="_blank" rel="noreferrer">ChatTTS</a> 的相关开源项目和工具。（<a href="https://github.com/ruanyf/weekly/issues/4598" target="_blank" rel="noreferrer">@panyanyany</a> 投稿）</p>
<p>2、<a href="https://nobsgames.stavros.io/" target="_blank" rel="noreferrer">No-Bullshit Games</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112708.webp" alt="" loading="lazy"></p>
<p>这个网站列出作者精选的手机游戏，安卓和 iOS 各有五六百个。</p>
<p>3、<a href="https://searchthedeck.com/" target="_blank" rel="noreferrer">SearchTheDeck</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112808.webp" alt="" loading="lazy"></p>
<p>这个网站收集了15000多张项目宣讲的 PPT（英语 pitch deck），供用户搜索。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://petapixel.com/2024/06/06/this-unbelievable-optical-illusion-is-just-one-photo/" target="_blank" rel="noreferrer">貌似拼接的照片</a></p>
<p>一位荷兰摄影师喜欢拍一些奇特的照片，看上去很像是两张照片拼接，但实际上是真实的场景。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061203.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061204.webp" alt="" loading="lazy"></p>
<p>他说，拍这种照片的诀窍，就是要找都是直线的场景。</p>
<p>2、<a href="https://mattlakeman.org/2023/07/10/notes-on-the-gambia/" target="_blank" rel="noreferrer">发电船</a></p>
<p>2018年，非洲国家冈比亚与土耳其电力公司 Karpower 签署了一项协议，要求后者为该国提供30兆瓦～36兆瓦的电力。</p>
<p>结果，Karpower 公司根本没在当地修发电厂，而是派出了一艘发电船停泊在冈比亚的近海，通过这艘船向岸上供电。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023080309.webp" alt="" loading="lazy"></p>
<p>据说，这艘船满足了冈比亚60%的电力需求。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<strong>合成氨的作用</strong></p>
<p>摘自书籍《Numbers Don't Lie》，作者是加拿大科学家 Vaclav Smil。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061301.webp" alt="" loading="lazy"></p>
<p>德国在第一次世界大战中，坚持打了四年。能够坚持这么久，主要原因之一是德国发明了合成氨。</p>
<p>战争需要炸药，而炸药的主要成分是硝酸钾、木炭和硫磺。其中，硝酸钾的比重最大，大约占到75%。</p>
<p>德国不产硝酸钾，需要进口。从战争一开始，英国海军就切断了德国从智利进口硝酸盐的路线，眼看德国的炸药供应就要断了。</p>
<p>巧合的是，1909年卡尔斯鲁厄大学的弗里茨·哈伯教授（Fritz Haber），发明了廉价的合成氨方法：氮气和氢气在高压和催化剂的作用下，结合生成氨（NH3）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024061302.webp" alt="" loading="lazy"></p>
<p>1913年10月，巴斯夫公司（当时世界领先的化工集团）将该方法成功工业化，生产的合成氨可以用来生产硝酸钠或硝酸铵等固体肥料。</p>
<p>1914年7月，第一次世界大战爆发。不久之后，巴斯夫公司就将合成氨生产线，从生产肥料转变为生产硝酸，然后再用于合成炸药。它的产量足以满足德国的炸药需求，直到战争结束。</p>
<p>合成氨技术就这样解决了德国的炸药短缺问题，拖长了第一次世界大战，增加了数百万人的伤亡。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>我认为，很快会出现第一家“一人独角兽”，就是没有任何员工，只有一个创始人，就实现了10亿美元估值的业务。</p>
<p>以前这是不可想象的，但 AI 将让它成为现实。</p>
<p>-- <a href="https://fortune.com/2024/02/04/sam-altman-one-person-unicorn-silicon-valley-founder-myth/" target="_blank" rel="noreferrer">山姆·奥特曼</a>，OpenAI 公司 CEO</p>
<p>2、</p>
<p>如果你是一家上市公司，仅仅生产令人满意的产品是不够的，你还必须成长。如果没有成长，或者成长得不够快，股价就会下跌。</p>
<p>比如，苹果公司的市值已经3万亿美元了，但是投资者还要求它继续成长。这就好像要求一个人永远奔跑，不能停下来。没有终点线，追求无限成长，迟早变成恶性癌症。</p>
<p>-- <a href="https://manuelmoreale.com/growth-is-a-mind-cancer" target="_blank" rel="noreferrer">《追求成长是一种癌症》</a></p>
<p>3、</p>
<p>很多人觉得，代码质量是软件公司的生命。但是，大多数公司的生死存亡并不取决于它的代码库的质量。可怕的代码库也可能带来了数十亿美元的收入。市场不会激励优秀的工程，它会激励速度和执行力。</p>
<p>-- <a href="https://www.catalystmonitor.com/blog/perfect-codebase-wont-save-your-company" target="_blank" rel="noreferrer">《完美的代码库无法拯救你的公司》</a></p>
<p>4、</p>
<p>以前，一个人只要熟练掌握某一项技能，就能在整个职业生涯中保持身价。但是，未来不太可能终生从事单一职业。</p>
<p>只会一项技能，因此就不够了，你需要有创业心态，并且成为一个综合主义者，学习不同的东西，并且最终把它们联系起来，组成了一个更大的图景。</p>
<p>-- <a href="https://medium.com/@tom.cassidy_40820/the-future-belongs-to-the-comprehensivist-a43e18dbb65a" target="_blank" rel="noreferrer">《未来属于综合主义者》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/06/weekly-issue-257.html" target="_blank" rel="noreferrer">黄仁勋的 Nvidia 故事</a>（2023 #257）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/05/weekly-issue-207.html" target="_blank" rel="noreferrer">汽车行业的顶峰可能过去了</a>（2022 #207）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/05/weekly-issue-157.html" target="_blank" rel="noreferrer">KK 给年轻人的建议</a>（2021 #157）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/05/weekly-issue-107.html" target="_blank" rel="noreferrer">致富与杠杆</a>（2020 #107）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202406/bg2024061025.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[如何用 JavaScript 画一棵树？]]></title>
            <link>https://bayi-95.eu.org/pages/javascript/如何用JavaScript画一棵树</link>
            <guid>https://bayi-95.eu.org/pages/javascript/如何用JavaScript画一棵树</guid>
            <pubDate>Tue, 11 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[产品要一颗随机树，也就是树的茂盛程度、长度、枝干粗细都是随机的，第一时间想到的就是 Canvas，用它来画这棵随机树吧。]]></description>
            <content:encoded><![CDATA[<h1 id="如何用-javascript-画一棵树" tabindex="-1">如何用 JavaScript 画一棵树？ <a class="header-anchor" href="#如何用-javascript-画一棵树" aria-label="Permalink to &quot;如何用 JavaScript 画一棵树？&quot;">&ZeroWidthSpace;</a></h1>
<hr>
<p>产品说要让前端用 JavaScript 画一棵树出来，但是这难道不能直接让 UI 给一张图片吗？</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX3YJUYsbHh2q7zx0hd0gSicFyzNgicqAMOPQw4ZBCiclzW4OMJz2en2kDA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>后来一问才知道，产品要的是一颗 <strong>随机树</strong>，也就是树的<strong>茂盛程度、长度、枝干粗细</strong>都是随机的，那这确实没办法叫 UI 给图，毕竟 UI 不可能给我 10000 张树的图片吧？</p>
<p>所以第一时间想到的就是 <strong>Canvas</strong>，用它来画这棵<strong>随机树（文末有完整代码）</strong></p>
<h2 id="canvas-画一颗随机树" tabindex="-1">Canvas 画一颗随机树 <a class="header-anchor" href="#canvas-画一颗随机树" aria-label="Permalink to &quot;Canvas 画一颗随机树&quot;">&ZeroWidthSpace;</a></h2>
<p>接下来使用 Canvas 去画这棵随机树</p>
<h3 id="基础页面" tabindex="-1">基础页面 <a class="header-anchor" href="#基础页面" aria-label="Permalink to &quot;基础页面&quot;">&ZeroWidthSpace;</a></h3>
<p>我们需要在页面上写一个 <code>canvas</code> 标签，并设置好宽高，同时需要获取它的 Dom 节点、绘制上下文，以便后续的绘制</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXpmpYict79AzUan6gj9WJ1UBUIia935dXc9R34cibwZfiahKH9SK1Y1HTibw/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<h3 id="坐标调整" tabindex="-1">坐标调整 <a class="header-anchor" href="#坐标调整" aria-label="Permalink to &quot;坐标调整&quot;">&ZeroWidthSpace;</a></h3>
<p>默认的 Canvas 坐标系是这样的</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXq0J7m8DmibGG8OxG9J1ebNfUfP2xmOrW00kEr4l9rG1oibZe9tXnRcXg/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>但是我们现在需要从中间去向上去画一棵树，所以坐标得调整成这样：</p>
<ul>
<li>
<p>X 轴从最上面移动到<strong>最下面</strong></p>
</li>
<li>
<p>Y 轴的方向由往下调整成<strong>往上</strong>，并且从最左边移动到<strong>画布中间</strong></p>
</li>
</ul>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXkcbt4On6xeDfH2kEL7UkuQFiciavad1o9mlJRp1TNQkErndam2gUp1wQ/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>这些操作可以使用 Canvas 的方法</p>
<ul>
<li>
<p><strong>ctx.translate：</strong> 坐标系移动</p>
</li>
<li>
<p><strong>ctx.scale：</strong> 坐标系缩放</p>
</li>
</ul>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX77XUPZjkTg4HDdE1nC7zAfL8n11GK5BQZzGdtHZ32BRdwgXLBibAOtA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<h3 id="绘制一棵树的要素" tabindex="-1">绘制一棵树的要素 <a class="header-anchor" href="#绘制一棵树的要素" aria-label="Permalink to &quot;绘制一棵树的要素&quot;">&ZeroWidthSpace;</a></h3>
<p>绘制一棵树的要素是什么呢？其实就是<strong>树枝</strong>和<strong>果实</strong>，但是其实<strong>树枝</strong>才是第一要素，那么<strong>树枝</strong>又有哪些要素呢？无非就这几个点</p>
<ul>
<li>
<p>起始点</p>
</li>
<li>
<p>树枝长度、树枝粗细</p>
</li>
<li>
<p>生长角度</p>
</li>
<li>
<p>终点</p>
</li>
</ul>
<h3 id="开始绘制" tabindex="-1">开始绘制 <a class="header-anchor" href="#开始绘制" aria-label="Permalink to &quot;开始绘制&quot;">&ZeroWidthSpace;</a></h3>
<p>所以我们可以写一个 <code>drawBranch</code> 来进行绘制，并且初始调用肯定是绘制<strong>树干</strong>，树干的参数如下：</p>
<ul>
<li>
<p>起始点：(0, 0)</p>
</li>
<li>
<p>树枝长度、树枝粗细：这些可以自己自定义</p>
</li>
<li>
<p>生长角度：90度</p>
</li>
<li>
<p>终点：需要算</p>
</li>
</ul>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX2EJBMLc0xJ9lTG76TV4RaqdOoeuHNyYdG4mwsNXksrOR6o2NSkhcOA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>这个终点应该怎么算呢？其实很简单，根据<code>树枝长度、生长角度</code>就可以算出来了，这是初高中的知识</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX9nx9luG91n10Qs6j8iczYOvQyjAgvCJ9fgWHOfOlUzmB7qwazsTeX8Q/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>于是我们可以使用 Canvas 的绘制方法，去绘制<strong>线段</strong>，其实树枝就是一个一个的<strong>线段</strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXic7Q82BUaI6aVT4v7Me0VTFeDAVbvJtFYianyYZPyrLiapeGK4tVILErg/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>到现在我绘制出了一个<strong>树干</strong> 出来</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXjQDhVxYCS3zJGF79V1dcia9q2uiapkHXVOibYVwVEiam2SibiaDVyG5YDXNA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>但是我们是想让这棵树开枝散叶，所以需要继续递归继续去绘制更多的树枝出来~</p>
<h3 id="递归绘制" tabindex="-1">递归绘制 <a class="header-anchor" href="#递归绘制" aria-label="Permalink to &quot;递归绘制&quot;">&ZeroWidthSpace;</a></h3>
<p>其实往哪开枝散叶呢？无非就是往左或者往右</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXSKVUib0mbPKiaxKrE2w9mFfX9r6icdpPU4viayFv07HYFib8tCxXmV3AjnA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>所以需要递归画左边和右边的树枝，并且<strong>子树枝肯定要比父树枝更短、比父树枝更细</strong>，比如我们可以定义一个比例</p>
<ul>
<li>
<p>子树枝是父树枝长度的 0.8</p>
</li>
<li>
<p>子树枝是父树枝粗细的 0.75</p>
</li>
</ul>
<p>而子树枝的生长角度，其实可以随机，我们可以在 <strong>0° - 30°</strong> 之间随机选一个角度，于是增加了递归调用的代码</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXaqAjfEW8g3DERnaTPAte2smULlxcib1fuz0zszwqI1tA5foQtj8zy1w/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>但是这个时候会发现，报错了，爆栈了，因为我们只递归开始，但却没有在某个时刻递归停止</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXHffLqzNDfxr2l7QDNHwufW4PfT4mD61ZM2miaf8qn9iaN2Bce108CrDg/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>我们可以自己定义一个停止规则（规则可以自己定义，这会决定你这棵树的茂盛程度）：</p>
<ul>
<li>
<p>粗细小于 2 时马上停止</p>
</li>
<li>
<p>（粗细小于 10 时 + 随机数）决定是否停止</p>
</li>
</ul>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX2ic1mUQH5XFUXI8whaxFaWF0ic1FOK0nbaibiczn2CbYzuOSzepGISYe1Q/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>现在可以看到我们已经大致绘制出一棵树了</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXMzDVWAm7aGicklQBaSjCUHdmY2icYVbdDFCoc1gffAdwDibHN8Vy1nA0Q/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>不过还少了树的果实</p>
<h3 id="绘制果实" tabindex="-1">绘制果实 <a class="header-anchor" href="#绘制果实" aria-label="Permalink to &quot;绘制果实&quot;">&ZeroWidthSpace;</a></h3>
<p>绘制果实很简单，只需要在绘制树枝结束的时候，去把果实绘制出来就行，其实果实就是一个个的<strong>白色实心圆</strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZXRdYsfRyg8Telzdv9VvjypicOIeWbiasw7gJKrmYzMF2FTuLa0OeStX5A/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>至此这棵树完整绘制完毕</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX3YJUYsbHh2q7zx0hd0gSicFyzNgicqAMOPQw4ZBCiclzW4OMJz2en2kDA/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<p>绘制部分的代码如下</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX24rjL15vX5usVN3WNTbRSZZOL3DWy44YrxLYhGpbpdib8nnjxNB4G2g/640?wx_fmt=png&amp;from=appmsg" alt="" loading="lazy"></p>
<h2 id="完整代码" tabindex="-1">完整代码 <a class="header-anchor" href="#完整代码" aria-label="Permalink to &quot;完整代码&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  &#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"background-color: cadetblue"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    &#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"canvasRef"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"1000"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"750"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>&#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  &#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> setup lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { ref, onMounted } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'vue'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 获取 canvas 的 dom 节点  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> canvasRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">HTMLCanvasElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> canvasEle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> canvasRef.value;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">canvasEle) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  // 获取 canvas 上下文  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> canvasEle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">getContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'2d'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  // 坐标系移动  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(canvasEle.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, canvasEle.height);  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  // y轴反向  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  //   coordinate 起始点  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  //   len 树枝长度  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  //   thick 树枝粗细  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  //   angle 生长角度  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> drawBranch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">coordinate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">len</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">thick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">angle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 绘制结束条件  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (thick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> &#x26;&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (thick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">      // 绘制果实  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">beginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">coordinate, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      ctx.fillStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '#fff'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">beginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 开启线段绘制  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">coordinate); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 初始起始点  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 计算结束点  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> endCoordinate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      coordinate[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">((angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">),  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      coordinate[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">((angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">),  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ];  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">endCoordinate); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 线段终点  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '#333'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 线段颜色  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.lineWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> thick; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 线段粗细  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.lineCap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'round'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 开始画  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 左分支  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    drawBranch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(endCoordinate, len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, thick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    // 右分支  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    drawBranch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(endCoordinate, len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, thick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  };  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  // 先画树干  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  drawBranch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">});  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">&#x3C;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">></span></span></code></pre>
</div><p>本文转自 <a href="https://mp.weixin.qq.com/s/6jfubgtHJly56w21j_mlQw" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/6jfubgtHJly56w21j_mlQw</a>，如有侵权，请联系删除。</p>
]]></content:encoded>
            <enclosure url="https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX3YJUYsbHh2q7zx0hd0gSicFyzNgicqAMOPQw4ZBCiclzW4OMJz2en2kDA/640?wx_fmt=png&from=appmsg" length="0" type="image//mmbiz_png/TZL4BdZpLdgmxFA53UBXN4648Zu4RcZX3YJUYsbHh2q7zx0hd0gSicFyzNgicqAMOPQw4ZBCiclzW4OMJz2en2kDA/640"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 303 期）：技术封建主义]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-303</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-303</guid>
            <pubDate>Fri, 07 Jun 2024 16:20:06 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
青岛崂山区的青山渔]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-303-期-技术封建主义" tabindex="-1">科技爱好者周刊（第 303 期）：技术封建主义 <a class="header-anchor" href="#科技爱好者周刊-第-303-期-技术封建主义" aria-label="Permalink to &quot;科技爱好者周刊（第 303 期）：技术封建主义&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4550" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060301.webp" alt="" loading="lazy"></p>
<p>青岛崂山区的青山渔村，远看就像童话世界。（<a href="https://www.douyin.com/note/7356562090217180468" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="技术封建主义" tabindex="-1">技术封建主义 <a class="header-anchor" href="#技术封建主义" aria-label="Permalink to &quot;技术封建主义&quot;">&ZeroWidthSpace;</a></h2>
<p>今天，介绍一本2024年的新书，在国外非常走红，因为提出了一个全新观点。</p>
<p>你是否以为，人类正在进入一个新时代——互联网高科技的时代？</p>
<p>这本书说 NO，<strong>人类更像回到封建时代，只是多了高科技</strong>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060101.webp" alt="" loading="lazy"></p>
<p>它的书名就叫《技术封建主义》（Techno Feudalism），即技术导致的封建主义。</p>
<p>作者雅尼斯·瓦鲁法基斯（Yanis Varoufakis）也不寻常。</p>
<p>他是一个希腊的经济学家，曾经被 Valve 公司（世界最大游戏平台 Steam 的创造者）聘用，后来成为希腊的财政部长，离任后写了这本书。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060102.webp" alt="" loading="lazy"></p>
<p>历史上，封建主义盛行在中世纪的欧洲，指的是大地主（又称为领主）占有大片土地，控制土地上的一切，农民也变成领主的私人财产（即农奴）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060103.webp" alt="" loading="lazy"></p>
<p>这跟现在的互联网有相似之处。</p>
<p>互联网虽然大，但是占有统治地位的，就是那几家公司：谷歌、苹果、微软、亚马逊、Meta……<strong>它们是互联网领主，瓜分了大部分的数字领地。</strong></p>
<p>在自己的领地上，它们就是掌管一切的王。</p>
<p>这本书进一步说，<strong>广大的网民实际上是数字农奴（又称云奴）</strong>。你在人家的领地里发帖子、上传照片视频，就是为领主工作。你拿不到多少回报，你的免费劳动只是为领主的公司增加价值。</p>
<p>久而久之，你甚至还会产生心理依赖，一天不去领主的土地看看，心里就会万分失落。</p>
<p>这些数字领主有强烈的领地意识，造出了高高的围篱，防止自己的数字资产（数据）流出，或者领地被其他公司侵占。</p>
<p>如果你要使用某个领主的领地，必须交付地租（使用费）。比如，你要把自己的 App 放在苹果应用商店出售，就必须把30%的收入交给苹果。这是苹果对它的数字领地收取的地租，跟中世纪的封建制度一模一样。</p>
<p>我看了书中的描述，真是脑洞大开，原来高大上的互联网经济，本质跟封建时代的地租没啥两样。</p>
<p>作者瓦鲁法基斯建议，为了打破技术封建主义，防止数字领主的出现，政府必须实行一些强制措施。</p>
<p><strong>（1）征收云税</strong>，降低数字领主获取的云地租。</p>
<p><strong>（2）推行统一的数字身份</strong>，不要让每个网站都推行自己的用户体系。一旦用户使用谷歌、微软、苹果等大公司的用户身份，表示自己的互联网身份，他就会依赖这些大公司，不得不受制于它。设想一下，如果某一天你突然失去了微信账户，生活会多么不方便。</p>
<p><strong>（3）推行数据共享</strong>。用户在某个应用产生的数据，应该可以移植到其他应用。比如，你在推特发的帖子，应该可以移植到其他社交媒体。这样就避免了数据被数字领主垄断。</p>
<h2 id="稀土开发者大会-分论坛和-ai-免费票" tabindex="-1">稀土开发者大会：分论坛和 AI 免费票 <a class="header-anchor" href="#稀土开发者大会-分论坛和-ai-免费票" aria-label="Permalink to &quot;稀土开发者大会：分论坛和 AI 免费票&quot;">&ZeroWidthSpace;</a></h2>
<p>今天有两个消息。</p>
<p>最近几周，周刊一直在介绍“稀土开发者大会”，它是今年全国开发者的大型活动之一。</p>
<p>首先，十个分论坛的议题已经全部出炉，大家看看，有没有感兴趣的。这里碍于篇幅，只贴了 <strong>《前端未来》分论坛的议题</strong>，其他可以看<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">官网</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060605.webp" alt="" loading="lazy"></p>
<p>其次，这次多了专门的 <strong>AI 免费票</strong>。这个票可以参与外场 AI 展区互动，以及掘金动手实验室的活动，不需要付费，但不能参与内场演讲。</p>
<p>商汤、月之暗面、Jina AI、科大讯飞、硅基流动、零一万物、Zilliz 等很多公司，都会在现场展示 AI 产品，你可以看演示，跟他们交谈，掘金实验室也是 AI 动手活动，关注 AI 的同学可以考虑。</p>
<p>活动日期是6月28日（周五）和6月29日（周日）两整天，地点是北京富力万丽酒店。</p>
<p>分论坛详细介绍，以及购票细节，请点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">官网链接</a>，或者扫描上方海报二维码，<u>AI 免费票也是在官网购票区领取</u>。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.vox.com/the-highlight/23972651/ultraviolet-disinfection-germicide-far-uv" target="_blank" rel="noreferrer">远紫外线灯</a></p>
<p>紫外线可以消毒、杀死细菌，那么能不能室内安装紫外线灯，对空气消毒呢？</p>
<p>答案是不能，因为紫外线会晒伤皮肤，导致皮肤癌。市场上的防晒产品，防得就是紫外线。</p>
<p>但是近年来，市场上出现了远紫外线灯，专门用于室内空气消毒。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011906.webp" alt="" loading="lazy"></p>
<p>奥秘就在于，这种灯发射的不是普通紫外线，而是远紫外线。普通紫外线的波长是254纳米，远紫外线的波长则是207纳米或222纳米，更偏光谱的外侧。</p>
<p>远紫外线的波长短，所以穿透力弱，不损害人体皮肤和眼部细胞，同时又能杀死病毒和细菌。</p>
<p>室内只要安装几盏这种灯，就能保证空气无害，同时它的光对人眼不可见，人体不会有任何察觉。这似乎很好的室内空气消毒方案。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011907.webp" alt="" loading="lazy"></p>
<p>唯一的问题是，氧气在紫外线或远紫外线的照射下，会分解出臭氧，刺激人体呼吸道，并导致头痛、眼痛。</p>
<p>因此，只有通风良好的情况下，才能使用远紫外线灯对室内空气消毒。</p>
<p>2、<a href="https://m.cnbeta.com.tw/view/1433067.htm" target="_blank" rel="noreferrer">AR 笔记本</a></p>
<p>你是否觉得笔记本的屏幕不够大？</p>
<p>一家美国公司推出了 AR 笔记本，拥有100吋的屏幕。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053102.webp" alt="" loading="lazy"></p>
<p>它的配置是，键盘加上一副 AR 眼镜。只有带上 AR 眼镜才能看到巨型屏幕。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053103.webp" alt="" loading="lazy"></p>
<p>官网已经开始正式预售了，价格是1700美元。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053104.webp" alt="" loading="lazy"></p>
<p>我觉得，苹果的 Vision Pro 其实应该做成这个样，就是眼镜+键盘。现在的 Vision Pro 没有实体键盘，必须凭空打字。而且，AR 笔记本的价格只是 Vision Pro 的一半，更容易被市场接受。</p>
<p>3、<a href="https://www.economist.com/culture/2023/11/03/athletics-should-embrace-super-shoes" target="_blank" rel="noreferrer">超级跑鞋</a></p>
<p>马拉松的比赛成绩，最近突飞猛进。世界前10的最佳成绩里面，女子有8个，男子有6个，是最近两年创造的。世界纪录 2:00:35 就是2023年10月8日创造的。</p>
<p>这是因为选手的能力突然提升了吗？不是的，真正原因是现在有更好的跑鞋。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112509.webp" alt="" loading="lazy"></p>
<p>耐克和阿迪达斯公司的最先进跑鞋，都有又厚又轻的泡沫鞋底。它们就像弹簧一样，踩下去时会将能量反馈给选手，根据研究，这种鞋子使得运动员少消耗4%的能量。</p>
<p>上图就是肯尼亚选手凯尔文·基普图姆（Kelvin Kiptum）创造世界纪录时穿的鞋子。</p>
<p>有些人要求禁掉这种鞋子，但是，世界田径协会目前为止还是允许使用，条件是厂商必须公平地向所有运动员提供，不能只向一部分人提供。</p>
<p>4、<a href="https://www.macpierce.com/the-camera-shy-hoodie" target="_blank" rel="noreferrer">反夜视连帽衫</a></p>
<p>很多摄像头有夜视功能，利用红外线，可以拍到黑暗中的行人。</p>
<p>一个美国艺术家为了躲避夜视摄像头，发明了“反夜视连帽衫”。只要穿上它，摄像头就拍不到你的脸。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023110213.webp" alt="" loading="lazy"></p>
<p>这种连帽衫的肩部带有很多 LED 灯珠（上图），但发出的不是可见光，而是强烈的红外线。人眼看不见红外线，所以看不见这些灯珠发光。</p>
<p>但是，夜视摄像头能拍到这些灯珠的红外线，呈现出一个光斑，正好把人脸遮住，就达到了“反夜视”效果。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023110214.webp" alt="" loading="lazy"></p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://testing.googleblog.com/2024/04/isbooleantoolongandcomplex.html" target="_blank" rel="noreferrer">如何简化布尔表达式</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042904.webp" alt="" loading="lazy"></p>
<p>谷歌官方介绍代码小技巧，如果一个布尔表达式又长又复杂，如何提高可读性？</p>
<p>2、<a href="https://frontendmasters.com/blog/how-to-make-a-css-timer/" target="_blank" rel="noreferrer">CSS 计时器</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053105.webp" alt="" loading="lazy"></p>
<p>一篇 CSS 高级教程，介绍如何编写一个纯 CSS 的计时器，可以进行5秒倒计时。</p>
<p>3、<a href="https://blog.partykit.io/posts/using-vectorize-to-build-search/" target="_blank" rel="noreferrer">如何用矢量数据库搭建一个搜索引擎</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060503.webp" alt="" loading="lazy"></p>
<p>作者介绍如何用矢量数据库，快速为个人网站搭建一个搜索引擎。</p>
<p>4、<a href="https://vale.rocks/blog/My_Code_Formatting_Guidelines" target="_blank" rel="noreferrer">我的 Prettier 设置</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043002.webp" alt="" loading="lazy"></p>
<p>Prettier 是 JS 代码美化工具，作者介绍了一些他的设置，怎样让代码看上去比较美观。</p>
<p>5、<a href="https://www.kenmuse.com/blog/understanding-container-image-layers/" target="_blank" rel="noreferrer">理解 Docker 容器的层（layer）</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060508.webp" alt="" loading="lazy"></p>
<p>Docker 容器文件是由多个层文件组合而成的，本文通过一个例子，介绍多个层如何组成一个容器文件。</p>
<p>另有一篇<a href="https://depot.dev/blog/building-container-layers-from-scratch" target="_blank" rel="noreferrer">类似的文章</a>，可以参考。</p>
<p>6、 <a href="https://www.andreinc.net/2024/04/24/from-the-circle-to-epicycles" target="_blank" rel="noreferrer">傅里叶级数的动画介绍</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060502.webp" alt="" loading="lazy"></p>
<p>一篇长文，从最简单的圆的方程开始，介绍傅里叶级数的概念，包含大量动画。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/fruitbars/simple-one-api" target="_blank" rel="noreferrer">simple-one-api</a></p>
<p>一个需要自己搭建的服务，将国产 AI 模型统一适配为 OpenAI API，即统一了接口，目前支持讯飞星火、百度千帆、腾讯混元。</p>
<p>2、<a href="https://github.com/PaoloJN/youtube-ai-extension" target="_blank" rel="noreferrer">Youtube AI 插件</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060201.webp" alt="" loading="lazy"></p>
<p>一个浏览器的开源插件，在 Youtube 的视频播放页面上插入一个 AI 聊天区域，会给出当前视频的总结，你也可以对当前视频提问。</p>
<p>3、<a href="https://docsolver.spotty.com.cn/" target="_blank" rel="noreferrer">DocSolver</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060405.webp" alt="" loading="lazy"></p>
<p>一个跟 PDF 文件聊天网站，<a href="https://github.com/ai-hermes/doc-solver" target="_blank" rel="noreferrer">代码</a>开源。（<a href="https://github.com/ruanyf/weekly/issues/4570" target="_blank" rel="noreferrer">@hehuangz</a> 投稿）</p>
<p>4、<a href="https://github.com/idootop/mi-gpt" target="_blank" rel="noreferrer">MiGPT</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060603.webp" alt="" loading="lazy"></p>
<p>一个小爱音箱的命令行工具，将音箱接入 ChatGPT 和豆包，改造成专属语音助手。（<a href="https://github.com/ruanyf/weekly/issues/4582" target="_blank" rel="noreferrer">@idootop</a> 投稿）</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/coleifer/sqlite-web" target="_blank" rel="noreferrer">sqlite-web</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020901.webp" alt="" loading="lazy"></p>
<p>基于 Web 的 SQLite 数据库浏览器。</p>
<p>2、<a href="https://github.com/k2-fsa/sherpa-onnx" target="_blank" rel="noreferrer">sherpa-onnx</a></p>
<p>开源的语音库，支持各种平台（包括手机和 PC），用来本地语音识别、语音合成、声音事件检测、语种检测等。（<a href="https://github.com/ruanyf/weekly/issues/4364" target="_blank" rel="noreferrer">@csukuangfj</a> 投稿）</p>
<p>3、<a href="https://github.com/Dolov/chrome-best-cookier" target="_blank" rel="noreferrer">Best Cookier</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060303.webp" alt="" loading="lazy"></p>
<p>一个浏览器插件，提供 Cookie 管理器，可以方便地编辑、查找、监控、导出 Cookie。（<a href="https://github.com/ruanyf/weekly/issues/4564" target="_blank" rel="noreferrer">@Dolov</a> 投稿）</p>
<p>4、<a href="https://github.com/hemengke1997/vscode-image-manager" target="_blank" rel="noreferrer">Image Manager</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060304.webp" alt="" loading="lazy"></p>
<p>VS Code 的插件，用来管理图片，支持压缩、搜索、裁剪、查找相似图片、预览大图等功能。（<a href="https://github.com/ruanyf/weekly/issues/4565" target="_blank" rel="noreferrer">@hemengke1997</a> 投稿）</p>
<p>5、<a href="https://github.com/OXeu/Rin" target="_blank" rel="noreferrer">Rin</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060601.webp" alt="" loading="lazy"></p>
<p>一个基于 Cloudflare Pages + Workers + D1 + R2 全家桶的博客项目，参见 <a href="https://xeu.life/" target="_blank" rel="noreferrer">demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4580" target="_blank" rel="noreferrer">@OXeu</a> 投稿）</p>
<p>6、<a href="https://github.com/canwdev/web-mediadevices-player" target="_blank" rel="noreferrer">Web MediaDevices Player</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060403.webp" alt="" loading="lazy"></p>
<p>网页版的 HDMI 采集卡，也可用作 Webcam 查看器，用来在网页上处理输入的视频/音频，同时提供 Tauri 打包的客户端。（<a href="https://github.com/ruanyf/weekly/issues/4569" target="_blank" rel="noreferrer">@canwdev</a> 投稿）</p>
<p>7、<a href="https://shoteasy.fun/image-compressor" target="_blank" rel="noreferrer">ShotEasy</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060404.webp" alt="" loading="lazy"></p>
<p>在线的图像文件压缩器，可以批量拖入或文件夹导入图片，<a href="https://github.com/CH563/shot-easy-website" target="_blank" rel="noreferrer">代码</a>开源。（<a href="https://github.com/ruanyf/weekly/issues/4571" target="_blank" rel="noreferrer">@CH563</a> 投稿）</p>
<p>8、<a href="https://tabulator.info/" target="_blank" rel="noreferrer">Tabulator</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021002.webp" alt="" loading="lazy"></p>
<p>一个 JS 的表格库，用来生成互动式网页表格。</p>
<p>9、<a href="https://github.com/Textualize/toolong" target="_blank" rel="noreferrer">Toolong</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021101.webp" alt="" loading="lazy"></p>
<p>一个用来查看日志文件的命令行工具。</p>
<p>10、<a href="https://dozzle.dev/" target="_blank" rel="noreferrer">Dozzle</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021105.webp" alt="" loading="lazy"></p>
<p>一个轻量级的 Docker 日志查看工具。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://geojson.hxkj.vip/" target="_blank" rel="noreferrer">全国行政区域边界数据</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060302.webp" alt="" loading="lazy"></p>
<p>全国省市区县行政边界数据免费下载，API 接口实时更新，适用于 echarts 等地图应用，查看<a href="https://github.com/TangSY/echarts-map-demo" target="_blank" rel="noreferrer">代码仓库</a>。（<a href="https://github.com/ruanyf/weekly/issues/4562" target="_blank" rel="noreferrer">@TangSY</a> 投稿）</p>
<p>2、<a href="https://jobincorner.com/" target="_blank" rel="noreferrer">Job In Corner</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060305.webp" alt="" loading="lazy"></p>
<p>一个程序员招聘信息聚合网站，采集自各种社交平台/社区。（<a href="https://github.com/ruanyf/weekly/issues/4567" target="_blank" rel="noreferrer">@Yidoon</a> 投稿）</p>
<p>3、<a href="https://oldwestenglish.github.io/grammar/" target="_blank" rel="noreferrer">薄冰大学英语语法</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032804.webp" alt="" loading="lazy"></p>
<p>《薄冰大学英语语法》的在线阅读。</p>
<p>4、<a href="https://udlbook.github.io/udlbook/" target="_blank" rel="noreferrer">理解深度学习</a>（Understanding Deep Learning）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112702.webp" alt="" loading="lazy"></p>
<p>免费阅读的英文电子书，深度学习的入门教材。类似的书籍还有<a href="https://d2l.ai/" target="_blank" rel="noreferrer">《Dive into Deep Learning》</a>。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://spectrum.ieee.org/chinese-keyboard" target="_blank" rel="noreferrer">早期的中文键盘</a></p>
<p>1975年，北京大学汉字信息处理技术研究室成立，目标是创建“汉字信息处理与输入系统”，研究如何把汉字输入计算机。</p>
<p>当时，计算机采用的是英文键盘，只能输入英文字母，他们因此考虑发明可以输入汉字的“汉字键盘”。</p>
<p>他们做了十多个中文键盘设计方案，最终确定了一款有256个键的键盘。其中，29个键用于各种功能，例如回车和空格，其余227个键用于输入文本。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060202.webp" alt="" loading="lazy"></p>
<p>键盘包含423个完整汉字，以及264个汉字部首。它总共能够输入7,282个汉字，设计团队估计，这占到了日常汉字的90%以上。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060203.webp" alt="" loading="lazy"></p>
<p>在这个字符集中，423个最常用的汉字可以一次击键输入；2,930个汉字可以两次击键输入；另外3,106个汉字可以三次击键输入；其余823个汉字需要四到五次击键。</p>
<p>2、<a href="https://en.rattibha.com/thread/1622721223561187328" target="_blank" rel="noreferrer">拟物图标的消失</a></p>
<p>早期的很多图标，都是拟物设计，逼真还原真实的物体，比如“保存”图标就是一张磁盘。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202302/bg2023020801.webp" alt="" loading="lazy"></p>
<p>但是，最近几年，拟物图标逐渐在消失，变成更简洁、更简化的设计。</p>
<p>比如，Gmail 的图标从拟物的信封，变成了抽象的字母 M。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202302/bg2023020802.webp" alt="" loading="lazy"></p>
<p>Instagram 的图标也从完全拟物的照相机，变得越来越简化。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202302/bg2023020803.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://techcrunch.com/2024/06/01/wtf-is-ai/" target="_blank" rel="noreferrer">AI 的擅长和风险</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202406/bg2024060602.webp" alt="" loading="lazy"></p>
<p>AI 最擅长做下面的事情。</p>
<p>（1）快速创作低价值的书面作品，比如一篇博客文章的草稿，里面包含你想说的内容的总体思路。</p>
<p>（2）完成低级编码任务，比如初级程序员从一个项目复制到另一个项目的代码，或者从 Stack Overflow 复制代码。</p>
<p>（3）对会议、论文和数据库进行总结和排序。AI 非常擅长干这个，因为它本来就是围绕从大量无序数据中提取有用信息的概念构建的。</p>
<p>（4）从大量数据——天文观测、蛋白质相互作用、临床结果——发现其中的模式。AI 虽然本身并没有做出任何发现，但研究人员可以利用它们来加速自己的发现。</p>
<p>（5）AI 是令人惊讶的健谈者，可以永无止境地谈下去，而且对每个话题都很了解，不带评判性，并且反应迅速！</p>
<p><strong>AI 最大的风险在于，它们不知道如何说“我不知道”。</strong></p>
<p>当 AI 遇见以前从未遇见的东西时会发生什么？由于没有现成的模式可供遵循，它只是根据以前模式所反映的一般规则进行猜测。因此它的反应可能很笼统、很奇怪或不恰当。我们将这种现象称为幻觉。</p>
<p>令人不安的是，AI 不会告诉你，哪些是它的幻觉，哪些是事实。</p>
<p>如果你要求 AI 总结一些研究并给出引用，它可能会编造一些不存在的论文和作者，你根本分不出来。</p>
<p>而且，按照目前 AI 模型的构建方式，没有任何实用的方法可以防止幻觉。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>现代文明依赖于海底光缆。如果有一天，所有海底光缆同时断裂，现代文明将立刻停止运转。</p>
<p>银行和政府无法在国与国之间转移资金，因为国际结算系统通过海底光缆完成交易。在世界大部分地区，人们会发现他们的信用卡不再有效，自动取款机也无法提取现金。于是，金融体系立即冻结，货币交易停止，证券交易所关闭。</p>
<p>-- <a href="https://www.theverge.com/c/24070570/internet-cables-undersea-deep-repair-ships" target="_blank" rel="noreferrer">《海底下的云》</a></p>
<p>2、</p>
<p>中国在各个领域都竭尽全力。因为有超过10亿的中国人不是高收入，他们别无选择，只能在所有事情上进行最激烈的竞争。半导体、电动汽车、5G、生物技术、人工智能、造船、高铁、互联网、太阳能电池板等，这样的例子不胜枚举。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=39626002" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>3、</p>
<p>不要欺骗自己说，公司会照顾每个人。公司的性质决定了，它必须确保缺少任何特定个人的情况下，还能正常运作。对于那些想从公司的工作中获取自我认同的人来说，结局可能是很残酷的。</p>
<p>-- <a href="https://www.ft.com/content/ff58f701-fadf-43bb-a5e7-e4ebcf2bf6a9" target="_blank" rel="noreferrer">《我的职业生涯即将结束，我学到了什么》</a></p>
<p>4、</p>
<p>如果你做某件事，感到很痛苦，所有减轻痛苦的方法尝试了都无效，那么，你可以想想，当初你是为了什么来到这里。</p>
<p>-- <a href="https://edition.cnn.com/travel/article/drake-passage-rough-sea-scn/index.html" target="_blank" rel="noreferrer">《世界上最可怕的海洋航行》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/05/weekly-issue-256.html" target="_blank" rel="noreferrer">最酷的乐高作品</a>（2023 #256）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/05/weekly-issue-206.html" target="_blank" rel="noreferrer">如何走出失望和怀疑</a>（2022 #206）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/04/weekly-issue-156.html" target="_blank" rel="noreferrer">显卡缺货与异业竞争</a>（2021 #156）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/05/weekly-issue-106.html" target="_blank" rel="noreferrer">数字游民</a>（2020 #106）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202406/bg2024060301.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 302 期）：创业虽然好，不敢推荐了]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-302</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-302</guid>
            <pubDate>Fri, 31 May 2024 16:20:15 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
宁波奉化在稻田里建]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-302-期-创业虽然好-不敢推荐了" tabindex="-1">科技爱好者周刊（第 302 期）：创业虽然好，不敢推荐了 <a class="header-anchor" href="#科技爱好者周刊-第-302-期-创业虽然好-不敢推荐了" aria-label="Permalink to &quot;科技爱好者周刊（第 302 期）：创业虽然好，不敢推荐了&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4550" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053001.webp" alt="" loading="lazy"></p>
<p>宁波奉化在稻田里建了一个形似灯笼的塔，高23米，成为当地的景观，也是大地艺术品。（<a href="https://www.gooood.cn/the-lantern-in-the-paddy-field-china-by-powerchina-huadong-engineering-corporation-limited-air-colab-studio.htm" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="创业虽然好-不敢推荐了" tabindex="-1">创业虽然好，不敢推荐了 <a class="header-anchor" href="#创业虽然好-不敢推荐了" aria-label="Permalink to &quot;创业虽然好，不敢推荐了&quot;">&ZeroWidthSpace;</a></h2>
<p>保罗·格拉汉姆（Paul Graham）是美国著名的“创业导师”，孵化过很多大名鼎鼎的互联网公司，比如 Airbnb、Reddit、Dropbox 等等。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052606.webp" alt="" loading="lazy"></p>
<p>二十年前，他写了一本书《黑客与画家》，谈了很多理由，为什么你应该创业。（无耻的插入：我是《黑客与画家》中文版的译者。）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052912.webp" alt="" loading="lazy"></p>
<p>今年三月份，他的<a href="https://www.paulgraham.com/google.html" target="_blank" rel="noreferrer">最新文章</a>还是同样的观点。20年来，他一直没变。</p>
<p>下面就是他的解释，创业好在哪里。以前都发过，这里简单列一下。</p>
<blockquote>
<ol>
<li>创业可以致富。</li>
<li>创业可以拥有更多人生，去做自己想做的事情。</li>
<li>创业可以避免不想做的事情，比如老板吩咐你的事情。</li>
<li>创业可以活出自己的样子，打工只能活成老板需要的样子。</li>
</ol>
</blockquote>
<p>这些话对不对？每一句都千真万确。</p>
<p>我在大学里第一次读到他的文章，就被说服了。从那个时候起，就深信不疑，创业优于打工。</p>
<p>但是，我的想法现在有一些变化。如果现在你问我，<strong>刚刚毕业的年轻人，应该加入创业公司，还是去打工？</strong></p>
<p>我的回答是，这需要好好想一想。</p>
<p>这几年，情况发生了很大变化，创业的机会成本显著上升，表现在下面几点。</p>
<p><strong>（1）创业成功率下降了。</strong></p>
<p>虽然创业公司一向很难成功，但是这几年更难了。上市或被收购的数量减少，而且估值也低了很多。</p>
<p>这意味着，创业公司的股票和期权普遍不值钱，创业致富的机会微乎其微。</p>
<p><strong>（2）创业难以获得高薪。</strong></p>
<p>如果等不到股票变现，那么平时的薪水不能低，否则就会很惨。</p>
<p>问题是这几年工资上涨，以前的高工资，现在成了普通工资水平。创业公司越来越难付得起，业内大公司的工资水平。</p>
<p><strong>（3）打工也能学到新东西。</strong></p>
<p>创业公司的一大优势是，能够做有趣的事情，学到很多新东西。但是随着移动互联网的饱和，大家都在转向新领域（比如 AI），都在尝试新技术，所以这点优势也不明显了。</p>
<p>综上所述，创业公司如今的吸引力，大大低于十年前。</p>
<p>我的建议是，<strong>如果没有独立获取客户的能力，就不要创业。</strong> 刚刚毕业的年轻人，比较稳妥的道路是先进入大公司，开拓眼界，积累人脉，提升能力，等到可以独立获取客户了，再考虑要不要创业。</p>
<h2 id="活动-稀土开发者大会2024" tabindex="-1">[活动] 稀土开发者大会2024 <a class="header-anchor" href="#活动-稀土开发者大会2024" aria-label="Permalink to &quot;[活动] 稀土开发者大会2024&quot;">&ZeroWidthSpace;</a></h2>
<p>下个月6月28日（周五）和6月29日（周六），北京有一场大型的开发者活动。</p>
<p>这就是今年的“稀土开发者大会”，持续整整两天，有12个分论坛，70多场演讲。</p>
<p>12个分论坛针对的，都是当前的技术热点，包括前端、AI、云计算、大模型等。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053007.webp" alt="" loading="lazy"></p>
<p>愿意来现场听演讲、结交朋友的同学，现在可以<strong>购买早鸟票，包含两天的午餐</strong>，并且可以抽奖，100%中奖。</p>
<p>购票链接点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">这里</a>，或者扫描上方海报的二维码。到不了现场的朋友，也可以免费预约直播。</p>
<p>另外，主办方还有“分享有礼”活动，<u>只要分享活动海报，就有机会赢得大会门票和周边纪念品</u>，详情见<a href="https://bytedance.larkoffice.com/share/base/form/shrcnByj6fI3FuNHfOQgL5g4BOf" target="_blank" rel="noreferrer">这个链接</a>。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://news.cqnews.net/1/detail/1242225478734929920/web/content_1242225478734929920.html" target="_blank" rel="noreferrer">阶梯草地</a></p>
<p>上海最近有一块阶梯状草地，成了网红地点。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052910.webp" alt="" loading="lazy"></p>
<p>这块草地上方，正好有树荫遮阳，每到午休时间，不少附近的上班族就来草坪躺着。</p>
<p>这个地方出名以后，不少人专门来打卡、野餐、午休。他们评价这个草坪是天然的人体工程学设计，就像沙滩椅。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052911.webp" alt="" loading="lazy"></p>
<p>我觉得，园林部门应该受到启发，以后多修一些这种带树荫的阶梯状草坪，方便人们躺着，这样可以增加绿地的效用，也让城市更适宜生活。</p>
<p>2、<a href="https://www.speciesunite.com/news-stories/future-of-food-this-company-just-opened-the-worlds-first-air-protein-factory" target="_blank" rel="noreferrer">空气蛋白质</a></p>
<p>人类食物很大部分都是蛋白质，比如肉类和豆类。科学家很久以来，就想人工合成蛋白质，彻底消除饥荒。</p>
<p>一家芬兰公司宣称，已经实现了空气合成蛋白质。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042411.webp" alt="" loading="lazy"></p>
<p>他们使用一种微生物，只需要空气中的二氧化碳，就能产生一种黄色的蛋白质粉末，过程类似于酿酒，据说营养丰富。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042412.webp" alt="" loading="lazy"></p>
<p>这种粉末已经用来制作了巧克力，完全可以食用。这家芬兰公司没有披露成本，但是披露他们的工厂每年产量160吨，相当于300头牛的蛋白质。</p>
<p>3、<a href="https://www.npr.org/2024/05/23/1252943784/a-billionaire-surprised-graduates-onstage-with-cash-but-its-not-all-theirs-to-keep" target="_blank" rel="noreferrer">毕业现金</a></p>
<p>最近是毕业季，美国麻省大学邀请了一位企业家来做毕业演讲。</p>
<p>他演讲完，宣布了一个惊人的决定。“生活中最大的快乐来自于给予，我想与你们分享给予的快乐。”</p>
<p>他宣布，学校的1200位毕业生每人会拿到一个信封，里面装了1000美元。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052605.webp" alt="" loading="lazy"></p>
<p>但是，你只能拿500美元，剩下的500美元必须送给你认为需要的人。</p>
<p>我认为，这种做法挺好。国内很多企业家现在都向大学捐款，其实也可以考虑向学生捐款，效果应该很不错。</p>
<p>4、<a href="https://www.wired.com/story/roboform-password-3-million-dollar-crypto-wallet/" target="_blank" rel="noreferrer">破解电子钱包</a></p>
<p>2013年，一个老外花了5300美元，购买了43.6个比特币，放在一个电子钱包里面。</p>
<p>后来，他忘了电子钱包的密码，现在里面的比特币市价已经300万美元。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053002.webp" alt="" loading="lazy"></p>
<p>他实在不甘心这么一大笔钱，就请了一个黑客来破解电子钱包的密码。</p>
<p>这个密码是用一个叫做 RoboForm 的软件生成的随机密码，长达20个字符，不可能暴力破解。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053003.webp" alt="" loading="lazy"></p>
<p>但是，这个软件早期的版本正好有一个 bug，生成的密码是一个伪随机数，用的是系统的当前时间作为种子。</p>
<p>也就是说，如果知道密码生成的确切时间，就可以还原出密码。已知钱包是2013年4月14日启用的，密码可能在此前或此后设置。</p>
<p>他们就用前后的每一个时间去试，最后终于找到了，密码是在2013年5月15日下午 4:10:40 GMT 生成的。</p>
<p>RoboForm 早就修正了这个 Bug。以后的人如果忘了密码，真的是找不回来了。</p>
<h2 id="雷池-网站防护软件" tabindex="-1">雷池：网站防护软件 <a class="header-anchor" href="#雷池-网站防护软件" aria-label="Permalink to &quot;雷池：网站防护软件&quot;">&ZeroWidthSpace;</a></h2>
<p>做过网站的同学都知道，每天的恶意请求成千上万，就想找到你的漏洞。</p>
<p>今天，向大家介绍一个网站防护项目，中文名为“<a href="https://waf-ce.chaitin.cn/" target="_blank" rel="noreferrer">雷池</a>”。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052708.webp" alt="" loading="lazy"></p>
<p>它本质是一个反向代理，架设在网站前面，可以灵活设定各种规则，对所有请求进行过滤，不让黑客“越雷池半步”。</p>
<p>它底层基于 Nginx，自带图形操作界面，简单好用。它的核心是智能语义分析算法，用来判断可疑请求，相当于一层自定义的软件防火墙，</p>
<p>它在 <a href="https://github.com/chaitin/SafeLine" target="_blank" rel="noreferrer">GitHub</a> 已经收获了9000 star，目前是全球排名第一的开源 WAF 项目。</p>
<p>它可以自己架设，很适合个人和小企业使用。如果你需要防护暴露在公网的 Web 服务器，不妨用它试试看。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.bleepingcomputer.com/news/security/github-comments-abused-to-push-malware-via-microsoft-repo-urls/" target="_blank" rel="noreferrer">GitHub 的评论附件漏洞</a>（英文）</p>
<p>本文指出 GitHub 有一个漏洞，用户可以在任意仓库的讨论区上传附件，然后这个附件的 URL 就属于这个仓库。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042203.webp" alt="" loading="lazy"></p>
<p>举例来说，我在 React 仓库的讨论区上传一个附件，这个附件的 URL 就是以 React 官方仓库的地址开头，看上去特别具有迷惑性。已经有人利用这一点，分发恶意软件。</p>
<p>2、<a href="https://notes.nokun.eu/post/2024-05-26-expensive-laptops-dont-pro/" target="_blank" rel="noreferrer">2200美元的 MacBook 不支持双屏幕</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052703.webp" alt="" loading="lazy"></p>
<p>作者有一台 M3 芯片的 MacBook Pro 14，价格2200美元，但是居然不支持双屏幕。只有关起笔记本，才能用双屏。2024年还有这种事，作者表示难以置信。</p>
<p>3、 <a href="https://onlyspans.net/" target="_blank" rel="noreferrer"><code>&lt;span&gt;</code>元素可以干什么</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042205.webp" alt="" loading="lazy"></p>
<p><code>&lt;span&gt;</code>是一个表示行内文本的 HTML 网页元素，本文收集了许多案例，你可以用它做各种各样的事情。</p>
<p>4、<a href="https://lemire.me/blog/2024/03/12/how-to-read-files-quickly-in-javascript/" target="_blank" rel="noreferrer">如何在 JavaScript 中快速读取文件</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031404.webp" alt="" loading="lazy"></p>
<p>作者列出了 JavaScript 读取文件的5种方法，并且比较了它们的性能差异。</p>
<p>5、<a href="https://blog.greg.technology/2024/01/02/how-do-you-ocr-on-a-mac.html" target="_blank" rel="noreferrer">如何使用 mac 内置的 OCR</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010702.webp" alt="" loading="lazy"></p>
<p>大家可能不知道，mac 电脑内置了 OCR（文字识别）功能，本文教你怎么使用。</p>
<p>6、<a href="https://blog.yelinaung.com/posts/what-happened-to-my-print/" target="_blank" rel="noreferrer">为什么我的代码报错之前没有输出</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010710.webp" alt="" loading="lazy"></p>
<p>一篇 C 语言的科普文章，解释一个有点费解的报错，关于 C 语言内置的行缓冲（line buffering）如何影响代码的执行结果。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://socialscreenshots.com/editor" target="_blank" rel="noreferrer">SocialScreenshots</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052607.webp" alt="" loading="lazy"></p>
<p>一个在线的截图美化软件。</p>
<p>2、<a href="https://github.com/ccbikai/Sink" target="_blank" rel="noreferrer">Sink</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052702.webp" alt="" loading="lazy"></p>
<p>一个基于 Cloudflare 的短链接应用，带有访问统计。（<a href="https://github.com/ruanyf/weekly/issues/4529" target="_blank" rel="noreferrer">@ccbikai</a> 投稿）</p>
<p>3、<a href="https://github.com/besscroft/PicImpact" target="_blank" rel="noreferrer">PicImpact</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052801.webp" alt="" loading="lazy"></p>
<p>一个 Web 相册程序，基于 Next.js。（<a href="https://github.com/ruanyf/weekly/issues/4526" target="_blank" rel="noreferrer">@besscroft</a> 投稿）</p>
<p>4、<a href="https://github.com/linyuxuanlin/Gallery-Portfolio" target="_blank" rel="noreferrer">Gallery-Portfolio</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053004.webp" alt="" loading="lazy"></p>
<p>一个开源的“瀑布流”照片展示程序，后端可以放在免费的 Cloudflare R2（或其他兼容 AWS S3 的存储），参见 <a href="https://gallery-portfolio.wiki-power.com/" target="_blank" rel="noreferrer">Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4535" target="_blank" rel="noreferrer">@linyuxuanlin</a> 投稿）</p>
<p>5、<a href="https://github.com/mumuy/widget-qrcode" target="_blank" rel="noreferrer">widget-qrcode</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052802.webp" alt="" loading="lazy"></p>
<p>一个网页二维码的 web component 组件，支持自定义二维码风格模板、前景、背景、logo等。（<a href="https://github.com/ruanyf/weekly/issues/4530" target="_blank" rel="noreferrer">@mumuy</a> 投稿）</p>
<p>6、<a href="https://github.com/2noise/ChatTTS" target="_blank" rel="noreferrer">ChatTTS</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053005.webp" alt="" loading="lazy"></p>
<p>专门为对话场景设计的文本转语音模型，支持英语和中文两种语音。（<a href="https://github.com/ruanyf/weekly/issues/4546" target="_blank" rel="noreferrer">@JoeDeanx</a> 投稿）</p>
<p>7、<a href="https://github.com/xcanwin/KeepChatGPT" target="_blank" rel="noreferrer">KeepChatGPT</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024053006.webp" alt="" loading="lazy"></p>
<p>一款油猴脚本，为 ChatGPT 页面增强功能。（<a href="https://github.com/ruanyf/weekly/issues/4548" target="_blank" rel="noreferrer">@Y024</a> 投稿）</p>
<p>8、<a href="https://github.com/mail-in-a-box/mailinabox" target="_blank" rel="noreferrer">Mail-in-a-Box</a></p>
<p>一个封装好的邮件服务器，简单安装就能提供你自己的电子邮件服务。</p>
<p>9、<a href="https://github.com/innovatorved/subtitle" target="_blank" rel="noreferrer">Subtitle</a></p>
<p>一个 Python 程序，使用开源 Whisper ASR 模型进行语音识别，生成本地视频的字幕。</p>
<p>10、<a href="https://github.com/wukko/cobalt" target="_blank" rel="noreferrer">cobalt</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112701.webp" alt="" loading="lazy"></p>
<p>一个开源的视频下载网址，支持多个视频网站，包括 B 站、Youtube、instagram 和 Twitter。</p>
<p>11、<a href="https://columns.ai/chatgpt" target="_blank" rel="noreferrer">LLM 交互式图表</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052501.webp" alt="" loading="lazy"></p>
<p>用户输入想要的图表，比如“发电量前十的国家”，该网站会自动生成。</p>
<p>12、<a href="https://tldraw.dev/introduction" target="_blank" rel="noreferrer">tldraw</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112707.webp" alt="" loading="lazy"></p>
<p>一个 React 组件，帮你实现一个网页画板。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://kingbird.myphotos.cc/packing/squares_in_squares.html" target="_blank" rel="noreferrer">方块中的方块</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111315.webp" alt="" loading="lazy"></p>
<p>该网页收集可以容纳 n 个单位正方形的最小正方形。</p>
<p>举例来说，上图是容纳5个单位正方形的正方形，下图是容纳10个单位正方形。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111316.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://github.com/bitcoinbook/bitcoinbook/blob/develop/BOOK.md" target="_blank" rel="noreferrer">掌握比特币：开放区块链编程</a>（第三版）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052701.webp" alt="" loading="lazy"></p>
<p>一本免费阅读的英文电子书。</p>
<p>3、<a href="https://docland.io/" target="_blank" rel="noreferrer">Docland</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052704.webp" alt="" loading="lazy"></p>
<p>这个网站可以快速查找 Java 的 API。</p>
<p>4、<a href="https://zilliz.com/blog?tag=39&amp;page=2" target="_blank" rel="noreferrer">矢量数据库介绍</a>（Vector Database Stories）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023071310.webp" alt="" loading="lazy"></p>
<p>一组矢量数据库的介绍文章，这是相似性搜索的基础。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://old.reddit.com/r/space/comments/wtl9fj/two_years_ago_i_teamed_up_with_a_fellow_redditor/" target="_blank" rel="noreferrer">真实的月球照片</a></p>
<p>两位国外的天文爱好者用了两年时间，合成了一张高清的月球照片，原图高达 174MB。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202208/bg2022082201.webp" alt="" loading="lazy"></p>
<p>这张照片的最大特点，就是还原了月球的真实色彩，即如果没有地球大气层的光线折射，月球在宇宙空间中看上去的真实样子。</p>
<p>照片中，微红色的区域是富含铁的区域，蓝色区域是富含钛的区域。</p>
<p>2、<a href="https://www.scopeofwork.net/2023-01-30/" target="_blank" rel="noreferrer">磁带点播机</a></p>
<p>1972年，松下发布过磁带“唱机”，可以自动播放多盘磁带。</p>
<p>它有一个转盘，上面可以插入20盘磁带。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121708.webp" alt="" loading="lazy"></p>
<p>转盘下面有20个按钮，对应20盘磁带。你可以指定播放其中一盘磁带。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121707.webp" alt="" loading="lazy"></p>
<p>当该盒磁带播放完，转盘就自动向前进一格，接着播放下一盘磁带。</p>
<p>20盘磁带一共可以不停歇地播放两天半（假定每盘磁带单面长度为90分钟）。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.npr.org/2024/05/28/1243933142/diverging-diamond-interchange-chlewicki" target="_blank" rel="noreferrer">钻石立交桥</a></p>
<p>汽车靠右行驶的国家（比如中国、美国、德国），大多数的交通事故都发生在十字路口左转时。</p>
<p>这是因为左转时，会遇到两侧的来车，驾驶员可能来不及反应，就容易发生事故。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052902.webp" alt="" loading="lazy"></p>
<p>为了解决这个问题，美国现在流行钻石立交桥（diverging diamond intersection）。</p>
<p>这种立交桥可以使得，左转时只有同向车流，没有异向车流，完全消除了车辆迎面碰撞的可能。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052909.webp" alt="" loading="lazy"></p>
<p>上图有两个方向的车流，南北向和东西向。正常情况下，这里会有一个十字路口。</p>
<p>现在，为了避免十字路口的碰撞，这里造了一个南北向的立交桥。如果南北向的司机想要左转，必须走立交。</p>
<p>立交桥上，分成两条路，北向车流（下图的红色箭头）和南向车流（下图的绿色箭头）各走一条路。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052904.webp" alt="" loading="lazy"></p>
<p>北向司机先走左边那条路，会有一个专门的左转路口（下图的红色箭头），此时完全没有对向车流，就避免了迎面碰撞。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052905.webp" alt="" loading="lazy"></p>
<p>过了这个左转路口，会有一个交叉路口，北向车流和南向车流交换道路（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052908.webp" alt="" loading="lazy"></p>
<p>经过这一步，北向车流会从左边的路换到右边的路，南向车流亦是如此，为后面两条路重新合成一条路，做好准备。</p>
<p>目前，这种设计的立交桥在美国30个州已经建了200多座。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>一项研究发现，低利率会带来较低的犯罪率。因为低利率意味着偿债压力轻、并且会促进经济繁荣，增加就业机会。</p>
<p>-- <a href="https://thecrimereport.org/2016/12/06/the-startling-link-between-low-interest-rates-and-low-crime/" target="_blank" rel="noreferrer">《低利率与低犯罪率之间的“惊人”联系》</a></p>
<p>2、</p>
<p>AI 最好被理解为一种新的数字物种。我预测我们将把它视为数字伴侣，它是我们一生旅程中的新伙伴。</p>
<p>-- <a href="https://futurism.com/microsoft-executive-ai-digital-species" target="_blank" rel="noreferrer">Mustafa Suleyman</a>，微软人工智能首席执行官</p>
<p>3、</p>
<p>AI 将所有软件工程师变成了机器学习工程师。</p>
<p>-- <a href="https://olshansky.substack.com/p/vibe-checks-are-all-you-need" target="_blank" rel="noreferrer">Olshansky's Newsletter</a></p>
<p>4、</p>
<p>房价大幅上涨不会创造财富，而是重新分配财富。它还有一个副作用，就是让继承和运气变得比教育和努力工作更重要。</p>
<p>-- <a href="https://www.theguardian.com/australia-news/2023/nov/27/australian-housing-wealth-is-meaningless-destructive-and-fundamentally-changing-our-society" target="_blank" rel="noreferrer">英国卫报</a></p>
<p>5、</p>
<p>勇敢并不意味着不害怕，而是意味着尽管害怕，你还是去做那些必须要做的事。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=40487188" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/05/weekly-issue-255.html" target="_blank" rel="noreferrer">对待 AI 的正确态度</a>（2023 #255）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/05/weekly-issue-205.html" target="_blank" rel="noreferrer">互联网风口过去了吗？</a>（2022 #205）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/04/weekly-issue-155.html" target="_blank" rel="noreferrer">数字货币是打破美元霸权的武器吗？</a>（2021 #155）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/04/weekly-issue-105.html" target="_blank" rel="noreferrer">线上行业会赢</a>（2020 #105）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202405/bg2024053001.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 301 期）：OpenAI 的图书馆工位]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-301</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-301</guid>
            <pubDate>Fri, 24 May 2024 16:18:50 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
新疆喀什的阿图什天]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-301-期-openai-的图书馆工位" tabindex="-1">科技爱好者周刊（第 301 期）：OpenAI 的图书馆工位 <a class="header-anchor" href="#科技爱好者周刊-第-301-期-openai-的图书馆工位" aria-label="Permalink to &quot;科技爱好者周刊（第 301 期）：OpenAI 的图书馆工位&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4390" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052207.webp" alt="" loading="lazy"></p>
<p>新疆喀什的阿图什天门景区，爬山路线都是在悬崖上架设的栈道，非常壮观。（<a href="https://www.douyin.com/video/7358322104661527843" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="openai-的图书馆工位" tabindex="-1">OpenAI 的图书馆工位 <a class="header-anchor" href="#openai-的图书馆工位" aria-label="Permalink to &quot;OpenAI 的图书馆工位&quot;">&ZeroWidthSpace;</a></h2>
<p>OpenAI 是眼下最炙手可热、排名第一的 AI 公司。</p>
<p>大家大概没见过，这家公司的总部。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051902.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051904.webp" alt="" loading="lazy"></p>
<p>它的总部是旧金山市区的一栋三层小楼，原来是一家食品厂，后来改建为办公楼。</p>
<p>这栋小楼很不起眼，外面也没有大幅的标识，你根本想不到，里面正在开发人类最先进的人工智能模型。</p>
<p>那么，楼里什么样？</p>
<p>《纽约时报》最近公开了<a href="https://www.nytimes.com/2024/05/15/technology/openai-library-office.html?unlocked_article_code=1.sk0.YPlO.TYf5O94wbM-o&amp;smid=url-share" target="_blank" rel="noreferrer">一组照片</a>，披露楼里有一个很漂亮的图书馆。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051905.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051909.webp" alt="" loading="lazy"></p>
<p>藏书都是 OpenAI 员工推荐的，还装饰了科学家的照片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051907.webp" alt="" loading="lazy"></p>
<p>这个图书馆可不是只有一间屋子，而是有两层，面积相当大。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051908.webp" alt="" loading="lazy"></p>
<p>最特别的是，图书馆里面有很多自习桌，就像大学的自习室一样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051910.webp" alt="" loading="lazy"></p>
<p>员工可以在里面读书、休息，也可以一整天在这里办公，相当于工位。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051911.webp" alt="" loading="lazy"></p>
<p>图书馆工位有很多好处。首先，就是安静，可以集中注意力，全力投入工作，思考一些困难的问题。这对 OpenAI 那样开创性的公司非常重要。</p>
<p>其次，图书馆的气氛比较放松，不压抑，工作时精神不容易疲倦，甚至还有一些漫游知识海洋的趣味，可能激发意想不到的灵感。</p>
<p>我不由联想到了，国内互联网公司的工位。通常是一整层写字楼，改造成开放式空间，大家挤在一起办公，整层往往有几百个工位，就像一个喧闹的大车间。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051912.webp" alt="" loading="lazy"></p>
<p>这种车间式工位会互相影响，而且有一种压抑的气氛，容易让人烦躁和焦虑。</p>
<p>它只适合“大军团作战”、依靠大量人力资源投入的项目。对于那种极其困难、需要苦思冥想的智力项目，我认为这种工位有反作用。</p>
<p>现在的情况是，移动互联网已经饱和了，没有那么多市场机会了，“大军团作战”越来越显示它的局限性。</p>
<p>未来的市场要靠货真价实的创新，我建议创新型的小公司，尤其是从事 AI 模型的公司，可以借鉴 OpenAI 的做法，在公司里面设置舒适的图书馆和自习室，允许员工在这里办公，也许会有奇效。</p>
<h2 id="_2024稀土开发者大会" tabindex="-1">2024稀土开发者大会 <a class="header-anchor" href="#_2024稀土开发者大会" aria-label="Permalink to &quot;2024稀土开发者大会&quot;">&ZeroWidthSpace;</a></h2>
<p>下个月的6月28日（周五）和6月29日（周六），国内开发者的年度盛会“2024稀土开发者大会”，将在北京举行。</p>
<p>周刊是本次大会的媒体协办单位，向大家介绍会议的各项活动。</p>
<p>大会邀请了70位国内重量级的技术专家，10余个精彩纷呈的主题论坛，具体的名单已经出来了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052305.webp" alt="" loading="lazy"></p>
<p>可以看到，这次的分论坛都是当今的技术热点，以及开发的前沿领域。</p>
<p>各个分论坛的详细介绍，以及演讲内容和名单，详见<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">官网</a>。购票也请点击这个链接，或者扫描下方的海报。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052306.webp" alt="" loading="lazy"></p>
<p>早鸟票、学生票、特惠票还在火热售卖中，所有购票者都可以抽奖，<strong>奖品众多，100%中奖</strong>！</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://a.exozy.me/posts/bad-apple-animated-qr-code/" target="_blank" rel="noreferrer">动态二维码</a></p>
<p>我们每天扫描的二维码都是静态的，你有没有想过，二维码也可以动态。</p>
<p>动态二维码每时每刻都在变化，我们用摄像头扫描它，读到的就是连续不断的数据，可以实现摄像头下载文件。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051804.webp" alt="" loading="lazy"></p>
<p>麻省理工学院的两位研究人员，提出了这个设想，还给出了<a href="https://a.exozy.me/posts/bad-apple-animated-qr-code/" target="_blank" rel="noreferrer">初步的代码</a>。</p>
<p>他们把文件先编码成一段视频，格式就是动态二维码，在手机上播放。另一个手机使用摄影头，对视频里面的动态二维码进行解码，再还原出原始文件。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051803.webp" alt="" loading="lazy"></p>
<p>这种技术用起来很简单，符合直觉，速度也不慢，可以达到 2Mbps，很适合两台手机在没有网络的情况下（比如飞机上）互传数据。</p>
<p>2、<a href="https://news.artnet.com/art-world/ancient-tools-monkeys-2237820" target="_blank" rel="noreferrer">猴子的石器</a></p>
<p>一般认为，美洲最早的居民是印第安人，大约1万年前来到美洲。</p>
<p>但是后来，考古学家在南美洲发现了5万年前的石器。难道印第安人之前，美洲还有其他人类？</p>
<p>但是，除了这些石器，找不到任何其他证据。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092201.webp" alt="" loading="lazy"></p>
<p>最近，有一篇论文提出，这些石器并不是来自人类，而是来自卷尾猴。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092202.webp" alt="" loading="lazy"></p>
<p>这些猴子也会做石器，而且做出来的跟“古人类的石器”非常相似。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092203.webp" alt="" loading="lazy"></p>
<p>猴子们有自己的采石场，在那里它们选择合适的石头作为锤子，敲碎坚果。石器还可以帮助卷尾猴挖掘。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092204.webp" alt="" loading="lazy"></p>
<p>这就引出一个问题：我们在博物馆看到的那些石器，会不会也是猴子做的？</p>
<p>3、<a href="https://newatlas.com/good-thinking/ingenious-cardboard-bed/" target="_blank" rel="noreferrer">纸板床</a></p>
<p>一家西班牙创业公司，发明了一种纸板床，可以低成本、快速地为难民和灾民搭建床位。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100103.webp" alt="" loading="lazy"></p>
<p>它的成本是每张17美元（约125元人民币），大量生产还能再降低。工厂能在数小时内生产出1000张床。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100104.webp" alt="" loading="lazy"></p>
<p>这种床的搭建也非常简单，一个人一小时就可以搭建700张床，其实就是打开纸箱，比任何其他方案都要快几十倍。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100105.webp" alt="" loading="lazy"></p>
<p>每张床最多可支撑350公斤的重量，床上可以站5个成年人。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100106.webp" alt="" loading="lazy"></p>
<p>西班牙红十字会已经订购了首批几百张纸板床，用于救援行动时安置难民和灾民。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100107.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100108.webp" alt="" loading="lazy"></p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://tedium.co/2024/05/17/google-web-search-make-default/" target="_blank" rel="noreferrer">谷歌搜索的新模式</a>（英文）</p>
<p>谷歌美国版在搜索页面上，加了一个“人工智能概述”，给出 AI 对搜索结果的总结。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052201.webp" alt="" loading="lazy"></p>
<p>很多人不喜欢这样，因为他们使用谷歌是为了查找网站而不是获取答案。所以，谷歌又添加了一个“传统模式”，让你查看没有 AI 的搜索结果。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052004.webp" alt="" loading="lazy"></p>
<p>未来，很多网站可能会特别标注“本站无 AI”，作为吸引用户的特色。</p>
<p>2、<a href="https://petapixel.com/2024/05/21/microsoft-paints-new-ai-image-generator-builds-on-your-brushstrokes/" target="_blank" rel="noreferrer">Windows 画板引入 AI</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052301.webp" alt="" loading="lazy"></p>
<p>Windows 11 的新版本，将 AI 引入了传统的画板程序（Paint）。用户只需画出轮廓（图左），AI 会自动生成对应的图片（图右）。</p>
<p>3、<a href="https://developer.chrome.com/docs/devtools/console/understand-messages?hl=zh-cn" target="_blank" rel="noreferrer">AI 解读网页报错</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051802.webp" alt="" loading="lazy"></p>
<p>谷歌为 Chrome 浏览器的开发者工具，引入了 AI，现在可以查看网页报错的 AI 解读。</p>
<p>4、<a href="https://support.qq.com/product/637894" target="_blank" rel="noreferrer">万象生图</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052309.webp" alt="" loading="lazy"></p>
<p>Windows 桌面软件，可以在日常电脑上运行的快速文生图模型，无需 GPU 和 Python。（<a href="https://github.com/ruanyf/weekly/issues/4508" target="_blank" rel="noreferrer">@taotaow</a> 投稿）</p>
<p>5、<a href="https://github.com/Acly/krita-ai-diffusion" target="_blank" rel="noreferrer">krita-ai-diffusion</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112103.webp" alt="" loading="lazy"></p>
<p>图像编辑器软件 Krita 的 AI 插件，类似 PhotoShop 的“图片 AI 扩充”，用 AI 绘制原图没有的部分，不过它是开源的。</p>
<p>6、<a href="https://www.reddit.com/r/ArtificialInteligence/comments/1cpbh1s/ilya_sutskever_if_you_really_learn_all_of_these/" target="_blank" rel="noreferrer">AI 重要论文</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052312.webp" alt="" loading="lazy"></p>
<p>OpenAI 的前首席科学家 Ilya Sutskever 开出了一份论文清单，一共包含30篇论文。</p>
<p>他说：”如果你真正学会了所有这些，你就会知道当今 AI 的 90% 重要内容。“</p>
<h2 id="ai-体验营" tabindex="-1">AI 体验营 <a class="header-anchor" href="#ai-体验营" aria-label="Permalink to &quot;AI 体验营&quot;">&ZeroWidthSpace;</a></h2>
<p>AI 现在国内这么热，一个很大的原因是，大家看到了里面的变现机会。</p>
<p>这是全新的市场，没有任何竞争对手。谁先实现好的点子，可能就会获得丰厚回报。</p>
<p>如果你对 AI 工具和变现，还没有思路，这里有一个 <strong>《3天 AI 副业变现体验营》</strong>，可以帮你熟悉起来。</p>
<p>出品人是林小浩，他做过研发，出过销量5万册的算法书《图解算法教程》，以及200万次播放的 AI 绘画视频。具体情况，大家可以在网上搜他的名字。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052307.webp" alt="" loading="lazy"></p>
<p>本次体验营为期三天，讲解两个项目：（1）用 AI 写出公众号热文，（2）AI 小红书绘画变现。课程会演示 GPT 写作和 AI 绘画模型的用法，还会额外赠送三天 GPT4o、MJ 和 Suno 的使用账号。</p>
<p>内容从零开始，不需要有前期经验。体验营收取9.9元押金，<strong>完成全部作业就会全额退款</strong>，相当于免费。下周一晚8点开课，感兴趣的同学，可以扫描上方海报二维码，报名参加。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://taki-mekhalfa.github.io/misc/2024/04/14/beauty_of_olap_sql.html" target="_blank" rel="noreferrer">数据分析的 SQL 示例</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041502.webp" alt="" loading="lazy"></p>
<p>本文是一篇教程，给出了几个示例，如何编写 SQL 进行数据分析。</p>
<p>2、<a href="https://mp.weixin.qq.com/s/HAT1UwG42R_1SFmTjVDlCA" target="_blank" rel="noreferrer">PHP 老矣，尚能饭否？</a>（中文）</p>
<p>本文作者是 PHP 官方 PECL 开发组成员，分析了 PHP 流行度下降的原因，存在的问题和现有的优势。（<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">@ryantang1991</a> 投稿）</p>
<p>3、<a href="https://wcedmisten.fyi/post/keyboard-shortcuts-userscripts/" target="_blank" rel="noreferrer">如何为网页添加快捷键</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022101.webp" alt="" loading="lazy"></p>
<p>作者讲解如何用邮猴脚本，为网页添加自己的快捷键。</p>
<p>4、<a href="https://ishadeed.com/article/css-has-guide/" target="_blank" rel="noreferrer">CSS :has() 选择器教程</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022402.webp" alt="" loading="lazy"></p>
<p>本文介绍如何使用<code>:has()</code>选择器，特点是有大量互动示例。</p>
<p>5、<a href="https://www.lilysthings.org/blog/daily-driving-freebsd/" target="_blank" rel="noreferrer">我安装 FreeBSD 桌面的经历</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111601.webp" alt="" loading="lazy"></p>
<p>FreeBSD 是 Unix 系统的正统后代，很少有人选它作为桌面系统。万一你想这么做，可以参考这篇文章。</p>
<p>6、<a href="https://dhashe.com/xargs-is-the-inverse-function-of-echo.html" target="_blank" rel="noreferrer">xargs 是 echo 的逆操作</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041302.webp" alt="" loading="lazy"></p>
<p>xargs 是一个重要的 Linux 命令，本文讲解它到底有什么用。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/JiHong88/suneditor" target="_blank" rel="noreferrer">SunEditor</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111801.webp" alt="" loading="lazy"></p>
<p>一个开源的“所见即所得”编辑器，兼容性比较好。</p>
<p>2、<a href="https://httpraccoons.com/" target="_blank" rel="noreferrer">TrasHTTPandas</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111905.webp" alt="" loading="lazy"></p>
<p>这个网站提供各种状态码的 HTTP 回应，供 API 调用，可以用来调试前端请求。</p>
<p>3、<a href="https://github.com/Anxcye/anx-reader" target="_blank" rel="noreferrer">安读</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051901.webp" alt="" loading="lazy"></p>
<p>一款使用 Flutter 编写的桌面读书软件，支持 WebDAV 同步。（<a href="https://github.com/ruanyf/weekly/issues/4486" target="_blank" rel="noreferrer">@Anxcye</a> 投稿）</p>
<p>4、<a href="https://vspace.cyhuajuan.site/" target="_blank" rel="noreferrer">VSpace</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052202.webp" alt="" loading="lazy"></p>
<p>一个浏览器插件，提供侧边栏的垂直书签和标签页管理器。
（<a href="https://github.com/ruanyf/weekly/issues/4490" target="_blank" rel="noreferrer">@cyhuajuan</a> 投稿）</p>
<p>5、<a href="https://github.com/cyhuajuan/FreeReNamer" target="_blank" rel="noreferrer">FreeReNamer</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052203.webp" alt="" loading="lazy"></p>
<p>开源的跨平台桌面软件，用来将文件批量重命名。（<a href="https://github.com/ruanyf/weekly/issues/4491" target="_blank" rel="noreferrer">@cyhuajuan</a> 投稿）</p>
<p>另有一个类似的照片重命名软件 <a href="https://github.com/Arman19941113/rename-photos" target="_blank" rel="noreferrer">Rename Photos</a>。（<a href="https://github.com/ruanyf/weekly/issues/4513" target="_blank" rel="noreferrer">@Arman19941113</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052311.webp" alt="" loading="lazy"></p>
<p>6、<a href="https://github.com/mulaRahul/keyviz" target="_blank" rel="noreferrer">Keyviz</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052204.webp" alt="" loading="lazy"></p>
<p>开源的 Windows 软件，在桌面上显示用户实时的按键。（<a href="https://github.com/ruanyf/weekly/issues/4505" target="_blank" rel="noreferrer">@Y024</a> 投稿）</p>
<p>7、<a href="https://github.com/didi/xiaoju-survey" target="_blank" rel="noreferrer">XIAOJUSURVEY</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052310.webp" alt="" loading="lazy"></p>
<p>一套开源的问卷系统，自带后端和前端，用于架设管理自己的问卷。（<a href="https://github.com/ruanyf/weekly/issues/4510" target="_blank" rel="noreferrer">@sudoooooo</a> 投稿）</p>
<p>8、<a href="https://www.quetta.net/" target="_blank" rel="noreferrer">Quetta</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024012001.webp" alt="" loading="lazy"></p>
<p>一个注意保护个人隐私的手机浏览器，支持 iOS 和安卓，不收集用户的任何数据，也防止被网站收集。</p>
<p>9、<a href="https://sandstorm.io/" target="_blank" rel="noreferrer">Sandstorm</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202306/bg2023060504.webp" alt="" loading="lazy"></p>
<p>一个开源的 Web 应用软件商店，安装以后，就可以在它的商店里面，点击安装/运行多种 Web 应用。</p>
<p>10、<a href="https://databasediagram.com/" target="_blank" rel="noreferrer">Database Diagram</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202306/bg2023060902.webp" alt="" loading="lazy"></p>
<p>一个免费网站，在线生成数据库的 ER（实体-关系）图。</p>
<p>11、<a href="https://github.com/algolia/autocomplete" target="_blank" rel="noreferrer">autocomplete</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202306/bg2023060904.webp" alt="" loading="lazy"></p>
<p>Algolia 公司推出的 JS 库，实现搜索关键字的自动补全。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://rust-exercises.com/01_intro/00_welcome" target="_blank" rel="noreferrer">学习 Rust 的 100 个练习</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051807.webp" alt="" loading="lazy"></p>
<p>Rust 语言的一个初学者教程，通过100个练习来学习这门语言。</p>
<p>2、<a href="https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md" target="_blank" rel="noreferrer">JavaScript 语法问题</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051808.webp" alt="" loading="lazy"></p>
<p>这个仓库收集了100多个 JavaScript 的语法选择题，可以试试你是否真的了解这门语言。</p>
<p>3、<a href="https://www.playphrase.me/" target="_blank" rel="noreferrer">PlayPhrase.me</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023052004.webp" alt="" loading="lazy"></p>
<p>搜索一个英语短语，这个网站会展示包含这个短语的电影片段。</p>
<p>4、<a href="https://ambiph.one/" target="_blank" rel="noreferrer">ambiphone</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010701.webp" alt="" loading="lazy"></p>
<p>这个网站可以播放环境音和白噪声，适合当作背景音乐。</p>
<p>5、<a href="https://proxy.incolumitas.com/proxy_detect.html" target="_blank" rel="noreferrer">代理检测</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010709.webp" alt="" loading="lazy"></p>
<p>该网站提供一系列测试，用来检测用户是否正在使用代理。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.revk.uk/2017/12/its-official-adsl-works-over-wet-string.html" target="_blank" rel="noreferrer">湿绳子传信号</a></p>
<p>电话线和网线都是铜线，因为铜可以传送电信号。</p>
<p>水也是导电的，因此理论上，水也可以充当电线。</p>
<p>有人就真的做了这样的尝试，找了一根细麻绳，浸透了咸水（增加导电能力），当作 ADSL 的连接线，看看能否上网。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051805.webp" alt="" loading="lazy"></p>
<p>他把入户线连上湿麻绳，再连上另一端。下图中，地毯湿漉漉的地方，上面就是挂着两根湿麻绳。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051806.webp" alt="" loading="lazy"></p>
<p>事实证明，湿麻绳真的可以上网，而且速度不慢，下行网速达到了3.5Mb/s。</p>
<p>只是你不能用手碰这根绳子，并且绳子干了以后，就没法上网了。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://kevinkruse.com/the-ceo-and-the-three-envelopes/" target="_blank" rel="noreferrer">CEO 和三个信封</a></p>
<p>一家陷入困境的公司，聘请了一位新的 CEO。</p>
<p>即将卸任的前 CEO 私下会见了他，并向他赠送了三个有编号的信封。“如果你遇到了重大麻烦，请打开这些信封，每次只能打开一个。”前 CEO 说。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024052304.webp" alt="" loading="lazy"></p>
<p>三个月过去了，公司的销售额和利润仍然在大幅下降，新任 CEO 受到了很大的压力。</p>
<p>他开始惊慌，但随后他想起了那些信封。他从抽屉里拿出第一个信封，上面写着：“责怪你的前任。”</p>
<p>新任 CEO 就召开新闻发布会并解释说，前任给他留下了烂摊子，清理它的时间比预期要长，但一切都在正确的轨道上。媒体和华尔街对他的解释感到满意，做出了积极回应。</p>
<p>又一个季度过去了，公司仍在苦苦挣扎。吸取了之前的经验，他就打开了第二个信封，上面写着：“重组。” 因此，他解雇了员工，整合了部门，尽可能地削减成本，华尔街和媒体都对他的努力表示赞赏。</p>
<p>三个月过去了，公司的销售额和利润仍然裹足不前。他在财报电话会议前，走进办公室，关上门，打开第三个信封，上面写着：“准备三个信封。”</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>我终于做到了，让 AI 关闭 AI。几个月前，微软将 Copilot 服务加到了 Windows，我关掉了它。但是，最新一次的更新让它又复活了。</p>
<p>我就问 Copilot，如何才能摆脱它？它建议我像其他程序一样卸载，但微软没有提供它的卸载。我又问 Copilot 怎么办？它继续告诉我要更改的注册表项的确切位置，可以阻止它的加载。现在，它已经消失了。</p>
<p>-- <a href="https://realsocial.life/@WearsHats/112449961604246276" target="_blank" rel="noreferrer">@WearsHats@realsocial.life</a></p>
<p>2、</p>
<p>我的职业建议是，行动要急不可耐，对于结果要抱有耐心。</p>
<p>-- <a href="https://noahkagan.com/brutally-honest-career-advice-to-my-younger-self/" target="_blank" rel="noreferrer">《给年轻自己的职业建议》</a></p>
<p>3、</p>
<p>大量的面试和考试，基本上是在测试你能在多大程度上替代编译器。比如，Java 认证考试倾向于考察语法和编译问题，而不是实际编程的能力或系统设计的能力。</p>
<p>-- <a href="https://www.blobstreaming.org/im-a-developer-not-a-compiler/" target="_blank" rel="noreferrer">《我是程序员而不是编译器》</a></p>
<p>4、</p>
<p>20多岁时，我跟一个长辈说：“我很担心，别人会怎么看待我做的那个决定。”长辈说：“放心吧，你没有观众的。”</p>
<p>现在想起来，我认为这是我得到过的最好建议。</p>
<p>-- <a href="https://kottke.org/24/04/amanda-there-is-no-audience" target="_blank" rel="noreferrer">阿曼达·福蒂尼</a>（Amanda Fortini），美国作家</p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/05/weekly-issue-254.html" target="_blank" rel="noreferrer">人生是一个长板问题</a>（2023 #254）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/04/weekly-issue-204.html" target="_blank" rel="noreferrer">如何度过疫情、裁员、还有战争</a>（2022 #204）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/04/weekly-issue-154.html" target="_blank" rel="noreferrer">1982年的信息社会预言</a>（2021 #154）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/04/weekly-issue-104.html" target="_blank" rel="noreferrer">语音合成的用途</a>（2020 #104）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202405/bg2024052207.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 300 期）：三十年，解决人生三大问题]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-300</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-300</guid>
            <pubDate>Fri, 17 May 2024 16:20:00 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
本周，太阳活动剧烈]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-300-期-三十年-解决人生三大问题" tabindex="-1">科技爱好者周刊（第 300 期）：三十年，解决人生三大问题 <a class="header-anchor" href="#科技爱好者周刊-第-300-期-三十年-解决人生三大问题" aria-label="Permalink to &quot;科技爱好者周刊（第 300 期）：三十年，解决人生三大问题&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4390" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051501.webp" alt="" loading="lazy"></p>
<p>本周，太阳活动剧烈，引起几十年来最大的地磁暴。地球的中高纬度地区，普遍可以看到极光，就连北京这样的中纬度城市，都出现了极光，上图是长城。（<a href="https://m.bjnews.com.cn/detail/1715495546129388.html" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="三十年-解决人生三大问题" tabindex="-1">三十年，解决人生三大问题 <a class="header-anchor" href="#三十年-解决人生三大问题" aria-label="Permalink to &quot;三十年，解决人生三大问题&quot;">&ZeroWidthSpace;</a></h2>
<p>我最近看到<a href="https://huyenchip.com/2024/04/17/personal-growth.html" target="_blank" rel="noreferrer">一篇文章</a>，很有意思，分享给大家。</p>
<p>文章大意是，<strong>人的一生就是解决三个基本问题：事业、家庭和财务。</strong></p>
<p>一份有成就的事业，一个幸福的家庭，一个健康的财务状况，人生就没有遗憾了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051513.webp" alt="" loading="lazy"></p>
<p>我们的人生规划，就是朝着解决这三个问题努力。哪怕其中只有一个没有解决，你的人生就过不好。</p>
<p>原文作者提出了他的规划。他说，这三个问题要分阶段解决，每个阶段重点解决一个问题。而且<strong>他估计，每个阶段要花费十年</strong>，总共需要三十年。</p>
<p><strong>（1）第一个十年</strong>。你搞清楚自己想干什么，找到方向，为事业打下基础，从此全力投入。</p>
<p><strong>（2）第二个十年</strong>。你结婚、买房、养育后代。</p>
<p><strong>（3）第三个十年</strong>。你努力赚钱，积蓄退休金。</p>
<p>如果将18岁成年作为起点，过完这三个十年，你就已经48岁了。</p>
<p>也就是说，你的目标是，到了48岁，基本解决人生三大问题。48岁以后的时间，就是自己的选择，追求梦想，照顾家人，或者继续推进事业，积累更多财富。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051607.webp" alt="" loading="lazy"></p>
<p>原文作者没有解释，为什么每个阶段需要十年。我倒是觉得，十年是一个合理的时间。</p>
<p>如果是八年、七年、甚至五年，那样固然很好，不过难度也会相应变大，多少人能做到呢。如果更长一点，每个阶段需要十二年，甚至十五年，那样就有点太晚了，你都要退休了。更重要的是，年纪越大，人生改变的可能性越小，五十岁以后其实能做的有限。</p>
<p>总之，我认为，这是一个很新颖的视角，可以用作思考人生问题的框架，对我很有启发。</p>
<p><u>凡事就看它是否有助于“事业、家庭和财务”，我们的目标就是在48岁前解决好这些问题。</u></p>
<h2 id="活动" tabindex="-1">活动 <a class="header-anchor" href="#活动" aria-label="Permalink to &quot;活动&quot;">&ZeroWidthSpace;</a></h2>
<p><strong>1、WebGPU 线下沙龙</strong></p>
<p>前端程序员怎么转向 AI？</p>
<p>除了构建 AI 的前端界面，还有一个更有前途、更适合前端的方向，那就是浏览器直接运行 AI 模型。</p>
<p><strong>网页跑 AI，需要调用显卡的计算能力，就会用到 WebGPU</strong>。它是去年发布的最新标准，允许网页代码访问 GPU 功能，Chrome 浏览器已经支持。</p>
<p><u>下周五（5月24日）晚上有一个难得的机会，小红书官方会主办一场 REDtech 技术沙龙，主题就是 WebGPU</u>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051604.webp" alt="" loading="lazy"></p>
<p>活动嘉宾是 W3C 资深媒体技术专家、<strong>Web GPU 工作组负责人 François Daoust</strong>，以及小红书前端架构团队，活动内容如下。</p>
<blockquote>
<ol>
<li>浏览器如何调用显卡功能，运行 AI 和网页渲染？</li>
<li>WebGPU 的音视频处理技术有哪些最新进展？</li>
<li>小红书如何应用 WebGPU 构建动画，支持业务的快速迭代？</li>
</ol>
</blockquote>
<p>大家点击<a href="https://hdxu.cn/LQaZE" target="_blank" rel="noreferrer">这个链接</a>，或者扫描上方海报的二维码，了解活动详情和<strong>免费报名</strong>。线下座位有100个，邀请码填写“WebGPU”，如果报名的人多，这样更容易通过，不在上海的同学可以预约线上直播。</p>
<p>到时，除了了解 WebGPU 在 AI 和影音方面的应用，还能跟嘉宾互动，并有机会获得小红书的周边纪念品！</p>
<p><strong>2、稀土开发者大会</strong></p>
<p>上周，周刊介绍了今年的“稀土开发者大会”，6月底将在北京举行。</p>
<p>它面向全国开发者，让大家聚在一起，交流分享彼此的开发经验，以及热点技术的进展。</p>
<p>现在，<strong>“架构设计和业务稳定性建设”分论坛</strong>的议题内容和演讲者名单，已经出来了（见下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051605.webp" alt="" loading="lazy"></p>
<p><u>如果你参与应用的架构设计，需要后端能够快速缩放，又要保证业务稳定性，同时还要时刻监控关键指标，那么这个分论坛一定很合适你。</u></p>
<p>大家看它的演讲阵容就知道了，全是国内头部应用的真实案例和实务操作，挺精彩的。</p>
<p>详细的分论坛信息和大会安排，点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">官网链接</a>，或者扫描上面海报的二维码，购票也是这个链接。</p>
<p>最后提醒一下，<strong>今天是限量早鸟票的最后一天！</strong> 下周，早鸟票就没了，票价就涨了，想要现场参加大会的同学不要错过了。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.theguardian.com/artanddesign/article/2024/may/11/where-mona-lisa-was-painted-mystery-solved-geologist-claims" target="_blank" rel="noreferrer">蒙娜丽莎的地点</a></p>
<p>达芬奇的世界名画《蒙娜丽莎》是一个谜。人们不知道，它是什么时候画的、为什么达芬奇会画、画里女子到底是谁……</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051510.webp" alt="" loading="lazy"></p>
<p>一位地质学家最近声称，她找到了一部分的答案，那就是这幅画的地点。</p>
<p>她认为，这幅画的地点是意大利科莫湖东南端的莱科市，理由是莱科的地质环境跟画的背景很像。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051511.webp" alt="" loading="lazy"></p>
<p>达芬奇用灰白色绘制背景的湖畔岩石，这是石灰岩的颜色，莱科的岩石就是石灰岩，而意大利其他的石灰岩地区都没有湖。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051512.webp" alt="" loading="lazy"></p>
<p>另外，背景里还有一座桥，正好跟莱科14世纪的一座古桥相吻合。</p>
<p>2、<a href="https://www.core77.com/posts/132116/An-Unusual-Furniture-Design-Niche-Behind-the-Sofa-Consoles" target="_blank" rel="noreferrer">沙发充电插座</a></p>
<p>很多人喜欢坐在沙发上玩手机，但是常常找不到插座充电。</p>
<p>因此，现在就流行一种新家具，是沙发后面装一个木架，木架上面有插座。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051003.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051004.webp" alt="" loading="lazy"></p>
<p>这个架子放在沙发后面，很简单就解决了找不到插座的问题。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051005.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://www.theverge.com/2023/9/14/23873153/nasa-bike-tire-shape-memory-price-smart-specs" target="_blank" rel="noreferrer">金属轮胎</a></p>
<p>一家美国创业公司发布了自行车的“金属轮胎”，轮胎里面不是空气，而是金属弹簧。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091605.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091606.webp" alt="" loading="lazy"></p>
<p>这家公司介绍，它采用美国宇航局发现的镍钛诺合金。这种合金具有记忆功能，能够记住加热后锻造的形状，同时重量非常轻而且坚韧，适合做成弹簧替代轮胎。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091607.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091608.webp" alt="" loading="lazy"></p>
<p>这种“金属轮胎”的优点是不用充气，耐用性好。缺点是价格贵，不含轮圈的价格是500美元一对，是普通的优质自行车轮胎的10倍。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091609.webp" alt="" loading="lazy"></p>
<p>4、<a href="https://uxdesign.cc/how-do-you-accidentally-run-for-president-of-iceland-0d71a4785a1e" target="_blank" rel="noreferrer">冰岛的总统选举网站</a></p>
<p>冰岛即将举行总统选举，报名资格是最少需要1500人的签名支持。</p>
<p>政府架设了<a href="https://island.is/forsetaframbod" target="_blank" rel="noreferrer">一个网站</a>，让公民在网站上，向支持的候选人提交电子签名。</p>
<p>但是，这个网站出了一个乌龙事件。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043009.webp" alt="" loading="lazy"></p>
<p>它的签名页有一个“注册”按钮（下图的蓝色按钮），很多人点击注册了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043010.webp" alt="" loading="lazy"></p>
<p>殊不知，签名只需要身份证，不需要注册。这个按钮实际上是“总统候选人”注册。你点击后，会显示一张表格，填完以后你就变成总统候选人了。</p>
<p>于是，冰岛现在就有了82个总统候选人，要知道以前选举的候选人，最多一次也只有9个。网站发现闯祸了，赶紧把 UI 改了。</p>
<p>我在想，要是有一部电影，讲述因为网站出错，一个普通人变成了总统，那就好玩了。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://mp.weixin.qq.com/s/3i-bOEtM78xKSku5ndqp7Q" target="_blank" rel="noreferrer">一个不知名的开源项目可以带来多少收入？</a>（中文）</p>
<p>三年前，作者决定做一个开源的开发工具。三年过去了，这个项目怎么样了，赚了多少钱。（<a href="https://github.com/ruanyf/weekly/issues/4458" target="_blank" rel="noreferrer">@zhouyanliang</a> 投稿）</p>
<p>2、<a href="https://www.htmhell.dev/adventcalendar/2023/4/" target="_blank" rel="noreferrer">5个改善用户体验的 HTML 属性</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120502.webp" alt="" loading="lazy"></p>
<p>本文介绍5个不常用的 HTML 属性。</p>
<p>3、<a href="https://nolanlawson.com/2023/12/02/lets-learn-how-modern-javascript-frameworks-work-by-building-one/" target="_blank" rel="noreferrer">现代 JavaScript 框架是如何工作的</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120302.webp" alt="" loading="lazy"></p>
<p>作者通过示例，解释反应式的 JavaScript 前端框架的核心原理，并且自己实现了一个最简框架。内容还可以，但是写得不易读。</p>
<p>4、<a href="https://taxodium.ink/post/emoji-regexp/" target="_blank" rel="noreferrer">Emoji 正则匹配</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051505.webp" alt="" loading="lazy"></p>
<p>本文介绍一个 JS 技巧，如何用一个简单的正则表达式匹配 Emoji 表情符号。（<a href="https://github.com/ruanyf/weekly/issues/4452" target="_blank" rel="noreferrer">@Spike-Leung</a> 投稿）</p>
<p>5、<a href="https://www.annwan.me/computers/what-why-how-containers/" target="_blank" rel="noreferrer">Linux 容器的底层技术</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032803.webp" alt="" loading="lazy"></p>
<p>一篇非常简单的文章，列出了容器技术底层依赖的几个 Linux 技术。</p>
<p>6、<a href="https://www.jonashietala.se/blog/2023/10/24/the_killer_features_of_the_steam_deck/" target="_blank" rel="noreferrer">Steam Deck 的五个杀手级功能</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023102406.webp" alt="" loading="lazy"></p>
<p>作者非常喜欢便携式游戏机 Steam Deck，列出了五个他最喜欢的点。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://deepmind.google/technologies/veo/" target="_blank" rel="noreferrer">Veo</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051502.webp" alt="" loading="lazy"></p>
<p>谷歌本周发布的“文生视频”模型。</p>
<p>2、<a href="https://jan.ai/" target="_blank" rel="noreferrer">Jan</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050105.webp" alt="" loading="lazy"></p>
<p>ChatGPT 的替代品，可以在桌面和服务器运行，接入各种 LLM 模型，让初学者也能轻松上手。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/extrawurst/gitui" target="_blank" rel="noreferrer">GitUI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011508.webp" alt="" loading="lazy"></p>
<p>终端里面的 Git 图形界面，将各种 git 操作可视化，使用 Rust 语言开发。</p>
<p>2、<a href="https://github.com/outline/outline" target="_blank" rel="noreferrer">Outline</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011701.webp" alt="" loading="lazy"></p>
<p>一个开源的在线知识库软件，支持多人合作。</p>
<p>3、<a href="https://github.com/lbl8603/vnt" target="_blank" rel="noreferrer">Vnt</a></p>
<p>一个开源工具，将不同网络下的多个设备虚拟到一个局域网下，类似与 tailscale、zerotier、n2n。（<a href="https://github.com/ruanyf/weekly/issues/4444" target="_blank" rel="noreferrer">@lbl8603</a> 投稿）</p>
<p>4、<a href="https://github.com/solidSpoon/DashPlayer" target="_blank" rel="noreferrer">DashPlayer</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051506.webp" alt="" loading="lazy"></p>
<p>一款专为英语学习打造的开源视频播放器，支持生成双语字幕，进行精听或泛听练习。（<a href="https://github.com/ruanyf/weekly/issues/4454" target="_blank" rel="noreferrer">@solidSpoon</a> 投稿）</p>
<p>5、<a href="https://zm.i8k.tv/" target="_blank" rel="noreferrer">字幕工具箱</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051508.webp" alt="" loading="lazy"></p>
<p>这个网站收集了一些字幕相关的工具，纯前端处理，无需安装任何插件或软件。（<a href="https://github.com/ruanyf/weekly/issues/4464" target="_blank" rel="noreferrer">@mzhren</a> 投稿）</p>
<p>6、<a href="https://spacexcode.com/coverview/" target="_blank" rel="noreferrer">封面图片生成器</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051108.webp" alt="" loading="lazy"></p>
<p>一个制作简单封面图的 Web 工具。（<a href="https://github.com/ruanyf/weekly/issues/4439" target="_blank" rel="noreferrer">@fantingsheng</a> 投稿）</p>
<p>另外，还有一个类似的 Logo 制作工具“<a href="https://www.logocook.shop/" target="_blank" rel="noreferrer">Logo 厨师</a>”。（<a href="https://github.com/ruanyf/weekly/issues/4455" target="_blank" rel="noreferrer">@gdfsdjj145</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051507.webp" alt="" loading="lazy"></p>
<p>7、<a href="https://github.com/Spr-Aachen/Easy-Voice-Toolkit" target="_blank" rel="noreferrer">Easy Voice Toolkit</a></p>
<p>一个简易的语音工具箱，提供音频处理、语音识别、合成等音频工具，使用 Python 语言开发。（<a href="https://github.com/ruanyf/weekly/issues/4471" target="_blank" rel="noreferrer">@Hao4Wang</a> 投稿）</p>
<p>8、<a href="https://segmentify.app/zh" target="_blank" rel="noreferrer">Segmentify</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051509.webp" alt="" loading="lazy"></p>
<p>一个 Figma 插件，使用浏览器 GPU 能力运行 AI SAM 模型，快速分割图片，从图片中提取元素至 Figma 文件。（<a href="https://github.com/ruanyf/weekly/issues/4472" target="_blank" rel="noreferrer">@janily</a> 投稿）</p>
<p>9、<a href="https://github.com/M-cheng-web/web-tracing" target="_blank" rel="noreferrer">Web-Tracing</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051504.webp" alt="" loading="lazy"></p>
<p>一个开源的前端埋点工具，提供项目监控。（<a href="https://github.com/ruanyf/weekly/issues/4451" target="_blank" rel="noreferrer">@M-cheng-web</a> 投稿）</p>
<p>10、<a href="https://technitium.com/dns/" target="_blank" rel="noreferrer">Technitium DNS</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011706.webp" alt="" loading="lazy"></p>
<p>一款开源 DNS 服务器，带有 Web 管理面板。</p>
<p>11、<a href="https://github.com/kochrt/qr-designer" target="_blank" rel="noreferrer">QR code designer</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023053102.webp" alt="" loading="lazy"></p>
<p>一个 Web 工具，用来设计二维码，可以嵌入各种文字和图形，另有一个<a href="http://jsfiddle.net/lachlan/r8qWV/" target="_blank" rel="noreferrer">类似工具</a>。</p>
<p>12、<a href="https://github.com/taskforcesh/bullmq" target="_blank" rel="noreferrer">BullMQ</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202211/bg2022111202.webp" alt="" loading="lazy"></p>
<p>Redis 的 JS 客户端，号称强大且快速。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://latex.lierhua.top/zh/" target="_blank" rel="noreferrer">LaTeX 入门与进阶</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051107.webp" alt="" loading="lazy"></p>
<p>网友写的中文书籍，介绍如何使用 LaTeX 和宏包编写。（<a href="https://github.com/ruanyf/weekly/issues/4436" target="_blank" rel="noreferrer">@immotal</a> 投稿）</p>
<p>2、<a href="https://urlhaus.abuse.ch/browse/" target="_blank" rel="noreferrer">URLhaus 数据库</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024051503.webp" alt="" loading="lazy"></p>
<p>这个数据库专门收集各种恶意 URL 网址，目前已经收集了280万个，可以免费查询和下载。</p>
<p>3、<a href="https://rafalab.dfci.harvard.edu/dsbook-part-1/" target="_blank" rel="noreferrer">数据科学导论</a>（Introduction to Data Science）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030201.webp" alt="" loading="lazy"></p>
<p>开源的英文教材，源于哈佛大学同名课程，使用 R 语言学习数据科学。</p>
<p>4、<a href="https://pinouts.org/" target="_blank" rel="noreferrer">引脚定义</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091204.webp" alt="" loading="lazy"></p>
<p>一本免费英文电子书，收集了130种电子产品常见组件（比如 USB 口）的引脚定义。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://mymodernmet.com/angry-bird-cardinal-photo/" target="_blank" rel="noreferrer">愤怒的小鸟原型</a></p>
<p>著名游戏《愤怒的小鸟》的主角，是一群彩色的麻雀。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023113012.webp" alt="" loading="lazy"></p>
<p>这种小鸟的原型是北美红雀（cardinal），它们长得简直跟游戏里面一模一样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023113013.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023113014.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://alt-f4.blog/ALTF4-65/" target="_blank" rel="noreferrer">《异星工厂》的 3D 图像</a></p>
<p><a href="https://www.factorio.com/" target="_blank" rel="noreferrer">《异星工厂》</a>（Factorio）是一个策略类游戏，要求玩家在一个荒芜的星球建造出一个完整的生产系统（即建造各种各样的工厂）。</p>
<p>原始游戏是 2D 图像。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070301.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070302.webp" alt="" loading="lazy"></p>
<p><a href="https://github.com/FUE5BASE/FUE5" target="_blank" rel="noreferrer">FUE5</a> 是一个社区项目，目标是使用 Unreal 引擎将这个游戏变成 3D 的样子，效果非常出色。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070305.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070303.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070304.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023070306.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://austinhenley.com/blog/11000lines.html" target="_blank" rel="noreferrer">11,000行的单个源码文件</a></p>
<p>我曾经遇到过一个超过11,000行的源码文件，它是 VBScript 代码的电子表格应用程序，公司所有员工需要的各种表格都在这个程序里面。</p>
<p>这个文件包含了你能想到的软件开发的所有噩梦。</p>
<p>多年来，无数人对这个文件进行了更改，但他们不是程序员，而是从 IT 支持到业务分析师各种人都有。你无从追踪每个人更改了什么地方。</p>
<p>整个文件看起来是从上到下执行，但我从未真正确认。代码的大致逻辑是，获取一些用户数据，然后检查数据是否满足某些条件，再执行各种动作，包括显示表单、访问共享驱动器上的文件、运行 SQL 查询、向硬编码地址发送电子邮件等等。</p>
<p>文件里面许多变量似乎没有从未使用到，变量名也难以搞清楚含义，同义词到处都是。</p>
<p>有趣的是，一个变量可能在第200行-210行使用，然后突然又在第8544行再次使用，其他地方就找不到踪迹了。</p>
<p>很多逻辑似乎是多余的，可能是复制粘贴进来的，然后从未清理过。一旦我清理它，代码突然就出错了，直到今天，我有时躺在床上还想知道是什么原因造成的。</p>
<p>它没有版本控制。关于代码更改的唯一线索，是看它抛出的错误提示和代码注释，但是我学会了不要信任那些注释。</p>
<p>它没有测试环境。如果我进行了更改，就必须在生产环境中对其进行测试。程序的所有状态都基于用户的权限，我们只有冒充报告错误的人，才能看到他们看到的内容。</p>
<p>它没有单元测试。如果我修改了一个地方，也没法知道会不会出错，可能要等到一周后，才有用户报告遇到了一个错误。</p>
<p>这个故事的寓意是什么？</p>
<p>我不知道，也许是它告诉我们，现实生活中真的有这样可怕的代码存在。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>参观日本就像参观2000年代初期：随处可见的 CD 店，百货商店兴旺发达，人们还在使用厚重的笔记本电脑。</p>
<p>-- <a href="https://alexanderweichart.de/5_Archive/1.-Projects/Notes/Notes-on-Japan" target="_blank" rel="noreferrer">《访问日本的感想》</a></p>
<p>2、</p>
<p>人工智能背后的实际技术，主要是一小部分巧妙的技巧，使用神经网络有效地对数据进行处理，神经网络本身并不神奇，并且开发过程很好理解，但是除非你有大钱购买硬件，并且使用每个人的私人数据进行训练，否则你的模型就没什么用。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=40359459" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>3、</p>
<p>不要将技术博客的写作视为打造“个人品牌”，它肯定对此有所帮助。但是，写作最重要的功能是，它是提升个人知识和批判性思维的一个工具。</p>
<p>-- <a href="https://jack-vanlightly.com/blog/2022/1/25/write-for-others-but-mostly-for-yourself" target="_blank" rel="noreferrer">《为别人而写，但主要是为自己而写》</a></p>
<p>4、</p>
<p>今天的创业公司还面临一个资金过剩的风险。许多创业公司资金充足，就过度招聘并迅速扩张，但并没有真正的增长或实际需求。</p>
<p>他们没有安排最好的工程师来创造最好的产品，而是从一开始就忙于招募和处理臃肿的团队和人员扩张的烦恼。</p>
<p>-- <a href="https://www.june.so/blog/lean-startup-method-2024" target="_blank" rel="noreferrer">《遵循精益创业的方法》</a></p>
<p>5、</p>
<p>瓶装水的保质期，指的是塑料瓶的保质期，而不是水的保质期。纯净水是不会变质的。</p>
<p>-- <a href="https://www.businessinsider.com/does-bottled-water-go-bad-yes-but-it-probably-wont-harm-you-2023-3" target="_blank" rel="noreferrer">BusinessInsider.com</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/05/weekly-issue-253.html" target="_blank" rel="noreferrer">训练材料用完之日</a>（2023 #253）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/04/weekly-issue-203.html" target="_blank" rel="noreferrer">英国的名校签证，伯克利的计算机教育</a>（2022 #203）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/04/weekly-issue-153.html" target="_blank" rel="noreferrer">机器翻译是对译者的侮辱吗？</a>（2021 #153）</p>
<p><a href="http://www.ruanyifeng.com/blog/2020/04/weekly-issue-103.html" target="_blank" rel="noreferrer">信息的半衰期</a>（2020 #103）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202405/bg2024051501.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 299 期）：AI 的关键是语料]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-299</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-299</guid>
            <pubDate>Fri, 10 May 2024 16:21:11 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
上图是河南新乡的中]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-299-期-ai-的关键是语料" tabindex="-1">科技爱好者周刊（第 299 期）：AI 的关键是语料 <a class="header-anchor" href="#科技爱好者周刊-第-299-期-ai-的关键是语料" aria-label="Permalink to &quot;科技爱好者周刊（第 299 期）：AI 的关键是语料&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4390" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042401.webp" alt="" loading="lazy"></p>
<p>上图是河南新乡的中原融创文旅城“冰立方”，模仿冰块堆叠的效果，10个玻璃冰块组成三个建筑单元。（<a href="https://www.archiposition.com/items/20211223113906" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="ai-的关键是语料" tabindex="-1">AI 的关键是语料 <a class="header-anchor" href="#ai-的关键是语料" aria-label="Permalink to &quot;AI 的关键是语料&quot;">&ZeroWidthSpace;</a></h2>
<p>大家有没有发现，现在打开新闻，都是 AI 模型的消息。</p>
<p>今天甲发布一个模型，明天乙发布一个模型，个个（听上去）都具备了不得的能力。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050805.webp" alt="" loading="lazy"></p>
<p>2023年5月有<a href="https://www.chinanews.com.cn/cj/2023/05-29/10016032.shtml" target="_blank" rel="noreferrer">一个统计</a>，那个时候，10亿参数以上的模型，中国已经发布了79个。一年过去了，现在恐怕上千了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050806.webp" alt="" loading="lazy"></p>
<p>说实话，我现在看到新模型，已经麻木了，压根不觉得这种消息有什么重要。</p>
<p>我的观点是，不管怎么调整模型的架构、功能、参数，作用是有限的，<strong>真正决定性的因素是训练模型的语料。</strong></p>
<p>不需要说，你的模型多新颖、多强大，只需要告诉我，你用什么语料训练模型。</p>
<p>模型完美，但是语料垃圾，一样不行；反之，模型很平常，但是语料足够，那就 OK。<strong>模型不是关键，语料才是关键。</strong></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050807.webp" alt="" loading="lazy"></p>
<p>这其实不是我的观点，而是 OpenAI 的工程师 James Betker 的观点。他是 AI 专家，著名“文生图”模型 DALL-E 的第一作者。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050808.webp" alt="" loading="lazy"></p>
<p>去年，他写过<a href="https://nonint.com/2023/06/10/the-it-in-ai-models-is-the-dataset/" target="_blank" rel="noreferrer">一篇文章</a>，只有几段话，在国外的影响很大。国内似乎没人提到这件事。但是我认为，这篇文章很重要。</p>
<p>他说，自己的日常工作就是开发 AI 模型，但是不管怎么增加参数、调整方程，模型效果都不如语料集的大小来得显著。</p>
<p>更多的训练材料，会显著提升模型效果，影响远大于其他因素。更神奇的是，<strong>不同的模型拿同样的语料训练，最后的表现居然很接近。</strong></p>
<p>他的结论是，模型的差异其实不是关键，决定性的是你的训练材料。只要有更多更好的语料，不管用什么模型，都会得到差不多的结果。</p>
<p>初次听到，你可能觉得，这个结论难以置信，但是仔细想想，你会发现它很可能是对的。</p>
<p>因为不管什么 AI 模型，最终目标只有一个，就是模仿人类的思维。语料体现的正是人类思维，同一份语料，不管你拿什么规则去分析，最后得到的结果应该是一样的，因为它包含的人类思维是不变的。</p>
<p>这就好像，<u>不同的画家去临摹同一个模特，如果目标都是复现原貌，那么只要画家达到一定水准，不管谁来画，结果将非常接近，因为模特的长相是不变的。</u></p>
<p>这告诉我们两点启示。</p>
<p>（1）哪一家公司的语料的数量多、质量好，它的模型就会强于其他公司。</p>
<p>（2）开源模型完全可以替代闭源模型，前提是训练语料要足够。</p>
<p>下面是 James Betker 的原文，大家仔细读读，看看是否认同他的观点。</p>
<blockquote>
<p>我在 OpenAI 工作已经快一年了。这段时间里，我训练了很多生成式 AI 模型，比任何人能想到的还要多。</p>
<p>每当我花了几个小时，观察和调整各种模型配置和参数时，有一件事让我印象深刻，那就是所有训练结果之间的相似性。</p>
<p>我越来越发现，<strong>这些模型以令人难以置信的程度，向它们的语料集靠近。</strong></p>
<p>这表明在相同的语料集上训练足够长的时间，几乎每个具有足够权重和训练时间的模型都会收敛到同一点。足够大的扩散卷积网络会产生相同的结果。</p>
<p>这是一个令人惊讶的观察！</p>
<p>这意味着模型行为不是由架构、参数或优化器决定的。它由你的语料集决定，没有其他决定因素。其他一切因素都不过是为了有效计算以近似该语料集的手段。</p>
<p>当你谈论 Lambda、ChatGPT、Bard 或Claude 时，指的并不是它们的模型，而是它们的语料集。</p>
</blockquote>
<h2 id="稀土开发者大会-征集议题和早鸟票" tabindex="-1">稀土开发者大会：征集议题和早鸟票 <a class="header-anchor" href="#稀土开发者大会-征集议题和早鸟票" aria-label="Permalink to &quot;稀土开发者大会：征集议题和早鸟票&quot;">&ZeroWidthSpace;</a></h2>
<p>国内开发者的线下大聚会要来了，今年的“稀土开发者大会”已经定下了时间，就在六月底。</p>
<p>这次大会的议题非常广泛：前端、AI、云计算、架构、DevOps……</p>
<p><strong>最重要的一点是，它向所有开发者开放演讲台</strong>。<u>如果你有工具要推出，有开发的经验要分享，大会都会提供演讲台，让你展示在全国开发者面前。</u></p>
<p>只要能引起听众兴趣的干货内容，就可以申请成为演讲嘉宾，在该主题的分论坛上台发言。一旦组委会确定，即可免费参加本次大会。</p>
<p>其他朋友参加大会，可以现在购买早鸟票。<strong>两天的所有活动，学生票只要99元</strong>，基本上就是电影票的价格。正常票的拼团价是139元，如果两天包午餐，价格是799元。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050906.webp" alt="" loading="lazy"></p>
<p>提交议题和购票，都请点击<a href="https://conf.juejin.cn/xdc2024/?utm_source=ryf" target="_blank" rel="noreferrer">这个链接</a>，或者扫描上方海报的二维码。早鸟票的时间和名额有限，如果你想结交朋友、感受业内动向，不妨抓紧时间购票。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.travelandleisure.com/airbnb-icons-category-orsay-up-prince-8641957" target="_blank" rel="noreferrer">气球屋</a></p>
<p>住宿平台 airbnb 推出了一个<a href="https://zh.airbnb.com/rooms/1126185893236246260" target="_blank" rel="noreferrer">气球屋</a>，完美地再现了迪斯尼电影《飞屋环游记》，住客现在就可以申请入住。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050402.webp" alt="" loading="lazy"></p>
<p>这个屋子的所有家具和布局，跟电影里面一模一样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050403.webp" alt="" loading="lazy"></p>
<p>它的屋顶上了装了8000个氦气球。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050404.webp" alt="" loading="lazy"></p>
<p>这个屋子可以“飞”起来，当然不是气球拉动的，而是用吊车把它吊在半空，然后游客住在里面。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050405.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050406.webp" alt="" loading="lazy"></p>
<p>我在想，如果吊在半空，水电怎么供应呢？看来这栋屋子一定配备了水箱、水泵、发电机和电池。</p>
<p>2、<a href="https://www.euronews.com/culture/2024/04/25/miss-ai-worlds-first-beauty-contest-with-computer-generated-women" target="_blank" rel="noreferrer">AI 小姐</a></p>
<p>一家英国互联网公司宣布，举办第一届世界 AI 小姐选美比赛。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050109.webp" alt="" loading="lazy"></p>
<p>今年5月10日之前，全世界的创作者都可以向<a href="https://www.waicas.com/" target="_blank" rel="noreferrer">它的官网</a>提交作品。</p>
<p>作品不仅仅包括 AI 生成的虚拟美女照片，还必须在社交平台上与粉丝互动，涨粉数量也是评选指标之一。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050110.webp" alt="" loading="lazy"></p>
<p>评审团将评出前三名，获得“AI 小姐”的称号，还有总额2万美元的奖金。</p>
<p>主办单位称，该比赛是为了扩大 AI 的影响，帮助创作者将内容货币化。这件事表明，娱乐业将是 AI 最早、最大的应用领域之一。</p>
<p>3、<a href="https://boehs.org/node/everything-i-know-about-the-xz-backdoor" target="_blank" rel="noreferrer">摩托车的呼啸声</a></p>
<p>一些摩托车骑士喜欢非常响亮的引擎呼啸声，甚至去改动引擎。他们辩解，大音量的噪声能够让别人尽早注意到，从而减少交通事故。</p>
<p>为了验证这种说法是否正确，一个罗马尼亚团队进行了现场实验。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040704.webp" alt="" loading="lazy"></p>
<p>他们一共实验了6辆摩托车，噪音都在80分贝到110分贝之间。这是很大的噪音，飞机起飞时的噪音为100分贝到120分贝，摩托车的噪音就是这么响。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040705.webp" alt="" loading="lazy"></p>
<p>研究人员发现，如果轿车司机关闭车窗，那么只有摩托车距离汽车10米之内时，司机才会听到声音。这意味着，高速行驶时，司机根本来不及做出反应。</p>
<p>这个实验说明，保证交通安全的不是响亮的引擎声，而是要降低车速。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.163.com/dy/article/J1IE4PAD0511BLFD.html" target="_blank" rel="noreferrer">CPU 超频的天花板</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050701.webp" alt="" loading="lazy"></p>
<p>很多玩家喜欢超频 CPU，越快越好。但是，到达物理极限后，就很难突破。用了整整15年，世界纪录才从 8G Hz 提高到 9G Hz。</p>
<p>2、<a href="https://medium.com/@maciej.pocwierz/how-an-empty-s3-bucket-can-make-your-aws-bill-explode-934a383cb8b1" target="_blank" rel="noreferrer">空的 S3 存储桶也能产生费用</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043008.webp" alt="" loading="lazy"></p>
<p>亚马逊 S3 是最流行的存储云服务，作者建了一个空存储桶，万万没想到，没有写入任何数据，两天居然产生了1300美元的费用。</p>
<p>3、<a href="https://www.longluo.me/blog/2024/04/16/2024-alibaba-global-mathematics-competition-qualifying-round/" target="_blank" rel="noreferrer">2024阿里巴巴全球数学竞赛预选赛</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050201.webp" alt="" loading="lazy"></p>
<p>作者参加2024阿里巴巴全球数学竞赛预选赛，全部七道题只会做第1、2、6题，他分享了自己的解答。（<a href="https://github.com/ruanyf/weekly/issues/4394" target="_blank" rel="noreferrer">@longluo</a> 投稿）</p>
<p>4、<a href="https://www.gibbard.me/using_git_offline/" target="_blank" rel="noreferrer">Git 的离线使用</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010913.webp" alt="" loading="lazy"></p>
<p>作者介绍没有网络怎样备份 Git 仓库，比如把本地仓库推送到 U 盘。</p>
<p>5、<a href="https://kyleshevlin.com/make-checkpoint/" target="_blank" rel="noreferrer">如何为项目设置打卡点</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024033101.webp" alt="" loading="lazy"></p>
<p>本文介绍一种便捷方法，使用 Makefile 在代码仓库里面设置打卡点（checkpoint）。</p>
<p>6、<a href="https://rxdb.info/articles/websockets-sse-polling-webrtc-webtransport.html" target="_blank" rel="noreferrer">服务器实时消息获取的技术方案</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031902.webp" alt="" loading="lazy"></p>
<p>本文比较了浏览器获得服务器实时消息的五种技术方案：WebSockets、服务器发送事件、长轮询、WebRTC、WebTransport。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://styleof.com/s/remix-yourself" target="_blank" rel="noreferrer">Remix Yourself</a></p>
<p>这个网站要求上传三张照片，第一张是布局，第二张是样式，第三张是人像。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042702.webp" alt="" loading="lazy"></p>
<p>它会将它们合成一张。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042703.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://twogether.ai/" target="_blank" rel="noreferrer">twogethe.ai</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111502.webp" alt="" loading="lazy"></p>
<p>这个网站使用 AI，生成你与名人（或者任意两个人）的合照。</p>
<p>3、<a href="https://imagedescriptiongenerator.xyz/zh" target="_blank" rel="noreferrer">AI 说图解图</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042901.webp" alt="" loading="lazy"></p>
<p>一个<a href="https://github.com/ShurshanX/AI-Image-Description" target="_blank" rel="noreferrer">开源</a>软件，生成上传图片的文字描述，基于 ERNIE 3.5 和 GEMINI-PRO-1.5 API。（<a href="https://github.com/ruanyf/weekly/issues/4370" target="_blank" rel="noreferrer">@ShurshanX</a> 投稿）</p>
<p>4、<a href="https://mashable.com/article/ai-music-videos" target="_blank" rel="noreferrer">AI 生成的音乐视频</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050706.webp" alt="" loading="lazy"></p>
<p>OpenAI 发布了一段4分钟的音乐视频，画面和音乐都是 AI 生成的。这是迄今 AI 生成的最长视频。</p>
<p>5、<a href="https://www.supertechfans.com/cn" target="_blank" rel="noreferrer">HackerNews 每日 AI 摘要</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042903.webp" alt="" loading="lazy"></p>
<p>这个项目对 Hacker News 每天的热点文章，生成中文的 AI 摘要，除了官网，还会发到<a href="https://lw9eez9cc6.feishu.cn/wiki/Z408wHLlRi8MdCk6QfacpW6bnB0" target="_blank" rel="noreferrer">飞书</a>上面。（<a href="https://github.com/ruanyf/weekly/issues/3634" target="_blank" rel="noreferrer">@rmrf</a> 投稿）</p>
<p>6、<a href="https://github.com/1Panel-dev/MaxKB" target="_blank" rel="noreferrer">MaxKB</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024043001.webp" alt="" loading="lazy"></p>
<p>一款基于 LLM 大语言模型的知识库问答系统，可以无缝嵌入第三方网站，实现智能问答。（<a href="https://github.com/ruanyf/weekly/issues/4386" target="_blank" rel="noreferrer">@maninhill</a> 投稿）</p>
<p>7、<a href="https://geospy.ai/" target="_blank" rel="noreferrer">GeoSpy AI</a></p>
<p>这个网站使用 AI 识别上传照片的拍摄地点。</p>
<p>8、<a href="https://www.bilibili.com/read/cv34309921/" target="_blank" rel="noreferrer">七个免费 LLM Playground</a></p>
<p>本文列出七个可以在线试用各种 LLM 的网站。（<a href="https://github.com/ruanyf/weekly/issues/4408" target="_blank" rel="noreferrer">@webup</a> 投稿）</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://elysiajs.com/" target="_blank" rel="noreferrer">ElysiaJS</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011107.webp" alt="" loading="lazy"></p>
<p>JS 语言的 Web 框架，专门为 Bun 运行环境开发。</p>
<p>2、<a href="https://github.com/cantino/mcfly" target="_blank" rel="noreferrer">mcfly</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011302.webp" alt="" loading="lazy"></p>
<p>Shell 操作历史的搜索工具，提供神经网络搜索功能，可以替代 ctrl-r 快捷键。</p>
<p>3、<a href="https://github.com/geek-fun/dockit" target="_blank" rel="noreferrer">DocKit</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042902.webp" alt="" loading="lazy"></p>
<p>Elasticsearch/OpenSearch 的跨平台桌面客户端，集成了 OpenAI，可以用自然语言与数据库交互。（<a href="https://github.com/ruanyf/weekly/issues/4374" target="_blank" rel="noreferrer">@Blankll</a> 投稿）</p>
<p>4、<a href="https://github.com/slince-zero/IMaker" target="_blank" rel="noreferrer">IMaker 创客</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042906.webp" alt="" loading="lazy"></p>
<p>一款开源的封面设计工具，基于 JS 的 Web 应用，有<a href="https://img-maker.vercel.app/" target="_blank" rel="noreferrer">试用 Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4385" target="_blank" rel="noreferrer">@slince-zero</a> 投稿）</p>
<p>5、<a href="https://github.com/buxuku/VideoSubtitleGenerator" target="_blank" rel="noreferrer">VideoSubtitleGenerator</a></p>
<p>一个命令行工具，通过语音识别，批量为本地的视频文件生成字幕，并支持翻译。（<a href="https://github.com/ruanyf/weekly/issues/4393" target="_blank" rel="noreferrer">@buxuku</a> 投稿）</p>
<p>6、<a href="https://github.com/gvcgo/version-manager" target="_blank" rel="noreferrer">vmr</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050401.webp" alt="" loading="lazy"></p>
<p>一个跨平台的通用版本管理器，目前支持40多种编程语言和工具。（<a href="https://github.com/ruanyf/weekly/issues/4398" target="_blank" rel="noreferrer">@moqsien</a> 投稿）</p>
<p>另有一个类似工具 <a href="https://github.com/version-fox/vfox" target="_blank" rel="noreferrer">vfox</a>。（<a href="https://github.com/ruanyf/weekly/issues/4233" target="_blank" rel="noreferrer">@aooohan</a> 投稿）</p>
<p>7、<a href="https://github.com/zyx0814/Pichome" target="_blank" rel="noreferrer">Pichome</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050707.webp" alt="" loading="lazy"></p>
<p>一款开源网盘程序，使用 PHP 开发。（<a href="https://github.com/ruanyf/weekly/issues/4405" target="_blank" rel="noreferrer">@fhxsnabi</a> 投稿）</p>
<p>8、<a href="https://bi.cool/bi" target="_blank" rel="noreferrer">笔.COOL</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050708.webp" alt="" loading="lazy"></p>
<p>CodePen 的国产替代品，实时预览 HTML、CSS 和 JavaScript 代码的渲染结果。（<a href="https://github.com/ruanyf/weekly/issues/4407" target="_blank" rel="noreferrer">@uovol</a> 投稿）</p>
<p>9、<a href="https://github.com/v-vibe/vue-styled-components" target="_blank" rel="noreferrer">vue-styled-components</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050709.webp" alt="" loading="lazy"></p>
<p>一款类似 styled-components 的 CSS 工具，支持 vue 3。（<a href="https://github.com/ruanyf/weekly/issues/4409" target="_blank" rel="noreferrer">@akinocccc</a> 投稿）</p>
<p>10、<a href="https://github.com/ZTFtrue/MonsterMusic" target="_blank" rel="noreferrer">MonsterMusic</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050710.webp" alt="" loading="lazy"></p>
<p>一款开源的安卓音乐播放器。（<a href="https://github.com/ruanyf/weekly/issues/4411" target="_blank" rel="noreferrer">@ZTFtrue</a> 投稿）</p>
<p>11、<a href="https://github.com/wyj0605/douban_library" target="_blank" rel="noreferrer">豆瓣图书馆查询助手</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050905.webp" alt="" loading="lazy"></p>
<p>一款浏览器插件，在豆瓣读书页面上，查看该书在指定图书馆的藏书情况。（<a href="https://github.com/ruanyf/weekly/issues/4424" target="_blank" rel="noreferrer">@wyj0605</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/ByteByteGoHq/system-design-101#rest-api-vs-graphql" target="_blank" rel="noreferrer">技术概念示意图</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023102601.webp" alt="" loading="lazy"></p>
<p>这个仓库收集各种技术概念的示意图。</p>
<p>2、<a href="https://haitang.app/" target="_blank" rel="noreferrer">海棠诗社</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042905.webp" alt="" loading="lazy"></p>
<p>网友开发的诗词网站。（<a href="https://github.com/ruanyf/weekly/issues/4384" target="_blank" rel="noreferrer">@javayhu</a> 投稿）</p>
<p>3、<a href="https://svgl.vercel.app/" target="_blank" rel="noreferrer">svgl</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121702.webp" alt="" loading="lazy"></p>
<p>一个常用徽标 Logo 的搜索引擎，提供 SVG 文件下载。</p>
<p>4、<a href="https://www.brickcenter.net" target="_blank" rel="noreferrer">Brick Center</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050904.webp" alt="" loading="lazy"></p>
<p>你输入一个关键词，这个网站自动生成它的乐高拼装。（<a href="https://github.com/ruanyf/weekly/issues/4421" target="_blank" rel="noreferrer">@husu</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.macrumors.com/2024/04/26/apple-mac-base-ram-boosts-ended-tim-cook/" target="_blank" rel="noreferrer">MacBook 的内存</a></p>
<p>苹果的 MacBook 笔记本，内存是 8GB。如果要更多的内存，就要花钱买，价格非常贵。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042602.webp" alt="" loading="lazy"></p>
<p>大家都在质疑，为什么内存这么少？相比之下，Windows 笔记本的最小内存，现在一般都是 16GB。</p>
<p>苹果解释，macOS 系统效率高，自家的 8GB 内存等于别家的 16GB。</p>
<p>有人画了一张 MacBook 内存演变图。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042601.webp" alt="" loading="lazy"></p>
<p>从上图可以看到，苹果以前是经常升级内存的，每过几年就升级一次。</p>
<p>但是，2011年以后只升级过一次内存，从 6GB 变成 8GB，以后就一直没升级。</p>
<p>有意思的是，2011年是蒂姆·库克成为苹果 CEO 的时间。他以前是主管供应链的，以成本控制而闻名。</p>
<p>2、<a href="https://www.nkorth.com/palm/apps/#totp-authenticator" target="_blank" rel="noreferrer">PalmOS</a></p>
<p>还有人记得 iPhone 之前的智能手机吗？</p>
<p>当时主要系统是诺基亚的塞班、微软的 Windows CE 和 PalmOS。下面就是 Palm 手机。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050702.webp" alt="" loading="lazy"></p>
<p>它的用户界面如下。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050703.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050704.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050705.webp" alt="" loading="lazy"></p>
<p>不要觉得简陋，那是当时最先进的系统，售价几千元人民币一部。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="http://www.mendosa.com/satiety.htm" target="_blank" rel="noreferrer">饱腹感指数</a></p>
<p>什么食物最能够消除饥饿感？</p>
<p>一个澳大利亚科学家发明了“饱腹感指数”。他选出38种食物，每一种的热量都是240卡路里。</p>
<p>实验者依次食用每一种食物，每吃一种，就要在随后的两小时中，每隔15分钟为自己的饱腹程度打分。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050809.webp" alt="" loading="lazy"></p>
<p>最后发现，碳水化合物（面包、炸薯条、煮土豆）的效果最好。其中，煮土豆的饱腹感指数最高。</p>
<p>这是因为食物中含有的纤维、蛋白质和水越多，消化时间就越长，从而产生更久的饱腹感。而且，碳水化合物会立即升高血糖，从而使得身体马上知道已经饱了。</p>
<p>煮土豆含有大量的纤维和水，同样热量的情况下，体积又很大，还会升高血糖，所以产生了长时间的饱腹感。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202405/bg2024050810.webp" alt="" loading="lazy"></p>
<p>水果的饱腹感指数也很高，因为水份和纤维含量大，但是水果的热量低，同样热量的情况下，水果的份量最多，不容易全吃下去。而且，水果的胃排空速度很快，第二个小时饱腹感就会消失。</p>
<p>高脂肪食物的饱腹感很差，因为它们的胃排空速度也很快。所以，吃肥肉容易饿。</p>
<p>因此，水果搭配高碳水、高蛋白的食物一起吃（比如全麦面包 + 瘦肉 + 橙子），是一个比较好的饮食方案。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>软件公司应该提倡“无罪文化”。</p>
<p>发生产品事故或者服务中断时，不要认定罪人并惩罚他们，而要假设相关个人出于良好意图，只是没有得到正确的信息来做出更好的决策，或者没有工具及时制止他们犯错。</p>
<p>-- <a href="https://www.gybe.ca/a-few-words-about-blameless-culture/" target="_blank" rel="noreferrer">《关于无罪文化》</a></p>
<p>2、</p>
<p>我们做的许多不想做的事情，实际上很容易开始做，比如很容易开始喝酒，或者很容易打开抖音。</p>
<p>如果你想停止做这些事，首先就是要设法增加障碍，让自己很难开始做它们。</p>
<p>-- <a href="https://joshwolff.me/2023/01/19/blockchain-events-extra-documentation.html" target="_blank" rel="noreferrer">《出现就是成功的75%》</a></p>
<p>3、</p>
<p>科技行业的一切，核心都是利润，而不是其他任何事情。因此，你需要尽快推出新产品或新服务，这样才可能产生利润。这意味着尽量使用更多的抽象层、更多的自动化、更少的人员，结果就是开发者越来越缺乏对技术的深入理解。</p>
<p>-- <a href="https://unixsheikh.com/articles/we-have-used-too-many-levels-of-abstractions-and-now-the-future-looks-bleak.html" target="_blank" rel="noreferrer">《我们使用了太多的抽象层次》</a></p>
<p>4、</p>
<p>岛屿巨人症指的是一种生物现象，生存在岛屿上的动物，小型物种往往会身体变大，因为缺乏天敌。相应地，大型物种往往会身体变小（又称“岛屿侏儒症”），因为不容易有稳定的食物供给。</p>
<p>-- <a href="https://en.wikipedia.org/wiki/Island_gigantism" target="_blank" rel="noreferrer">维基百科</a></p>
<p>5、</p>
<p>风险投资家没有理由破坏与你的关系，他们拒绝你的时候不会说“不”，而会用其他400种说法，比如“等你的用户再多一点的时候，再和我们谈谈”、“当你下一轮融资时，请来找我们”。</p>
<p>-- <a href="https://jacobbartlett.substack.com/p/yes-actually-means-no-the-curious" target="_blank" rel="noreferrer">《投资家的“是”实际上意味着“否”》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/04/weekly-issue-252.html" target="_blank" rel="noreferrer">互联网创业变难了</a>（2023 #252）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/04/weekly-issue-202.html" target="_blank" rel="noreferrer">三个有启发的学习方法</a>（2022 #202）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/04/weekly-issue-152.html" target="_blank" rel="noreferrer">从北大到技校</a>（2021 #152）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/04/weekly-issue-102.html" target="_blank" rel="noreferrer">工作热情从何而来？</a>（2020 #102）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202404/bg2024042401.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[Python 速成手册]]></title>
            <link>https://bayi-95.eu.org/pages/python/</link>
            <guid>https://bayi-95.eu.org/pages/python/</guid>
            <pubDate>Mon, 29 Apr 2024 03:01:57 GMT</pubDate>
            <description><![CDATA[# Python 速成手册

## 关于 Python

Python 是一门已在世界上广泛使用的解释型语言。它提供了高效的高级数据结构，还能简单有效地面向对象编程，也可以在算法竞赛。

### Python 的优点

- 是一门 **解释型** 语言：Python 不需要编译和链接，可以在一定程度上减少操作步骤。
- 是一门 **交互式** 语言：Python 解释器实现了交互式操作，可以直接在终端输入并执行指令。
- **易学易用**：Python 提供了大量的数据结构，也支持开发大型程序。
- **兼容性强**：Python 同时支持 Windows、macOS 和 Unix 操作系统。
- **实用性强**：从简单的输入输出到科学计算甚至于大型 WEB 应用，都可以写出适合的 Python 程序。
- **程序简洁、易读**：Python 代码通常比实现同种功能的其他语言的代码短。
- **支持拓展**：Python 会开发 C 语言程序（即 CPython），支持把 Python 解释器和用 C 语言开发的应用链接，用 Python 扩展和控制该应用。

### 学习 Python 的注意事项

- 目前主要使用的 Python 版本是 Python 3.7 及以上的版本，Python 2 和 Python 3.6 及以前的 Python 3 已经 [不被支持](https://devguide.python.org/versions/#unsupported-versions)，但仍被一些老旧系统与代码所使用。本文将 **介绍较新版本的 Python**。如果遇到 Python 2 代码，可以尝试 [`2to3`](https://docs.python.org/zh-cn/3/library/2to3.html) 程序将 Python 2 代码转换为 Python 3 代码。
- Python 的设计理念和语法结构 **与一些其他语言的差异较大**，隐藏了许多底层细节，所以呈现出实用而优雅的风格。
- Python 是高度动态的解释型语言，因此其 **程序运行速度相对较慢**，尤其在使用其内置的 `for` 循环语句时。在使用 Python 时，应尽量使用 `filter`、`map` 等内置函数，或使用 [列表生成](https://www.pythonforbeginners.com/basics/list-comprehensions-in-python) 语法的手段来提高程序性能。

## 环境搭建

### Windows

访问 <https://www.python.org/downloads/> 下载自己需要的版本并安装。
为了方便，请务必勾选复选框 `Add Python 3.x to PATH` 以将 Python 加入环境变量。

如下图，在 Python 3.7.4 版本的安装界面中，应勾选最后一项复选框。

安装完成后，可以在开始菜单找到安装好的 Python。

此外，可以在命令提示符中运行 Python。

正常启动 Python 解释器后，它会先显示欢迎信息等内容，之后就会出现提示符 `>>>`，大致如下所示：

```python
Python 3.10.1 (tags/v3.10.1:2cd268a, Dec  6 2021, 19:10:37) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>
```

此外，也可以在 Microsoft Store 中免费而快捷地获取 Python。

### macOS/Linux

通常情况下，大部分的 Linux 发行版中已经自带了 Python。如果只打算学习 Python 语法，并无其它开发需求，不必另外安装 Python。

::: warning 注意
在一些默认安装（指使用软件包管理器安装）Python 的系统（如 Unix 系统）中，应在终端中运行 `python3` 打开 Python 3 解释器。[1]
:::

如果发行版自带 Python 版本过旧，可自行下载编译最新版本的 Python。此外，也可以通过 venv、conda、Nix 等工具管理 Python 工具链和 Python 软件包，创建隔离的虚拟环境，避免出现依赖问题。

作为一种解释型语言，Python 的执行方式和 C++ 有所不同，这种差异在使用 IDE 编程时往往得不到体现，因此这里需要强调一下运行程序的不同方式。

当在命令行中键入 `python3` 或刚刚打开 IDLE 时，你实际进入了一种交互式的编程环境，也称「REPL」（「读取 - 求值 - 输出」循环），初学者可以在这里输入语句并立即看到结果，这让验证一些语法变得极为容易，我们也将在后文中大量使用这种形式。

但若要编写完整的程序，你最好还是新建一个文本文件（通常后缀为 `.py`），然后在命令行中执行 `python3 filename.py`，就能够运行代码看到结果了。

### 通过镜像下载安装文件

目前国内关于 **源码** 的镜像缓存主要是 [北京交通大学自由与开源软件镜像站](https://mirror.bjtu.edu.cn/python/) 和 [华为开源镜像站](https://repo.huaweicloud.com/python/)，可以到那里尝试下载 Python 安装文件。

## 使用 `pip` 安装第三方库

Python 的生命力很大程度上来自于丰富的第三方库，编写一些实用程序时「调库」是常规操作，`pip` 是首选的安装第三方库的程序。自 Python 3.4 版本起，它被默认包含在 Python 二进制安装程序中。

`pip` 中的第三方库主要存储在 [Python 包索引（PyPI）](https://pypi.org/) 上，用户也可以指定其它第三方库的托管平台。使用方法可参照 [pypi 镜像使用帮助 - 清华大学开源软件镜像站](https://mirrors.tuna.tsinghua.edu.cn/help/pypi/)、[PyPI 镜像源使用帮助—中国科学技术大学镜像站](http://mirrors.ustc.edu.cn/help/pypi.html) 等使用帮助。你可以在 [MirrorZ](https://mirrorz.org/list/pypi) 上获取更多 PyPI 镜像源。

## 基本语法

Python 的语法简洁而易懂，也有许多官方和第三方文档与教程。这里仅介绍一些对 OIer 比较实用的语言特性，你可以在 [Python 文档](https://docs.python.org/zh-cn/3/) 和 [Python Wiki](https://wiki.python.org/moin/) 等网页上了解更多关于 Python 的教程。

### 注释

加入注释并不会对代码的运行产生影响，但加入注释可以使代码更加易懂易用。

```python
# 用 # 字符开头的是单行注释

"""
跨多行字符串会用三引号
（即三个单引号或三个双引号）
包裹，但也通常被用于注释
"""
```

加入注释代码并不会对代码产生影响。我们鼓励加入注释来使代码更加易懂易用。

### 基本数据类型

#### 一切皆对象

在 Python 中，你无需事先声明变量名及其类型，直接赋值即可创建各种类型的变量：

```python
>>> x = -3  # 语句结尾不用加分号
>>> x
-3
>>> f = 3.1415926535897932384626; f  # 实在想加分号也可以，这里节省了一行
3.141592653589793
>>> s1 = "O"
>>> s1  # 怎么显示成单引号了？有区别吗？
'O'
>>> b = 'A' == 65  # 明明在 C/C++ 中是成立的
>>> b  # 与众不同的是 True, False 首字母均大写，可能与内置常量的命名约定有关
False
>>> True + 1 == 2 and not False != 0  # Python 可能喜欢单词胜过符号
True
```

但这不代表 Python 没有类型的概念，实际上解释器会根据赋值或运算自动推断变量类型，你可以使用内置函数 `type()` 查看这些变量的类型：

```python
>>> type(x)
<class 'int'>
>>> type(f)
<class 'float'>
>>> type(s1)  # 请注意，不要给字符串起名为 str，不信试试看是否真的可以这么做
<class 'str'>
>>> type(b)
<class 'bool'>
```

::: info "[**内置函数**](https://docs.python.org/zh-cn/3/library/functions.html) 是什么？"
在 C/C++ 中，很多常用函数都分散在不同的头文件中，但 Python 的解释器内置了许多实用且通用的函数，你可以直接使用而无需注意它们的存在，但这也带来了小问题，这些内置函数的名称多为常见单词，你需要注意避免给自己的变量起相同的名字，否则可能会产生奇怪的结果。
:::

正如我们所看到的，Python 内置有整数、浮点数、字符串和布尔类型，可以类比为 C++ 中的 `int`，`float`，`string` 和 `bool`。但有一些明显的不同之处，比如没有 `char` 字符类型，也没有 `double` 类型（但 `float` 其实对应 C 中的双精度），如果需要更精确的浮点运算，可以使用标准库中的 [decimal](https://docs.python.org/zh-cn/3/library/decimal.html) 模块，如果需要用到复数，Python 还内置了 `complex` 类型（而这也意味着最好不要给变量起名为 `complex`）。
可以看到这些类型都以 `class` 开头，而这正是 Python 不同于 C++ 的关键之处，Python 程序中的所有数据都是由对象或对象间关系来表示的，函数是对象，类型本身也是对象：

```python
>>> type(int)
<class 'type'>
>>> type(pow)  # 求幂次的内置函数，后文会介绍
<class 'builtin_function_or_method'>
>>> type(type)  # type() 也是内置函数，但有些特殊，感兴趣可自行查阅
<class 'type'>
```

你或许会觉得这些概念一时难以理解且没有用处，所以我们暂时不再深入，在后文的示例中你或许能慢慢体会到，Python 的对象提供了强大的方法，我们在编程时应当优先考虑围绕对象而不是过程进行操作，这会让我们的代码显得更加紧凑明晰。

#### 数字运算

有人说，你可以把你系统里装的 Python 当作一个多用计算器，这是事实。  
在交互模式下，你可以在提示符 `>>>` 后面输入一个表达式，就像其他大部分语言（如 C++）一样使用运算符 `+`、`-`、`*`、`/`、`%` 来对数字进行运算，也可以使用 `()` 来进行符合结合律的分组，读者可以自行试验，在这里我们仅展示与 C++ 差异较大的部分：

```python
>>> 5.0 * 6  # 浮点数的运算结果是浮点数
30.0
>>> 15 / 3  # 与 C/C++ 不同，除法永远返回浮点 float 类型
5.0
>>> 5 / 100000  # 位数太多，结果显示成科学计数法形式
5e-05
>>> 5 // 3 # 使用整数除法（地板除）则会向下取整，输出整数类型
1
>>> -5 // 3 # 符合向下取整原则，注意这与 C/C++ 不同
-2
>>> 5 % 3 # 取模
2
>>> -5 % 3 # 负数取模结果一定是非负数，这点也与 C/C++ 不同，不过都满足 (a//b)*b+(a%b)==a
1
>>> x = abs(-1e4)  # 求绝对值的内置函数
>>> x += 1  # 没有自增/自减运算符
>>> x  # 科学计数法默认为 float
10001.0
```

在上面的实践中可以发现，除法运算（`/`）永远返回浮点类型（在 Python 2 中返回整数）。如果你想要整数或向下取整的结果的话，可以使用整数除法（`//`）。同样的，你也可以像 C++ 中一样，使用模（`%`）来计算余数，科学计数法的形式也相同。

特别地，Python 用 `**` 即可进行幂运算，还通过内置的 `pow(a, b, mod)` 提供了 [快速幂](../math/binary-exponentiation.md) 的高效实现。

Python 的字符串类型包含 Unicode 字符，这意味着任何字符串都会存储为 Unicode。[2]在 Python 中，可以对一个 Unicode 字符使用内置函数 `ord()` 将其转换为对应的 Unicode 编码，逆向的转换使用内置函数 `chr()`。

如果想把数转换为对应的字符串，可使用 Python 内置函数 `str()`，也可以使用 f-string 实现；反之，可以使用 `int()` 和 `float()` 两个函数。

Python 的字符串类型还有 [许多方便的功能](https://docs.python.org/zh-cn/3/library/stdtypes.html#text-sequence-type-str)。由于本文篇幅有限，这里不一一介绍。

#### 数据类型判断

对于一个变量，可以使用 `type(object)` 返回变量的类型，例如 `type(8)` 和 `type('a')` 的值分别为 `<class 'int'>` 和 `<class 'str'>`。

### 输出和输入

#### 输出

对于一个变量，可以使用 `type(object)` 返回变量的类型，例如 `type(8)` 和 `type('a')` 的值分别为 `<class 'int'>` 和 `<class 'str'>`。

Python 中，还可以使用 `**` 运算符和内置的 `pow(base, exp, mod=None)` 函数进行幂运算，使用 `abs(x)` 求数的绝对值。

```python
>>> 3 ** 4 # 幂运算
81
>>> 2 ** 512
13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096
>>> pow(2, 512, int(1e4)) # 即 2**512 % 10000 的快速实现, 1e4 是 float 所以要转 int
4096
>>> 2048 ** 2048 # 在IDLE里试试大整数？
>>> 0.1 + 0.1 + 0.1 - 0.3 == 0.  # 和 C/C++ 一样需要注意浮点数不能直接判相等
False
```

#### 字符串

Python 3 提供了强大的基于 [Unicode](https://docs.python.org/zh-cn/3/howto/unicode.html#unicode-howto) 的字符串类型，使用起来和 C++ 中的 string 类似，一些概念如转义字符也都相通，除了加号拼接和索引访问，还额外支持数乘 `*` 重复字符串，和 `in` 操作符。

```python
>>> s1 = "O"  # 单引号和双引号都能包起字符串，有时可节省转义字符
>>> s1 += 'I-Wiki'  # 为和 C++ 同步建议使用双引号
>>> 'OI' in s1  # 检测子串很方便
True
>>> len(s1)  # 类似 C++ 的 s.length()，但更通用
7
>>> s2 = """ 感谢你的阅读
... 欢迎参与贡献!
"""   # 使用三重引号的字符串可以跨越多行
>>> s1 + s2
'OI-Wiki 感谢你的阅读\n欢迎参与贡献!'
>>> print(s1 + s2)  # 这里使用了 print() 函数打印字符串
OI-Wiki 感谢你的阅读
欢迎参与贡献!
>>> s2[2] * 2 + s2[3] + s2[-1]  # 负数索引从右开始计数，加上len(s)，相当于模n的剩余类环
'谢谢你!'
>>> s1[0] = 'o'  # str 是不可变类型，不能原地修改，其实 += 也是创建了新的对象
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
```

Python 支持多种复合数据类型，可将不同值组合在一起。最常用的 `list`，类型是用方括号标注、逗号分隔的一组值。例如，`[1, 2, 3]` 和 `['a','b','c']` 都是列表。

除了索引，字符串还支持*切片*，它的设计非常精妙又符合直觉，格式为 `s[左闭索引:右开索引:步长]`：

```python
>>> s = 'OI-Wiki 感谢你的阅读\n欢迎参与贡献!'
>>> s[:8]  # 省略左闭索引则从头开始
'OI-Wiki '
>>> s[8:14]  # 左闭右开设计的妙处，长度恰好为14-8=6，还和上一个字符串无缝衔接
'感谢你的阅读'
>>> s[-4:]  # 省略右开索引则直到结尾
'与贡献!'
>>> s[8:14:2]  # 步长为2
'感你阅'
>>> s[::-1]  # 步长为 -1 时，获得了反转的字符串
'!献贡与参迎欢\n读阅的你谢感 ikiW-IO'
>>> s  # 但原来的字符串并未改变
'OI-Wiki 感谢你的阅读\n欢迎参与贡献!'
```

C/C++ 中 `char` 类型可以和 对应的 ASCII 码互转，而在 Python 中你可以对一个 Unicode 字符使用内置函数 `ord()` 将其转换为对应的 Unicode 编码，逆向的转换使用内置函数 `chr()`。

如果想把数字转换成对应的字符串，可以使用内置函数 `str()`，反之可以使用 `int()` 和 `float()`，你可以类比为 C/C++ 中的强制类型转换，但括号不是加在类型上而是作为函数的一部分括住参数。

Python 的字符串类型提供了许多强大的方法，包括计算某字符的索引与出现次数，转换大小写等等，这里就不一一列举，强烈建议查看 [官方文档](https://docs.python.org/zh-cn/3/library/stdtypes.html#text-sequence-type-str) 熟悉常用方法，遇到字符串操作应当首先考虑使用这些方法而非自力更生。

### 开数组

从 C++ 转过来的同学可能很迷惑怎么在 Python 中开数组，这里就介绍在 Python 开「数组」的语法，需要强调我们介绍的其实是几种 [序列类型](https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator-types)，和 C 的数组有着本质区别，而更接近 C++ 中的 `vector`。

#### 使用 `list`

列表（`list`）大概是 Python 中最常用也最强大的序列类型，列表中可以存放任意类型的元素，包括嵌套的列表，这符合数据结构中「广义表」的定义。请注意不要将其与 C++ STL 中的双向链表 [`list`](./csl/sequence-container.md#list) 混淆，故本文将使用「列表」而非 `list` 以免造成误解。

```python
>>> []  # 创建空列表，注意列表使用方括号
[]
>>> nums = [0, 1, 2, 3, 5, 8, 13]; nums  # 初始化列表，注意整个列表可以直接打印
[0, 1, 2, 3, 5, 8, 13]
>>> nums[0] = 1; nums  # 支持索引访问，还支持修改元素
[1, 1, 2, 3, 5, 8, 13]
>>> nums.append(nums[-2]+nums[-1]); nums  # append() 同 vector 的 push_back()，也都没有返回值
[1, 1, 2, 3, 5, 8, 13, 21]
>>> nums.pop()  # 弹出并返回末尾元素，可以当栈使用；其实还可指定位置，默认是末尾
21
>>> nums.insert(0, 1); nums  # 同 vector 的 insert(position, val)
[1, 1, 1, 2, 3, 5, 8, 13]
>>> nums.remove(1); nums  # 按值移除元素（只删第一个出现的），若不存在则抛出错误
[1, 1, 2, 3, 5, 8, 13]
>>> len(nums)  # 求列表长度，类似 vector 的 size()，但 len() 是内置函数
7
>>> nums.reverse(); nums  # 原地逆置
[13, 8, 5, 3, 2, 1, 1]
>>> sorted(nums)  # 获得排序后的列表
[1, 1, 2, 3, 5, 8, 13]
>>> nums  # 但原来的列表并未排序
[13, 8, 5, 3, 2, 1, 1]
>>> nums.sort(); nums  # 原地排序，可以指定参数 key 作为排序标准
[1, 1, 2, 3, 5, 8, 13]
>>> nums.count(1)  # 类似 std::count()
2
>>> nums.index(1)  # 返回值首次出现项的索引号，若不存在则抛出错误
0
>>> nums.clear(); nums  # 同 vector 的 clear()
```

以上示例展现了列表与 `vector` 的相似之处，`vector` 中常用的操作一般也都能在列表中找到对应方法，不过某些方法如 `len()`,`sorted()` 会以内置函数的面目出现，而 STL 算法中的函数如 `find()`,`count()`,`max_element()`,`sort()`,`reverse()` 在 Python 中又成了对象的方法，使用时需要注意区分，更多方法请参见官方文档的 [列表详解](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#more-on-lists)。下面将展示列表作为 Python 的基本序列类型的一些强大功能：

Python 支持多种复合数据类型，可将不同值组合在一起。最常用的 `list`，类型是用方括号标注、逗号分隔的一组值。例如，`[1, 2, 3]` 和 `['a','b','c']` 都是列表。

```python
>>> lst = [1, '1'] + ["2", 3.0]  # 列表直接相加生成一个新列表
>>> lst  # 这里存放不同的类型只是想说明可以这么做，但这不是好的做法
[1, '1', '2', 3.0]
>>> 3 in lst  # 实用的成员检测操作，字符串也有该操作且还支持子串检测
True
>>> [1, '1'] in lst  # 仅支持单个成员检测，不会发现「子序列」
False
>>> lst[1:3] = [2, 3]; lst  # 切片并赋值，原列表被修改
[1, 2, 3, 3.0]
>>> lst[::-1]  # 获得反转后的新列表
[3.0, 3, 2, 1]
>>> lst *= 2; lst  # 数乘拼接
[1, 2, 3, 3.0, 1, 2, 3, 3.0]
>>> del lst[4:]; lst  # 也可写 lst[4:] = []，del 语句不止可以用于删除序列中元素
[1, 2, 3, 3.0]
```

以上示例展现了列表作为序列的一些常用操作，可以看出许多操作如切片是与字符串相通的，但字符串是「不可变序列」而列表是「可变序列」，故可以通过切片灵活地修改列表。在 C/C++ 中我们往往会通过循环处理字符数组，下面将展示如何使用 [「列表推导式」](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions) 在字符串和列表之间转换：

```python
>>> # 建立一个 [65, 70) 区间上的整数数组，range 也是一种类型，可看作左闭右开区间，第三个参数为步长可省略
>>> nums = list(range(65,70))  # 记得 range 外面还要套一层 list()
[65, 66, 67, 68, 69]
>>> lst = [chr(x) for x in nums]  # 列表推导式的典型结构，[exp for var in iterable if cond]
>>> lst  # 上两句可以合并成 [str(x) for x in range(65,70)]
['A', 'B', 'C', 'D', 'E']
>>> s = ''.join(lst); s # 用空字符串 '' 拼接列表中的元素生成新字符串
'ABCDE'
>> list(s)  # 字符串生成字符列表
['A', 'B', 'C', 'D', 'E']
>>> # 如果你不知道有 s.lower() 方法就可能写出下面这样新瓶装旧酒的表达式
>>> ''.join([chr(ord(ch) - 65 + 97) for ch in s if ch >= 'A' and ch <= 'Z'])
'abcde'
```

下面演示一些在 OI 中更常见的场景，比如二维「数组」：

```python
>>> vis = [[0] * 3] * 3  # 开一个3*3的全0数组
>>> vis
[[0, 0, 0], [0, 0, 0], [0, 0, 0]]
>>> vis[0][0] = 1; vis  # 怎么会把其他行也修改了？
[[1, 0, 0], [1, 0, 0], [1, 0, 0]]
>>> # 先来看下一维列表的赋值
>>> a1 = [0, 0, 0]; a2 = a1; a3 = a1[:]  # 列表也可以直接被赋给新的变量
>>> a1[0] = 1; a1  # 修改列表 a1，似乎正常
[1, 0, 0]
>>> a2  # 怎么 a2 也被改变了
[1, 0, 0]
>>> a3  # a3 没有变化
[0, 0, 0]
>>> id(a1) == id(a2) and id(a1) != id(a3)  # 内置函数 id() 给出对象的「标识值」，可类比为地址，地址相同说明是一个对象
True
>>> vis2 = vis[:];  # 拷贝一份二维列表看看
>>> vis[0][1] = 2; vis  # vis 肯定还是被批量修改
>>> [[1, 2, 0], [1, 2, 0], [1, 2, 0]]
>>> vis2  # 但 vis2 是切片拷贝的怎么还是被改了
>>> [[1, 2, 0], [1, 2, 0], [1, 2, 0]]
>>> id(vis) != id(vis2)  # vis 和 vis2 确实不是一个对象啊
True
>>> # 谜底揭晓，vis2 虽然不是 vis 的引用，但其中对应行都指向相同的对象
>>> [[id(vis[i]) == id(vis2[i]) for i in range(3)]
[True, True, True]
>>> # 回看二维列表自身
>>> [id(x) for x in vis]  # 具体数字和这里不一样但三个值一定相同，说明是三个相同对象
[139760373248192, 139760373248192, 139760373248192]
```

其实我们一直隐瞒了一个重要事实，Python 中赋值只传递了引用而非创建新值，你可以创建不同类型的变量并赋给新变量，验证发现二者的标识值是相同的，只不过直到现在我们才介绍了列表这一种可变类型，而给数字、字符串这样的不可变类型赋新值时实际上创建了新的对象，故而前后两个变量互不干扰。但列表是可变类型，所以我们修改一个列表的元素时，另一个列表由于指向同一个对象所以也被修改了。创建二维数组也是类似的情况，示例中用乘法创建二维列表相当于把 `[0]*3` 这个一维列表重复了 3 遍，所以涉及其中一个列表的操作会同时影响其他两个列表。更不幸的是，在将二维列表赋给其他变量的时候，就算用切片来拷贝，也只是「浅拷贝」，其中的元素仍然指向相同的对象，解决这个问题需要使用标准库中的 [`deepcopy`](https://docs.python.org/3/library/copy.html)，或者尽量避免整个赋值二维列表。不过还好，创建二维列表时避免创建重复的列表还是比较简单，只需使用「列表推导式」：

```python
>>> vis1 = [[0] * 3 for _ in range(3)]  # 把用不到的循环计数变量设为下划线 _ 是一种惯例
>>> # 但在 REPL 中 _ 默认指代上一个表达式输出的结果，故也可使用双下划线
>>> vis1
[[0, 0, 0], [0, 0, 0], [0, 0, 0]]
>>> [id(x) for x in vis1]  # 具体数字和这里不一样但三个值一定不同，说明是三个不同对象
[139685508981248, 139685508981568, 139685508981184]
>>> vis1[0][0] = 1
[[1, 0, 0], [0, 0, 0], [0, 0, 0]]
>>> a2[0][0] = 10  # 访问和赋值二维数组
```

我们未讲循环的用法就先介绍了列表推导式，这是由于 Python 是高度动态的解释型语言，因此其程序运行有大量的额外开销。尤其是 **for 循环在 Python 中运行的奇慢无比**。因此在使用 Python 时若想获得高性能，尽量使用使用列表推导式，或者 `filter`,`map` 等内置函数直接操作整个序列来避免循环，当然这还是要根据具体问题而定。

#### 使用 NumPy

::: info "什么是 NumPy"
[NumPy](https://numpy.org/) 是著名的 Python 科学计算库，提供高性能的数值及矩阵运算。在测试算法原型时可以利用 NumPy 避免手写排序、求最值等算法。NumPy 的核心数据结构是 `ndarray`，即 n 维数组，它在内存中连续存储，是定长的。此外 NumPy 核心是用 C 编写的，运算效率很高。不过需要注意，它不是标准库的一部分，可以使用 `pip install numpy` 安装，但不保证 OI 考场环境中可用。
:::

下面的代码将介绍如何利用 NumPy 建立多维数组并进行访问。

```python
>>> import numpy as np  # 请自行搜索 import 的意义和用法
>>> np.empty(3) # 开容量为3的空数组，注意没有初始化为0
array([0.00000000e+000, 0.00000000e+000, 2.01191014e+180])
>>> np.zeros((3, 3)) # 开 3*3 的数组，并初始化为0
array([[0., 0., 0.],
       [0., 0., 0.],
       [0., 0., 0.]])
>>> a1 = np.zeros((3, 3), dtype=int) # 开3×3的整数数组
>>> a1[0][0] = 1 # 访问和赋值
>>> a1[0, 0] = 1 # 更友好的语法
>>> a1.shape # 数组的形状
(3, 3)

>>> a1[:2, :2] # 取前两行、前两列构成的子阵，无拷贝
array([[1, 0],
       [0, 0]])

>>> a1[0, 2] # 获取第 1、3 列，无拷贝
array([[1, 0],
       [0, 0],
       [0, 0]])
>>> np.max(a1) # 获取数组最大值
1
>>> a1.flatten() # 将数组展平
array([1, 0, 0, 0, 0, 0, 0, 0, 0])

>>> np.sort(a1, axis = 1) # 沿行方向对数组进行排序，返回排序结果
array([[0, 0, 1],
       [0, 0, 0],
       [0, 0, 0]])
>>> a1.sort(axis = 1) # 沿行方向对数组进行原地排序
```

#### 使用 `array`

[`array`](https://docs.python.org/zh-cn/3/library/array.html) 是 Python 标准库提供的一种高效数值数组，可以紧凑地表示基本类型值的数组，但不支持数组嵌套，也很少见到有人使用它，这里只是顺便提一下。

若无特殊说明，后文出现「数组」一般指「列表」。

### [输入输出](https://docs.python.org/3/tutorial/inputoutput.html)

Python 中的输入输出主要通过内置函数 `input()` 和 `print()` 完成，`print()` 的用法十分符合直觉：

```python
>>> a = [1,2,3]; print(a[-1])  # 打印时默认末尾换行
3
>>> print(ans[0], ans[1])  # 可以输出任意多个变量，默认以空格间隔
1 2
>>> print(a[0], a[1], end='')  # 令 end='', 使末尾不换行
1 2>>>
>>> print(a[0], a[1], sep=', ')  # 令 sep=', '，改变间隔样式
1, 2
>>> print(str(a[0]) + ', ' + str(a[1]))  # 输出同上，但是手动拼接成一整个字符串
```

算法竞赛中通常只涉及到基本的数值和字符串输出，以上用法基本足够，只有当涉及到浮点数位数时需要用到格式化字符串输出。格式化有三种方法，第一种也是最老旧的方法是使用 `printf()` 风格的 `%` 操作符；另一种是利用 [`format` 函数](https://docs.python.org/3/library/string.html#formatstrings)，写起来比较长；第三种是 Python 3.6 新增的 [f-string](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#formatted-string-literals)，最为简洁，但不保证考场中的 Python 版本足够新。详细丰富的说明可以参考 [这个网页](https://www.python-course.eu/python3_formatted_output.php)，尽管更推荐使用 `format()` 方法，但为了获得与 C 接近的体验，下面仅演示与 `printf()` 类似的老式方法：

```python
>>> pi = 3.1415926; print('%.4f' % pi)   # 格式为 %[flags][width][.precision]type
3.1416
>>> '%.4f - %8f = %d' % (pi, 0.1416, 3)  # 右边多个参数用 () 括住，后面会看到其实是「元组」
'3.1416 - 0.141600 = 3'
```

`input()` 函数的行为接近 C++ 中的 `getline()`，即将一整行作为字符串读入，且末尾没有换行符，但在算法竞赛中，常见的输入形式是一行输入多个数值，因此就需要使用字符串的 `split()` 方法并搭配列表推导式得到存放数值类型的列表，下面以输入 n 个数求平均值为例演示输入 n 个数得到「数组」的方法：

```python
>>> s = input('请输入一串数字: '); s  # 自己调试时可以向 input() 传入字符串作为提示
请输入一串数字: 1 2 3 4 5 6
'1 2 3 4 5 6'
>>> a = s.split(); a
['1', '2', '3', '4', '5', '6']
>>> a = [int(x) for x in a]; a
[1, 2, 3, 4, 5, 6]
>>> # 以上输入过程可写成一行 a = [int(x) for x in input().split()]
>>> sum(a) / len(a)  # sum() 是内置函数
3.5
```

有时题目会在每行输入固定几个数，比如边的起点、终点、权重，如果只用上面提到的方法就只能每次读入数组然后根据下标赋值，这时可以使用 Python 的「拆包」特性一次赋值多个变量：

```python
>>> u, v, w = [int(x) for x in input().split()]
1 2 4
>>> print(u,v,w)
1 2 4
```

题目中经常遇到输入 N 行的情况，可我们还没有讲最基本的循环语句，但 Python 强大的序列操作能在不使用循环的情况下应对多行输入，下面假设将各条边的起点、终点、权值分别读入三个数组：

```python
>>> N = 4; mat = [[int(x) for x in input().split()] for i in range(N)]
1 3 3
1 4 1
2 3 4
3 4 1
>>> mat  # 先按行读入二维数组
[[1, 3, 3], [1, 4, 1], [2, 3, 4], [3, 4, 1]]
>>> u, v, w = map(list, zip(*mat))
# *将 mat 解包得到里层的多个列表
# zip() 将多个列表中对应元素聚合成元组，得到一个迭代器
# map(list, iterable) 将序列中的元素（这里为元组）转成列表
>>> print(u, v, w)  # 直接将 map() 得到的迭代器拆包，分别赋值给 u, v, w
[1, 1, 2, 3] [3, 4, 3, 4] [3, 1, 4, 1]
```

上述程序实际上相当于先读入一个 N 行 3 列的矩阵，然后将其转置成 3 行 N 列的矩阵，也就是外层列表中嵌套了 3 个列表，最后将代表这起点、终点、权值的 3 个列表分别赋值给 u, v, w。内置函数 [`zip()`](https://docs.python.org/zh-cn/3/library/functions.html#zip) 可以将多个等长序列中的对应元素拼接在「元组」内，得到新序列。而 `map()` 其实是函数式编程的一种操作，它将一个给定函数作用于 `zip()` 所产生序列的元素，这里就是用 `list()` 将元组变成列表。你可以自行练习使用 `*` 和 [`zip()`](https://docs.python.org/zh-cn/3/library/functions.html#zip)，[`map()`](https://docs.python.org/zh-cn/3/library/functions.html#map) 以理解其含义。需要注意的是 Python 3 中 `zip()` 和 `map()` 创建的不再返回列表而是返回迭代器，这里暂不解释它们之间的异同，你可以认为迭代器可以产生列表中的各个元素，用 `list()` 套住迭代器就能生成列表。

### [控制流程](https://docs.python.org/zh-cn/3/tutorial/controlflow.html)

尽管我们已经学习了 Python 的许多特性，但到目前为止我们展示的 Python 代码都是单行语句，这掩盖了 Python 和 C 在代码风格上的重大差异：首先，Python 中不用 `{}` 而是用缩进表示块结构，如果缩进没有对齐会直接报错，如果 tab 和 空格混用也会报错；其次，块结构开始的地方比如 `if` 和 `for` 语句的行末要有冒号 `:`。这有助于代码的可读性，但你也可能怀念 C 那种自由的体验，毕竟如果复制粘贴时因为丢失缩进而不得不手动对齐是很恼人的。

#### 循环结构

列表推导式能在一行内高效地完成批量操作，但有时为了压行我们已经显得过分刻意，许多场景下还是只能使用循环结构，所以我们再以读入多行数据为例展示 Python 中的循环是如何编写的：

```python
# 请注意从现在开始我们不再使用 REPL，请自行复制多行数据
u, v, w = ([] for i in range(3))  # 多变量赋值
for i in range(4):  # 这里假设输入 4 行数据
    _u, _v, _w = [int(x) for x in input().split()]
    u.append(_u), v.append(_v), w.append(_w)
    # 不可进行类似 cin >> u[i] >> v[i] >> w[i] 的操作，因为必定超出列表当前的长度
    # 当然你可以选择初始化长度为 MAXN 的全 0 列表，不过需要记住真实长度并删掉多余元素
print(u, v, w)
```

需要注意，Python 中的 for 循环和 C/C++ 有较大的差别，其作用类似 C++ 11 引入的 [「基于范围的循环」](./new.md#基于范围的-for-循环)，实质是迭代序列中的元素，比如编写循环遍历数组下标需要迭代 `range(len(lst))`，而非真正定义起始和终止条件，所以使用起来并没有 C/C++ 灵活。

下面再用 while 循环展示行数不定的情况下如何输入：

```python
u, v, w = [], [], []  # 多变量赋值，其实同上
s = input()  # 注意 Python 中赋值语句不能放在条件表达式中
while s:  # 不能像 C 那样 while(!scanf())
    # 用切片拼接避免了 append()，注意列表推导式中又嵌套了列表
    u[len(u):], v[len(v):], w[len(w):] = [[int(x)] for x in s.split()]
    s = input()
# Python 3.8 引入了 walrus operator 海象运算符后，你可以节省两行，但考场环境很可能不支持
while s := input():
    u[len(u):], v[len(v):], w[len(w):] = [[int(x)] for x in s.split()]
print(u, v, w)
```

#### 选择结构

和 C/C++ 大同小异，一些形式上的差别都在下面的示例中有所展示，此外还需注意条件表达式中不允许使用赋值运算符（Python 3.8 以上可用 [`:=`](https://www.python.org/dev/peps/pep-0572/)），以及 [没有 swicth 语句](https://docs.python.org/zh-cn/3/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python)。

```python
# 条件表达式两侧无括号
if 4 >= 3 > 2 and 3 != 5 == 5 != 7:
    print("关系运算符可以连续使用")
    x = None or [] or -2
    print("&&  ||  !", "与  或  非", "and or not", sep='\n')
    print("善用 and/or 可节省行数")
    if not x:
        print("负数也是 True，不执行本句")
    elif x & 1:
        print("用 elif 而不是 else if\n"
        "位运算符与 C 相近，偶数&1 得 0，不执行本句")
    else:
        print("也有三目运算符") if x else print("注意结构")
```

#### 异常处理

尽管 C++ 中有 [try 块](https://zh.cppreference.com/w/cpp/language/try_catch) 用于异常处理，但竞赛中一般从不使用，而 Python 中常见的是 [EAFP](https://docs.python.org/zh-cn/3/glossary.html#term-eafp) 风格，故而代码中可能大量使用 [`try-except`](https://docs.python.org/zh-cn/3/reference/compound_stmts.html#the-try-statement) 语句，在后文介绍 `dict` 这一结构时还会用到，这里展示：

```python
s = "OI-wiki"
pat = "NOIP"
x = s.find(pat)  # find() 找不到返回 -1
try:
    y = s.index(pat)  # index() 找不到则抛出错误
    print(y)  # 这句被跳过
except ValueError:
    print("没找到")
    try:
        print(y)  # 此时 y 并没有定义，故又会抛出错误
    except NameError as e:
        print("无法输出 y")
        print("原因:", e)
```

#### [文件读写](https://docs.python.org/3/reference/compound_stmts.html#the-with-statement)

Python 内置函数 [`open()`](https://docs.python.org/3/library/functions.html#open) 用于文件读写，为了防止读写过程中出错导致文件未被正常关闭，这里只介绍使用 [`with`](https://docs.python.org/3/reference/compound_stmts.html#the-with-statement) 语句的安全读写方法：

```python
a = []
with open('in.txt') as f:
    N = int(f.readline())  # 读入第一行的 N
    a[len(a):] = [[int(x) for x in f.readline().split()] for i in range(N)]

with open('out.txt', 'w') as f:
    f.write('1\n')
```

关于文件读写的函数有很多，分别适用于不同的场景，由于 OI 赛事尚不支持使用 Python，这里从略。

### 内置容器

Python 内置了许多强大的容器类型，只有熟练使用并了解其特点才能真正让 Python 在算法竞赛中有用武之地，除了上面详细介绍的 `list`（列表），还有 `tuple`（元组）、[`dict`](https://docs.python.org/zh-cn/3/library/stdtypes.html#mapping-types-dict)（字典）和 `set`（集合）这几种类型。

元组可以简单理解成不可变的列表，不过还需注意「不可变」的内涵，如果元组中的某元素是可变类型比如列表，那么仍可以修改该列表的值，元组中存放的是对列表的引用所以元组本身并没有改变。元组的优点是开销较小且「[可哈希](https://docs.python.org/zh-cn/3/glossary.html)」，后者在创建字典和集合时非常有用。

```python
tup = tuple([[1,2], 4])  # 由列表得到元组
# 等同于 tup = ([1,2], 4)
tup[0].append(3)
print(tup)
a, b = 0, "I-Wiki"  # 多变量赋值其实是元组拆包
print(id(a), id(b))
b, a = a, b
print(id(a), id(b))  # 你应该会看到 a, b 的 id 值现在互换了
# 这更说明 Python 中，变量更像是名字，赋值只是让其指代对象
```

字典就像 C++ STL 中的 [`map`](./csl/associative-container.md#map)（请注意和 Python 中内置函数 [`map()`](https://docs.python.org/zh-cn/3/library/functions.html#map) 区分）用于存储键值对，形式类似 [JSON](https://docs.python.org/3/library/json.html)，但 JSON 中键必须是字符串且以双引号括住，字典则更加灵活强大，可哈希的对象都可作为字典的键。需要注意 Python 几次版本更新后字典的特性有了较多变化，包括其中元素的顺序等，请自行探索。

```python
dic = {'key': "value"}  # 基本形式
dic = {chr(i): i for i in range(65, 91)}  # 大写字母到对应 ASCII 码的映射，注意断句
dic = dict(zip([chr(i) for i in range(65, 91)], range(65,91)))  # 效果同上
dic = {dic[k]: k for k in dic}  # 将键值对逆转，for k in dic 迭代其键
dic = {v: k for k, v in dic.items()}  # 和上行作用相同，dic.items() 以元组存放单个键值对
dic = {k: v for k, v in sorted(dic.items(), key=lambda x:-x[1])}  # 字典按值逆排序，用到了 lambda 表达式

print(dic['A'])  # 返回 dic 中 以 'A' 为键的项，这里值为65
dic['a'] = 97  # 将 d[key] 设为 value，字典中原无 key 就是直接插入
if 'b' in dic:  # LBYL(Look Before You Leap) 风格
    print(dic['b'])  # 若字典中无该键则会出错，故先检查
else:
    dic['b'] = 98

# 经典场景 统计出现次数
# 新键不存在于原字典，需要额外处理
try:  # EAFP (Easier to Ask for Forgiveness than Permission) 风格
    cnter[key] += 1
except KeyError:
    cnter[key] = 1
```

集合就像 C++ STL 中的 [`set`](./csl/associative-container.md#set)，不会保存重复的元素，可以看成只保存键的字典。需要注意集合和字典都用 `{}` 括住，不过单用 `{}` 会创建空字典而不是空集合，这里就不再给出示例。

### 编写函数

Python 中定义函数无需指定参数类型和返回值类型，无形中为 OI 选手减少了代码量

```python
def add(a, b):
    return a + b  # 动态类型的优势，a和b也可以是字符串


def add_no_swap(a, b):
    print('in func #1:', id(a), id(b))
    a += b
    b, a = a, b
    print('in func #2:', id(a), id(b))  # a, b 已交换
    return a, b  # 返回多个值，其实就是返回元组，可以拆包接收


lst1 = [1, 2]; lst2 = [3, 4]
print('outside func #1:', id(lst1), id(lst2))
add_no_swap(lst1, lst2)
# 函数外 lst1, lst2 并未交换
print('outside func #2:', id(lst1), id(lst2))
# 不过值确实已经改变
print(lst1, lst2)
```

#### 默认参数

Python 中函数的参数非常灵活，有关键字参数、可变参数等，但在算法竞赛中这些特性的用处并不是很大，这里只介绍一下默认参数，因为 C++ 中也有默认参数，且在 Python 中使用默认参数很有可能遇到坑。

```python
def append_to(element, to=[]):
    to.append(element)
    return to

lst1 = append_to(12)
lst2 = append_to(42)
print(lst1, lst2)

# 你可能以为输出是 [12] [42]
# 但运行结果其实是 [12] [12, 42]

# 这是因为默认参数的值仅仅在函数定义的时候赋值一次
# 默认参数的值应该是不可变对象，使用 None 占位是一种最佳实践
def append_to(element, to=None):
    if to is None:
        to = []
    to.append(element)
    return to
```

#### 类型标注

Python 是一个动态类型检查的语言，以灵活但隐式的方式处理类型，Python 解释器仅仅在运行时检查类型是否正确，并且允许在运行时改变变量类型，俗话说「动态类型一时爽，代码重构火葬场」，程序中的一些错误可能在运行时才会暴露：

```python
>>> if False:
...     1 + "two"  # This line never runs, so no TypeError is raised
... else:
...     1 + 2
...
3

>>> 1 + "two"  # Now this is type checked, and a TypeError is raised
TypeError: unsupported operand type(s) for +: 'int' and 'str'
```

Python 3.5 后引入了类型标注，允许设置函数参数和返回值的类型，但只是作为提示，并没有实际的限制作用，需要静态检查工具才能排除这类错误（例如 [PyCharm](https://www.jetbrains.com/pycharm/) 和 [Mypy](http://mypy-lang.org/)），所以显得有些鸡肋，对于 OIer 来说更是只需了解，可按如下方式对函数的参数和返回值设置类型标注：

```python
def headline(
    text,           # type: str
    width = 80,       # type: int
    fill_char = "-",  # type: str
):                  # type: (...) -> str
    return f"{text.title()}".center(width, fill_char)

print(headline("type comments work", width = 40))
```

除了函数参数，变量也是可以类型标注的，你可以通过调用 `__annotations__` 来查看函数中所有的类型标注。变量类型标注赋予了 Python 静态语言的性质，即声明与赋值分离：

```python
>>> nothing: str
>>> nothing
NameError: name 'nothing' is not defined

>>> __annotations__
{'nothing': <class 'str'>}
```

## 装饰器

装饰器是一个函数，接受一个函数或方法作为其唯一的参数，并返回一个新函数或方法，其中整合了修饰后的函数或方法，并附带了一些额外的功能。简而言之，可以在不修改函数代码的情况下，增加函数的功能。相关知识可以参考 [官方文档](https://docs.python.org/3/glossary.html#term-decorator)。

部分装饰器在竞赛中非常实用，比如 [`lru_cache`](https://docs.python.org/3/library/functools.html#functools.lru_cache)，可以为函数自动增加记忆化的能力，在递归算法中非常实用：

`@lru_cache(maxsize=128,typed=False)`

- 传入的参数有 2 个：`maxsize` 和 `typed`，如果不传则 `maxsize` 的默认值为 128，`typed` 的默认值为 `False`。
- 其中 `maxsize` 参数表示的是 LRU 缓存的容量，即被装饰的方法的最大可缓存结果的数量。如果该参数值为 128，则表示被装饰方法最多可缓存 128 个返回结果；如果 `maxsize` 传入为 `None` 则表示可以缓存无限个结果。
- 如果 `typed` 设置为 `True`，不同类型的函数参数将被分别缓存，例如，`f(3)` 和 `f(3.0)` 会缓存两次。

以下是使用 `lru_cache` 优化计算斐波那契数列的例子：

```python
@lru_cache(maxsize = None)
def fib(n):
    if n < 2:
        return n
    return fib(n - 1) + fib(n - 2)
```

## 常用内置库

在这里介绍一些写算法可能用得到的内置库，具体用法可以自行搜索或者阅读 [官方文档](https://docs.python.org/3/library/index.html)。

| 库名                                                                | 用途                         |
| ]]></description>
            <content:encoded><![CDATA[<h1 id="python-速成手册" tabindex="-1">Python 速成手册 <a class="header-anchor" href="#python-速成手册" aria-label="Permalink to &quot;Python 速成手册&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="关于-python" tabindex="-1">关于 Python <a class="header-anchor" href="#关于-python" aria-label="Permalink to &quot;关于 Python&quot;">&ZeroWidthSpace;</a></h2>
<p>Python 是一门已在世界上广泛使用的解释型语言。它提供了高效的高级数据结构，还能简单有效地面向对象编程，也可以在算法竞赛。</p>
<h3 id="python-的优点" tabindex="-1">Python 的优点 <a class="header-anchor" href="#python-的优点" aria-label="Permalink to &quot;Python 的优点&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>是一门 <strong>解释型</strong> 语言：Python 不需要编译和链接，可以在一定程度上减少操作步骤。</li>
<li>是一门 <strong>交互式</strong> 语言：Python 解释器实现了交互式操作，可以直接在终端输入并执行指令。</li>
<li><strong>易学易用</strong>：Python 提供了大量的数据结构，也支持开发大型程序。</li>
<li><strong>兼容性强</strong>：Python 同时支持 Windows、macOS 和 Unix 操作系统。</li>
<li><strong>实用性强</strong>：从简单的输入输出到科学计算甚至于大型 WEB 应用，都可以写出适合的 Python 程序。</li>
<li><strong>程序简洁、易读</strong>：Python 代码通常比实现同种功能的其他语言的代码短。</li>
<li><strong>支持拓展</strong>：Python 会开发 C 语言程序（即 CPython），支持把 Python 解释器和用 C 语言开发的应用链接，用 Python 扩展和控制该应用。</li>
</ul>
<h3 id="学习-python-的注意事项" tabindex="-1">学习 Python 的注意事项 <a class="header-anchor" href="#学习-python-的注意事项" aria-label="Permalink to &quot;学习 Python 的注意事项&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>目前主要使用的 Python 版本是 Python 3.7 及以上的版本，Python 2 和 Python 3.6 及以前的 Python 3 已经 <a href="https://devguide.python.org/versions/#unsupported-versions" target="_blank" rel="noreferrer">不被支持</a>，但仍被一些老旧系统与代码所使用。本文将 <strong>介绍较新版本的 Python</strong>。如果遇到 Python 2 代码，可以尝试 <a href="https://docs.python.org/zh-cn/3/library/2to3.html" target="_blank" rel="noreferrer"><code>2to3</code></a> 程序将 Python 2 代码转换为 Python 3 代码。</li>
<li>Python 的设计理念和语法结构 <strong>与一些其他语言的差异较大</strong>，隐藏了许多底层细节，所以呈现出实用而优雅的风格。</li>
<li>Python 是高度动态的解释型语言，因此其 <strong>程序运行速度相对较慢</strong>，尤其在使用其内置的 <code>for</code> 循环语句时。在使用 Python 时，应尽量使用 <code>filter</code>、<code>map</code> 等内置函数，或使用 <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" target="_blank" rel="noreferrer">列表生成</a> 语法的手段来提高程序性能。</li>
</ul>
<h2 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">&ZeroWidthSpace;</a></h3>
<p>访问 <a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">https://www.python.org/downloads/</a> 下载自己需要的版本并安装。
为了方便，请务必勾选复选框 <code>Add Python 3.x to PATH</code> 以将 Python 加入环境变量。</p>
<p>如下图，在 Python 3.7.4 版本的安装界面中，应勾选最后一项复选框。</p>
<p>安装完成后，可以在开始菜单找到安装好的 Python。</p>
<p>此外，可以在命令提示符中运行 Python。</p>
<p>正常启动 Python 解释器后，它会先显示欢迎信息等内容，之后就会出现提示符 <code>&gt;&gt;&gt;</code>，大致如下所示：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Python </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.1 (tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">v3.10.1:</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">2cd268a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, Dec  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2021</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">37</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">MSC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> v.1929 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> bit (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">AMD64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)] on win32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"help"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"copyright"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"credits"</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "license"</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> more information.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span></span></code></pre>
</div><p>此外，也可以在 Microsoft Store 中免费而快捷地获取 Python。</p>
<h3 id="macos-linux" tabindex="-1">macOS/Linux <a class="header-anchor" href="#macos-linux" aria-label="Permalink to &quot;macOS/Linux&quot;">&ZeroWidthSpace;</a></h3>
<p>通常情况下，大部分的 Linux 发行版中已经自带了 Python。如果只打算学习 Python 语法，并无其它开发需求，不必另外安装 Python。</p>
<div class="warning custom-block"><p class="custom-block-title">注意</p>
<p>在一些默认安装（指使用软件包管理器安装）Python 的系统（如 Unix 系统）中，应在终端中运行 <code>python3</code> 打开 Python 3 解释器。[1]</p>
</div>
<p>如果发行版自带 Python 版本过旧，可自行下载编译最新版本的 Python。此外，也可以通过 venv、conda、Nix 等工具管理 Python 工具链和 Python 软件包，创建隔离的虚拟环境，避免出现依赖问题。</p>
<p>作为一种解释型语言，Python 的执行方式和 C++ 有所不同，这种差异在使用 IDE 编程时往往得不到体现，因此这里需要强调一下运行程序的不同方式。</p>
<p>当在命令行中键入 <code>python3</code> 或刚刚打开 IDLE 时，你实际进入了一种交互式的编程环境，也称「REPL」（「读取 - 求值 - 输出」循环），初学者可以在这里输入语句并立即看到结果，这让验证一些语法变得极为容易，我们也将在后文中大量使用这种形式。</p>
<p>但若要编写完整的程序，你最好还是新建一个文本文件（通常后缀为 <code>.py</code>），然后在命令行中执行 <code>python3 filename.py</code>，就能够运行代码看到结果了。</p>
<h3 id="通过镜像下载安装文件" tabindex="-1">通过镜像下载安装文件 <a class="header-anchor" href="#通过镜像下载安装文件" aria-label="Permalink to &quot;通过镜像下载安装文件&quot;">&ZeroWidthSpace;</a></h3>
<p>目前国内关于 <strong>源码</strong> 的镜像缓存主要是 <a href="https://mirror.bjtu.edu.cn/python/" target="_blank" rel="noreferrer">北京交通大学自由与开源软件镜像站</a> 和 <a href="https://repo.huaweicloud.com/python/" target="_blank" rel="noreferrer">华为开源镜像站</a>，可以到那里尝试下载 Python 安装文件。</p>
<h2 id="使用-pip-安装第三方库" tabindex="-1">使用 <code>pip</code> 安装第三方库 <a class="header-anchor" href="#使用-pip-安装第三方库" aria-label="Permalink to &quot;使用 `pip` 安装第三方库&quot;">&ZeroWidthSpace;</a></h2>
<p>Python 的生命力很大程度上来自于丰富的第三方库，编写一些实用程序时「调库」是常规操作，<code>pip</code> 是首选的安装第三方库的程序。自 Python 3.4 版本起，它被默认包含在 Python 二进制安装程序中。</p>
<p><code>pip</code> 中的第三方库主要存储在 <a href="https://pypi.org/" target="_blank" rel="noreferrer">Python 包索引（PyPI）</a> 上，用户也可以指定其它第三方库的托管平台。使用方法可参照 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noreferrer">pypi 镜像使用帮助 - 清华大学开源软件镜像站</a>、<a href="http://mirrors.ustc.edu.cn/help/pypi.html" target="_blank" rel="noreferrer">PyPI 镜像源使用帮助—中国科学技术大学镜像站</a> 等使用帮助。你可以在 <a href="https://mirrorz.org/list/pypi" target="_blank" rel="noreferrer">MirrorZ</a> 上获取更多 PyPI 镜像源。</p>
<h2 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">&ZeroWidthSpace;</a></h2>
<p>Python 的语法简洁而易懂，也有许多官方和第三方文档与教程。这里仅介绍一些对 OIer 比较实用的语言特性，你可以在 <a href="https://docs.python.org/zh-cn/3/" target="_blank" rel="noreferrer">Python 文档</a> 和 <a href="https://wiki.python.org/moin/" target="_blank" rel="noreferrer">Python Wiki</a> 等网页上了解更多关于 Python 的教程。</p>
<h3 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to &quot;注释&quot;">&ZeroWidthSpace;</a></h3>
<p>加入注释并不会对代码的运行产生影响，但加入注释可以使代码更加易懂易用。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 用 # 字符开头的是单行注释</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"""</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">跨多行字符串会用三引号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">（即三个单引号或三个双引号）</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">包裹，但也通常被用于注释</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"""</span></span></code></pre>
</div><p>加入注释代码并不会对代码产生影响。我们鼓励加入注释来使代码更加易懂易用。</p>
<h3 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="一切皆对象" tabindex="-1">一切皆对象 <a class="header-anchor" href="#一切皆对象" aria-label="Permalink to &quot;一切皆对象&quot;">&ZeroWidthSpace;</a></h4>
<p>在 Python 中，你无需事先声明变量名及其类型，直接赋值即可创建各种类型的变量：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 语句结尾不用加分号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3.1415926535897932384626</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; f  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 实在想加分号也可以，这里节省了一行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.141592653589793</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "O"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 怎么显示成单引号了？有区别吗？</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'O'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'A'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 65</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 明明在 C/C++ 中是成立的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> b  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 与众不同的是 True, False 首字母均大写，可能与内置常量的命名约定有关</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">False</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> True</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> False</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # Python 可能喜欢单词胜过符号</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span></span></code></pre>
</div><p>但这不代表 Python 没有类型的概念，实际上解释器会根据赋值或运算自动推断变量类型，你可以使用内置函数 <code>type()</code> 查看这些变量的类型：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'int'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(f)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'float'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s1)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 请注意，不要给字符串起名为 str，不信试试看是否真的可以这么做</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'str'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(b)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'bool'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span></code></pre>
</div><div class="info custom-block"><p class="custom-block-title">&quot;<a href="https://docs.python.org/zh-cn/3/library/functions.html" target="_blank" rel="noreferrer"><strong>内置函数</strong></a> 是什么？&quot;</p>
<p>在 C/C++ 中，很多常用函数都分散在不同的头文件中，但 Python 的解释器内置了许多实用且通用的函数，你可以直接使用而无需注意它们的存在，但这也带来了小问题，这些内置函数的名称多为常见单词，你需要注意避免给自己的变量起相同的名字，否则可能会产生奇怪的结果。</p>
</div>
<p>正如我们所看到的，Python 内置有整数、浮点数、字符串和布尔类型，可以类比为 C++ 中的 <code>int</code>，<code>float</code>，<code>string</code> 和 <code>bool</code>。但有一些明显的不同之处，比如没有 <code>char</code> 字符类型，也没有 <code>double</code> 类型（但 <code>float</code> 其实对应 C 中的双精度），如果需要更精确的浮点运算，可以使用标准库中的 <a href="https://docs.python.org/zh-cn/3/library/decimal.html" target="_blank" rel="noreferrer">decimal</a> 模块，如果需要用到复数，Python 还内置了 <code>complex</code> 类型（而这也意味着最好不要给变量起名为 <code>complex</code>）。
可以看到这些类型都以 <code>class</code> 开头，而这正是 Python 不同于 C++ 的关键之处，Python 程序中的所有数据都是由对象或对象间关系来表示的，函数是对象，类型本身也是对象：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'type'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 求幂次的内置函数，后文会介绍</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'builtin_function_or_method'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># type() 也是内置函数，但有些特殊，感兴趣可自行查阅</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'type'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span></code></pre>
</div><p>你或许会觉得这些概念一时难以理解且没有用处，所以我们暂时不再深入，在后文的示例中你或许能慢慢体会到，Python 的对象提供了强大的方法，我们在编程时应当优先考虑围绕对象而不是过程进行操作，这会让我们的代码显得更加紧凑明晰。</p>
<h4 id="数字运算" tabindex="-1">数字运算 <a class="header-anchor" href="#数字运算" aria-label="Permalink to &quot;数字运算&quot;">&ZeroWidthSpace;</a></h4>
<p>有人说，你可以把你系统里装的 Python 当作一个多用计算器，这是事实。<br>
在交互模式下，你可以在提示符 <code>&gt;&gt;&gt;</code> 后面输入一个表达式，就像其他大部分语言（如 C++）一样使用运算符 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code> 来对数字进行运算，也可以使用 <code>()</code> 来进行符合结合律的分组，读者可以自行试验，在这里我们仅展示与 C++ 差异较大的部分：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 6</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 浮点数的运算结果是浮点数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">30.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 与 C/C++ 不同，除法永远返回浮点 float 类型</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 100000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 位数太多，结果显示成科学计数法形式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5e-05</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> //</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 使用整数除法（地板除）则会向下取整，输出整数类型</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> //</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 符合向下取整原则，注意这与 C/C++ 不同</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> %</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 取模</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> %</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 负数取模结果一定是非负数，这点也与 C/C++ 不同，不过都满足 (a//b)*b+(a%b)==a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1e4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 求绝对值的内置函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 没有自增/自减运算符</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 科学计数法默认为 float</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">10001.0</span></span></code></pre>
</div><p>在上面的实践中可以发现，除法运算（<code>/</code>）永远返回浮点类型（在 Python 2 中返回整数）。如果你想要整数或向下取整的结果的话，可以使用整数除法（<code>//</code>）。同样的，你也可以像 C++ 中一样，使用模（<code>%</code>）来计算余数，科学计数法的形式也相同。</p>
<p>特别地，Python 用 <code>**</code> 即可进行幂运算，还通过内置的 <code>pow(a, b, mod)</code> 提供了 <a href="./../math/binary-exponentiation.html">快速幂</a> 的高效实现。</p>
<p>Python 的字符串类型包含 Unicode 字符，这意味着任何字符串都会存储为 Unicode。[2]在 Python 中，可以对一个 Unicode 字符使用内置函数 <code>ord()</code> 将其转换为对应的 Unicode 编码，逆向的转换使用内置函数 <code>chr()</code>。</p>
<p>如果想把数转换为对应的字符串，可使用 Python 内置函数 <code>str()</code>，也可以使用 f-string 实现；反之，可以使用 <code>int()</code> 和 <code>float()</code> 两个函数。</p>
<p>Python 的字符串类型还有 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#text-sequence-type-str" target="_blank" rel="noreferrer">许多方便的功能</a>。由于本文篇幅有限，这里不一一介绍。</p>
<h4 id="数据类型判断" tabindex="-1">数据类型判断 <a class="header-anchor" href="#数据类型判断" aria-label="Permalink to &quot;数据类型判断&quot;">&ZeroWidthSpace;</a></h4>
<p>对于一个变量，可以使用 <code>type(object)</code> 返回变量的类型，例如 <code>type(8)</code> 和 <code>type('a')</code> 的值分别为 <code>&lt;class 'int'&gt;</code> 和 <code>&lt;class 'str'&gt;</code>。</p>
<h3 id="输出和输入" tabindex="-1">输出和输入 <a class="header-anchor" href="#输出和输入" aria-label="Permalink to &quot;输出和输入&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">&ZeroWidthSpace;</a></h4>
<p>对于一个变量，可以使用 <code>type(object)</code> 返回变量的类型，例如 <code>type(8)</code> 和 <code>type('a')</code> 的值分别为 <code>&lt;class 'int'&gt;</code> 和 <code>&lt;class 'str'&gt;</code>。</p>
<p>Python 中，还可以使用 <code>**</code> 运算符和内置的 <code>pow(base, exp, mod=None)</code> 函数进行幂运算，使用 <code>abs(x)</code> 求数的绝对值。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> **</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 幂运算</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">81</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> **</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 512</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1e4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 即 2**512 % 10000 的快速实现, 1e4 是 float 所以要转 int</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4096</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2048</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> **</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2048</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 在IDLE里试试大整数？</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0.3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 和 C/C++ 一样需要注意浮点数不能直接判相等</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">False</span></span></code></pre>
</div><h4 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">&ZeroWidthSpace;</a></h4>
<p>Python 3 提供了强大的基于 <a href="https://docs.python.org/zh-cn/3/howto/unicode.html#unicode-howto" target="_blank" rel="noreferrer">Unicode</a> 的字符串类型，使用起来和 C++ 中的 string 类似，一些概念如转义字符也都相通，除了加号拼接和索引访问，还额外支持数乘 <code>*</code> 重复字符串，和 <code>in</code> 操作符。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "O"</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 单引号和双引号都能包起字符串，有时可节省转义字符</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'I-Wiki'</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 为和 C++ 同步建议使用双引号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'OI'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 检测子串很方便</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s1)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 类似 C++ 的 s.length()，但更通用</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> """ 感谢你的阅读</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">... 欢迎参与贡献!</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"""</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">   # 使用三重引号的字符串可以跨越多行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'OI-Wiki 感谢你的阅读</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">欢迎参与贡献!'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这里使用了 print() 函数打印字符串</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">OI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Wiki 感谢你的阅读</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">欢迎参与贡献!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s2[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 负数索引从右开始计数，加上len(s)，相当于模n的剩余类环</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'谢谢你!'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'o'</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # str 是不可变类型，不能原地修改，其实 += 也是创建了新的对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Traceback (most recent call last):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  File </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"&#x3C;stdin>"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, line </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> &#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">module</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">TypeError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'str'</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> does </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> support item assignment</span></span></code></pre>
</div><p>Python 支持多种复合数据类型，可将不同值组合在一起。最常用的 <code>list</code>，类型是用方括号标注、逗号分隔的一组值。例如，<code>[1, 2, 3]</code> 和 <code>['a','b','c']</code> 都是列表。</p>
<p>除了索引，字符串还支持<em>切片</em>，它的设计非常精妙又符合直觉，格式为 <code>s[左闭索引:右开索引:步长]</code>：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'OI-Wiki 感谢你的阅读</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">欢迎参与贡献!'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s[:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 省略左闭索引则从头开始</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'OI-Wiki '</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 左闭右开设计的妙处，长度恰好为14-8=6，还和上一个字符串无缝衔接</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'感谢你的阅读'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 省略右开索引则直到结尾</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'与贡献!'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 步长为2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'感你阅'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s[::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 步长为 -1 时，获得了反转的字符串</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'!献贡与参迎欢</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">读阅的你谢感 ikiW-IO'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 但原来的字符串并未改变</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'OI-Wiki 感谢你的阅读</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">欢迎参与贡献!'</span></span></code></pre>
</div><p>C/C++ 中 <code>char</code> 类型可以和 对应的 ASCII 码互转，而在 Python 中你可以对一个 Unicode 字符使用内置函数 <code>ord()</code> 将其转换为对应的 Unicode 编码，逆向的转换使用内置函数 <code>chr()</code>。</p>
<p>如果想把数字转换成对应的字符串，可以使用内置函数 <code>str()</code>，反之可以使用 <code>int()</code> 和 <code>float()</code>，你可以类比为 C/C++ 中的强制类型转换，但括号不是加在类型上而是作为函数的一部分括住参数。</p>
<p>Python 的字符串类型提供了许多强大的方法，包括计算某字符的索引与出现次数，转换大小写等等，这里就不一一列举，强烈建议查看 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#text-sequence-type-str" target="_blank" rel="noreferrer">官方文档</a> 熟悉常用方法，遇到字符串操作应当首先考虑使用这些方法而非自力更生。</p>
<h3 id="开数组" tabindex="-1">开数组 <a class="header-anchor" href="#开数组" aria-label="Permalink to &quot;开数组&quot;">&ZeroWidthSpace;</a></h3>
<p>从 C++ 转过来的同学可能很迷惑怎么在 Python 中开数组，这里就介绍在 Python 开「数组」的语法，需要强调我们介绍的其实是几种 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator-types" target="_blank" rel="noreferrer">序列类型</a>，和 C 的数组有着本质区别，而更接近 C++ 中的 <code>vector</code>。</p>
<h4 id="使用-list" tabindex="-1">使用 <code>list</code> <a class="header-anchor" href="#使用-list" aria-label="Permalink to &quot;使用 `list`&quot;">&ZeroWidthSpace;</a></h4>
<p>列表（<code>list</code>）大概是 Python 中最常用也最强大的序列类型，列表中可以存放任意类型的元素，包括嵌套的列表，这符合数据结构中「广义表」的定义。请注意不要将其与 C++ STL 中的双向链表 <a href="./csl/sequence-container.html#list"><code>list</code></a> 混淆，故本文将使用「列表」而非 <code>list</code> 以免造成误解。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> []  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 创建空列表，注意列表使用方括号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]; nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 初始化列表，注意整个列表可以直接打印</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 支持索引访问，还支持修改元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.append(nums[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">nums[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># append() 同 vector 的 push_back()，也都没有返回值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.pop()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 弹出并返回末尾元素，可以当栈使用；其实还可指定位置，默认是末尾</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">21</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.insert(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 同 vector 的 insert(position, val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.remove(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 按值移除元素（只删第一个出现的），若不存在则抛出错误</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(nums)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 求列表长度，类似 vector 的 size()，但 len() 是内置函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.reverse(); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 原地逆置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(nums)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 获得排序后的列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 但原来的列表并未排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.sort(); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 原地排序，可以指定参数 key 作为排序标准</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.count(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 类似 std::count()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.index(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 返回值首次出现项的索引号，若不存在则抛出错误</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums.clear(); nums  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 同 vector 的 clear()</span></span></code></pre>
</div><p>以上示例展现了列表与 <code>vector</code> 的相似之处，<code>vector</code> 中常用的操作一般也都能在列表中找到对应方法，不过某些方法如 <code>len()</code>,<code>sorted()</code> 会以内置函数的面目出现，而 STL 算法中的函数如 <code>find()</code>,<code>count()</code>,<code>max_element()</code>,<code>sort()</code>,<code>reverse()</code> 在 Python 中又成了对象的方法，使用时需要注意区分，更多方法请参见官方文档的 <a href="https://docs.python.org/zh-cn/3/tutorial/datastructures.html#more-on-lists" target="_blank" rel="noreferrer">列表详解</a>。下面将展示列表作为 Python 的基本序列类型的一些强大功能：</p>
<p>Python 支持多种复合数据类型，可将不同值组合在一起。最常用的 <code>list</code>，类型是用方括号标注、逗号分隔的一组值。例如，<code>[1, 2, 3]</code> 和 <code>['a','b','c']</code> 都是列表。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"2"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 列表直接相加生成一个新列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这里存放不同的类型只是想说明可以这么做，但这不是好的做法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'2'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 实用的成员检测操作，字符串也有该操作且还支持子串检测</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 仅支持单个成员检测，不会发现「子序列」</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">False</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]; lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 切片并赋值，原列表被修改</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst[::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 获得反转后的新列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 数乘拼接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:]; lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 也可写 lst[4:] = []，del 语句不止可以用于删除序列中元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span></code></pre>
</div><p>以上示例展现了列表作为序列的一些常用操作，可以看出许多操作如切片是与字符串相通的，但字符串是「不可变序列」而列表是「可变序列」，故可以通过切片灵活地修改列表。在 C/C++ 中我们往往会通过循环处理字符数组，下面将展示如何使用 <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" target="_blank" rel="noreferrer">「列表推导式」</a> 在字符串和列表之间转换：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 建立一个 [65, 70) 区间上的整数数组，range 也是一种类型，可看作左闭右开区间，第三个参数为步长可省略</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 记得 range 外面还要套一层 list()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">66</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">67</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">68</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">69</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">chr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nums]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 列表推导式的典型结构，[exp for var in iterable if cond]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lst  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 上两句可以合并成 [str(x) for x in range(65,70)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'A'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'B'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'C'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'D'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'E'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ''</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.join(lst); s </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 用空字符串 '' 拼接列表中的元素生成新字符串</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'ABCDE'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 字符串生成字符列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'A'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'B'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'C'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'D'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'E'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 如果你不知道有 s.lower() 方法就可能写出下面这样新瓶装旧酒的表达式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ''</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.join([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">chr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">ord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(ch) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 65</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'A'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'Z'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'abcde'</span></span></code></pre>
</div><p>下面演示一些在 OI 中更常见的场景，比如二维「数组」：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 开一个3*3的全0数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; vis  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 怎么会把其他行也修改了？</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 先来看下一维列表的赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]; a2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1; a3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[:]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 列表也可以直接被赋给新的变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; a1  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 修改列表 a1，似乎正常</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a2  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 怎么 a2 也被改变了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a3  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># a3 没有变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a1) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a2) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a1) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a3)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 内置函数 id() 给出对象的「标识值」，可类比为地址，地址相同说明是一个对象</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis[:];  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 拷贝一份二维列表看看</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; vis  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># vis 肯定还是被批量修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis2  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 但 vis2 是切片拷贝的怎么还是被改了</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(vis) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(vis2)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># vis 和 vis2 确实不是一个对象啊</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 谜底揭晓，vis2 虽然不是 vis 的引用，但其中对应行都指向相同的对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(vis[i]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(vis2[i]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 回看二维列表自身</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 具体数字和这里不一样但三个值一定相同，说明是三个相同对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139760373248192</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139760373248192</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139760373248192</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span></code></pre>
</div><p>其实我们一直隐瞒了一个重要事实，Python 中赋值只传递了引用而非创建新值，你可以创建不同类型的变量并赋给新变量，验证发现二者的标识值是相同的，只不过直到现在我们才介绍了列表这一种可变类型，而给数字、字符串这样的不可变类型赋新值时实际上创建了新的对象，故而前后两个变量互不干扰。但列表是可变类型，所以我们修改一个列表的元素时，另一个列表由于指向同一个对象所以也被修改了。创建二维数组也是类似的情况，示例中用乘法创建二维列表相当于把 <code>[0]*3</code> 这个一维列表重复了 3 遍，所以涉及其中一个列表的操作会同时影响其他两个列表。更不幸的是，在将二维列表赋给其他变量的时候，就算用切片来拷贝，也只是「浅拷贝」，其中的元素仍然指向相同的对象，解决这个问题需要使用标准库中的 <a href="https://docs.python.org/3/library/copy.html" target="_blank" rel="noreferrer"><code>deepcopy</code></a>，或者尽量避免整个赋值二维列表。不过还好，创建二维列表时避免创建重复的列表还是比较简单，只需使用「列表推导式」：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 把用不到的循环计数变量设为下划线 _ 是一种惯例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 但在 REPL 中 _ 默认指代上一个表达式输出的结果，故也可使用双下划线</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis1]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 具体数字和这里不一样但三个值一定不同，说明是三个不同对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139685508981248</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139685508981568</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">139685508981184</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> vis1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 访问和赋值二维数组</span></span></code></pre>
</div><p>我们未讲循环的用法就先介绍了列表推导式，这是由于 Python 是高度动态的解释型语言，因此其程序运行有大量的额外开销。尤其是 <strong>for 循环在 Python 中运行的奇慢无比</strong>。因此在使用 Python 时若想获得高性能，尽量使用使用列表推导式，或者 <code>filter</code>,<code>map</code> 等内置函数直接操作整个序列来避免循环，当然这还是要根据具体问题而定。</p>
<h4 id="使用-numpy" tabindex="-1">使用 NumPy <a class="header-anchor" href="#使用-numpy" aria-label="Permalink to &quot;使用 NumPy&quot;">&ZeroWidthSpace;</a></h4>
<div class="info custom-block"><p class="custom-block-title">&quot;什么是 NumPy&quot;</p>
<p><a href="https://numpy.org/" target="_blank" rel="noreferrer">NumPy</a> 是著名的 Python 科学计算库，提供高性能的数值及矩阵运算。在测试算法原型时可以利用 NumPy 避免手写排序、求最值等算法。NumPy 的核心数据结构是 <code>ndarray</code>，即 n 维数组，它在内存中连续存储，是定长的。此外 NumPy 核心是用 C 编写的，运算效率很高。不过需要注意，它不是标准库的一部分，可以使用 <code>pip install numpy</code> 安装，但不保证 OI 考场环境中可用。</p>
</div>
<p>下面的代码将介绍如何利用 NumPy 建立多维数组并进行访问。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 请自行搜索 import 的意义和用法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np.empty(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 开容量为3的空数组，注意没有初始化为0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0.00000000e+000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0.00000000e+000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2.01191014e+180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np.zeros((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 开 3*3 的数组，并初始化为0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">., </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.]])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np.zeros((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 开3×3的整数数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 访问和赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 更友好的语法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1.shape </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 数组的形状</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 取前两行、前两列构成的子阵，无拷贝</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 获取第 1、3 列，无拷贝</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np.max(a1) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 获取数组最大值</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1.flatten() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 将数组展平</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> np.sort(a1, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 沿行方向对数组进行排序，返回排序结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">array([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">       [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a1.sort(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 沿行方向对数组进行原地排序</span></span></code></pre>
</div><h4 id="使用-array" tabindex="-1">使用 <code>array</code> <a class="header-anchor" href="#使用-array" aria-label="Permalink to &quot;使用 `array`&quot;">&ZeroWidthSpace;</a></h4>
<p><a href="https://docs.python.org/zh-cn/3/library/array.html" target="_blank" rel="noreferrer"><code>array</code></a> 是 Python 标准库提供的一种高效数值数组，可以紧凑地表示基本类型值的数组，但不支持数组嵌套，也很少见到有人使用它，这里只是顺便提一下。</p>
<p>若无特殊说明，后文出现「数组」一般指「列表」。</p>
<h3 id="输入输出" tabindex="-1"><a href="https://docs.python.org/3/tutorial/inputoutput.html" target="_blank" rel="noreferrer">输入输出</a> <a class="header-anchor" href="#输入输出" aria-label="Permalink to &quot;[输入输出](https://docs.python.org/3/tutorial/inputoutput.html)&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 中的输入输出主要通过内置函数 <code>input()</code> 和 <code>print()</code> 完成，<code>print()</code> 的用法十分符合直觉：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 打印时默认末尾换行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(ans[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], ans[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 可以输出任意多个变量，默认以空格间隔</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">''</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 令 end='', 使末尾不换行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">', '</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 令 sep=', '，改变间隔样式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ', '</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 输出同上，但是手动拼接成一整个字符串</span></span></code></pre>
</div><p>算法竞赛中通常只涉及到基本的数值和字符串输出，以上用法基本足够，只有当涉及到浮点数位数时需要用到格式化字符串输出。格式化有三种方法，第一种也是最老旧的方法是使用 <code>printf()</code> 风格的 <code>%</code> 操作符；另一种是利用 <a href="https://docs.python.org/3/library/string.html#formatstrings" target="_blank" rel="noreferrer"><code>format</code> 函数</a>，写起来比较长；第三种是 Python 3.6 新增的 <a href="https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#formatted-string-literals" target="_blank" rel="noreferrer">f-string</a>，最为简洁，但不保证考场中的 Python 版本足够新。详细丰富的说明可以参考 <a href="https://www.python-course.eu/python3_formatted_output.php" target="_blank" rel="noreferrer">这个网页</a>，尽管更推荐使用 <code>format()</code> 方法，但为了获得与 C 接近的体验，下面仅演示与 <code>printf()</code> 类似的老式方法：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3.1415926</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%.4f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pi)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 格式为 %[flags][width][.precision]type</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.1416</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%.4f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> - </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%8f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (pi, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0.1416</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 右边多个参数用 () 括住，后面会看到其实是「元组」</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'3.1416 - 0.141600 = 3'</span></span></code></pre>
</div><p><code>input()</code> 函数的行为接近 C++ 中的 <code>getline()</code>，即将一整行作为字符串读入，且末尾没有换行符，但在算法竞赛中，常见的输入形式是一行输入多个数值，因此就需要使用字符串的 <code>split()</code> 方法并搭配列表推导式得到存放数值类型的列表，下面以输入 n 个数求平均值为例演示输入 n 个数得到「数组」的方法：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'请输入一串数字: '</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">); s  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 自己调试时可以向 input() 传入字符串作为提示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">请输入一串数字: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 6</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1 2 3 4 5 6'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s.split(); a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'2'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'3'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'4'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'5'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'6'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a]; a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"> # 以上输入过程可写成一行 a = [int(x) for x in input().split()]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># sum() 是内置函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3.5</span></span></code></pre>
</div><p>有时题目会在每行输入固定几个数，比如边的起点、终点、权重，如果只用上面提到的方法就只能每次读入数组然后根据下标赋值，这时可以使用 Python 的「拆包」特性一次赋值多个变量：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split()]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u,v,w)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span></span></code></pre>
</div><p>题目中经常遇到输入 N 行的情况，可我们还没有讲最基本的循环语句，但 Python 强大的序列操作能在不使用循环的情况下应对多行输入，下面假设将各条边的起点、终点、权值分别读入三个数组：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; mat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split()] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> mat  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 先按行读入二维数组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">zip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">mat))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># *将 mat 解包得到里层的多个列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># zip() 将多个列表中对应元素聚合成元组，得到一个迭代器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># map(list, iterable) 将序列中的元素（这里为元组）转成列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u, v, w)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 直接将 map() 得到的迭代器拆包，分别赋值给 u, v, w</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span></code></pre>
</div><p>上述程序实际上相当于先读入一个 N 行 3 列的矩阵，然后将其转置成 3 行 N 列的矩阵，也就是外层列表中嵌套了 3 个列表，最后将代表这起点、终点、权值的 3 个列表分别赋值给 u, v, w。内置函数 <a href="https://docs.python.org/zh-cn/3/library/functions.html#zip" target="_blank" rel="noreferrer"><code>zip()</code></a> 可以将多个等长序列中的对应元素拼接在「元组」内，得到新序列。而 <code>map()</code> 其实是函数式编程的一种操作，它将一个给定函数作用于 <code>zip()</code> 所产生序列的元素，这里就是用 <code>list()</code> 将元组变成列表。你可以自行练习使用 <code>*</code> 和 <a href="https://docs.python.org/zh-cn/3/library/functions.html#zip" target="_blank" rel="noreferrer"><code>zip()</code></a>，<a href="https://docs.python.org/zh-cn/3/library/functions.html#map" target="_blank" rel="noreferrer"><code>map()</code></a> 以理解其含义。需要注意的是 Python 3 中 <code>zip()</code> 和 <code>map()</code> 创建的不再返回列表而是返回迭代器，这里暂不解释它们之间的异同，你可以认为迭代器可以产生列表中的各个元素，用 <code>list()</code> 套住迭代器就能生成列表。</p>
<h3 id="控制流程" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/tutorial/controlflow.html" target="_blank" rel="noreferrer">控制流程</a> <a class="header-anchor" href="#控制流程" aria-label="Permalink to &quot;[控制流程](https://docs.python.org/zh-cn/3/tutorial/controlflow.html)&quot;">&ZeroWidthSpace;</a></h3>
<p>尽管我们已经学习了 Python 的许多特性，但到目前为止我们展示的 Python 代码都是单行语句，这掩盖了 Python 和 C 在代码风格上的重大差异：首先，Python 中不用 <code>{}</code> 而是用缩进表示块结构，如果缩进没有对齐会直接报错，如果 tab 和 空格混用也会报错；其次，块结构开始的地方比如 <code>if</code> 和 <code>for</code> 语句的行末要有冒号 <code>:</code>。这有助于代码的可读性，但你也可能怀念 C 那种自由的体验，毕竟如果复制粘贴时因为丢失缩进而不得不手动对齐是很恼人的。</p>
<h4 id="循环结构" tabindex="-1">循环结构 <a class="header-anchor" href="#循环结构" aria-label="Permalink to &quot;循环结构&quot;">&ZeroWidthSpace;</a></h4>
<p>列表推导式能在一行内高效地完成批量操作，但有时为了压行我们已经显得过分刻意，许多场景下还是只能使用循环结构，所以我们再以读入多行数据为例展示 Python 中的循环是如何编写的：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 请注意从现在开始我们不再使用 REPL，请自行复制多行数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> ([] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 多变量赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这里假设输入 4 行数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    _u, _v, _w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split()]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    u.append(_u), v.append(_v), w.append(_w)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 不可进行类似 cin >> u[i] >> v[i] >> w[i] 的操作，因为必定超出列表当前的长度</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 当然你可以选择初始化长度为 MAXN 的全 0 列表，不过需要记住真实长度并删掉多余元素</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u, v, w)</span></span></code></pre>
</div><p>需要注意，Python 中的 for 循环和 C/C++ 有较大的差别，其作用类似 C++ 11 引入的 <a href="./new.html#基于范围的-for-循环">「基于范围的循环」</a>，实质是迭代序列中的元素，比如编写循环遍历数组下标需要迭代 <code>range(len(lst))</code>，而非真正定义起始和终止条件，所以使用起来并没有 C/C++ 灵活。</p>
<p>下面再用 while 循环展示行数不定的情况下如何输入：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [], [], []  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 多变量赋值，其实同上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 注意 Python 中赋值语句不能放在条件表达式中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 不能像 C 那样 while(!scanf())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 用切片拼接避免了 append()，注意列表推导式中又嵌套了列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u):], v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(v):], w[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(w):] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s.split()]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># Python 3.8 引入了 walrus operator 海象运算符后，你可以节省两行，但考场环境很可能不支持</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u):], v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(v):], w[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(w):] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s.split()]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u, v, w)</span></span></code></pre>
</div><h4 id="选择结构" tabindex="-1">选择结构 <a class="header-anchor" href="#选择结构" aria-label="Permalink to &quot;选择结构&quot;">&ZeroWidthSpace;</a></h4>
<p>和 C/C++ 大同小异，一些形式上的差别都在下面的示例中有所展示，此外还需注意条件表达式中不允许使用赋值运算符（Python 3.8 以上可用 <a href="https://www.python.org/dev/peps/pep-0572/" target="_blank" rel="noreferrer"><code>:=</code></a>），以及 <a href="https://docs.python.org/zh-cn/3/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python" target="_blank" rel="noreferrer">没有 swicth 语句</a>。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 条件表达式两侧无括号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> >=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"关系运算符可以连续使用"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> None</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">or</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"&#x26;&#x26;  ||  !"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"与  或  非"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"and or not"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"善用 and/or 可节省行数"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"负数也是 True，不执行本句"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    elif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"用 elif 而不是 else if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">        "位运算符与 C 相近，偶数&#x26;1 得 0，不执行本句"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"也有三目运算符"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">else</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"注意结构"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span></code></pre>
</div><h4 id="异常处理" tabindex="-1">异常处理 <a class="header-anchor" href="#异常处理" aria-label="Permalink to &quot;异常处理&quot;">&ZeroWidthSpace;</a></h4>
<p>尽管 C++ 中有 <a href="https://zh.cppreference.com/w/cpp/language/try_catch" target="_blank" rel="noreferrer">try 块</a> 用于异常处理，但竞赛中一般从不使用，而 Python 中常见的是 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-eafp" target="_blank" rel="noreferrer">EAFP</a> 风格，故而代码中可能大量使用 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#the-try-statement" target="_blank" rel="noreferrer"><code>try-except</code></a> 语句，在后文介绍 <code>dict</code> 这一结构时还会用到，这里展示：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "OI-wiki"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "NOIP"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s.find(pat)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># find() 找不到返回 -1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> s.index(pat)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># index() 找不到则抛出错误</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(y)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这句被跳过</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> ValueError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"没找到"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(y)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 此时 y 并没有定义，故又会抛出错误</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> NameError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"无法输出 y"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"原因:"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, e)</span></span></code></pre>
</div><h4 id="文件读写" tabindex="-1"><a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" target="_blank" rel="noreferrer">文件读写</a> <a class="header-anchor" href="#文件读写" aria-label="Permalink to &quot;[文件读写](https://docs.python.org/3/reference/compound_stmts.html#the-with-statement)&quot;">&ZeroWidthSpace;</a></h4>
<p>Python 内置函数 <a href="https://docs.python.org/3/library/functions.html#open" target="_blank" rel="noreferrer"><code>open()</code></a> 用于文件读写，为了防止读写过程中出错导致文件未被正常关闭，这里只介绍使用 <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" target="_blank" rel="noreferrer"><code>with</code></a> 语句的安全读写方法：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'in.txt'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(f.readline())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 读入第一行的 N</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a):] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> f.readline().split()] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'out.txt'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'w'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    f.write(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span></code></pre>
</div><p>关于文件读写的函数有很多，分别适用于不同的场景，由于 OI 赛事尚不支持使用 Python，这里从略。</p>
<h3 id="内置容器" tabindex="-1">内置容器 <a class="header-anchor" href="#内置容器" aria-label="Permalink to &quot;内置容器&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 内置了许多强大的容器类型，只有熟练使用并了解其特点才能真正让 Python 在算法竞赛中有用武之地，除了上面详细介绍的 <code>list</code>（列表），还有 <code>tuple</code>（元组）、<a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#mapping-types-dict" target="_blank" rel="noreferrer"><code>dict</code></a>（字典）和 <code>set</code>（集合）这几种类型。</p>
<p>元组可以简单理解成不可变的列表，不过还需注意「不可变」的内涵，如果元组中的某元素是可变类型比如列表，那么仍可以修改该列表的值，元组中存放的是对列表的引用所以元组本身并没有改变。元组的优点是开销较小且「<a href="https://docs.python.org/zh-cn/3/glossary.html" target="_blank" rel="noreferrer">可哈希</a>」，后者在创建字典和集合时非常有用。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">tup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 由列表得到元组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 等同于 tup = ([1,2], 4)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">tup[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">].append(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(tup)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">a, b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"I-Wiki"</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 多变量赋值其实是元组拆包</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(b))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">b, a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a, b</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(b))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 你应该会看到 a, b 的 id 值现在互换了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这更说明 Python 中，变量更像是名字，赋值只是让其指代对象</span></span></code></pre>
</div><p>字典就像 C++ STL 中的 <a href="./csl/associative-container.html#map"><code>map</code></a>（请注意和 Python 中内置函数 <a href="https://docs.python.org/zh-cn/3/library/functions.html#map" target="_blank" rel="noreferrer"><code>map()</code></a> 区分）用于存储键值对，形式类似 <a href="https://docs.python.org/3/library/json.html" target="_blank" rel="noreferrer">JSON</a>，但 JSON 中键必须是字符串且以双引号括住，字典则更加灵活强大，可哈希的对象都可作为字典的键。需要注意 Python 几次版本更新后字典的特性有了较多变化，包括其中元素的顺序等，请自行探索。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'key'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"value"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 基本形式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">chr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(i): i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">91</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 大写字母到对应 ASCII 码的映射，注意断句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">zip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">chr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(i) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">91</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">91</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 效果同上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {dic[k]: k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dic}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 将键值对逆转，for k in dic 迭代其键</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {v: k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> k, v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dic.items()}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 和上行作用相同，dic.items() 以元组存放单个键值对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {k: v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> k, v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dic.items(), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> x:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 字典按值逆排序，用到了 lambda 表达式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'A'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 返回 dic 中 以 'A' 为键的项，这里值为65</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'a'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 97</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # 将 d[key] 设为 value，字典中原无 key 就是直接插入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'b'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dic:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># LBYL(Look Before You Leap) 风格</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'b'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 若字典中无该键则会出错，故先检查</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    dic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'b'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 98</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 经典场景 统计出现次数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 新键不存在于原字典，需要额外处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># EAFP (Easier to Ask for Forgiveness than Permission) 风格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    cnter[key] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> KeyError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    cnter[key] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span></code></pre>
</div><p>集合就像 C++ STL 中的 <a href="./csl/associative-container.html#set"><code>set</code></a>，不会保存重复的元素，可以看成只保存键的字典。需要注意集合和字典都用 <code>{}</code> 括住，不过单用 <code>{}</code> 会创建空字典而不是空集合，这里就不再给出示例。</p>
<h3 id="编写函数" tabindex="-1">编写函数 <a class="header-anchor" href="#编写函数" aria-label="Permalink to &quot;编写函数&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 中定义函数无需指定参数类型和返回值类型，无形中为 OI 选手减少了代码量</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a, b):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> b  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 动态类型的优势，a和b也可以是字符串</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add_no_swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a, b):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'in func #1:'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(b))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    b, a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a, b</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'in func #2:'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(a), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(b))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># a, b 已交换</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> a, b  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 返回多个值，其实就是返回元组，可以拆包接收</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">lst1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]; lst2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'outside func #1:'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst1), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst2))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">add_no_swap(lst1, lst2)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 函数外 lst1, lst2 并未交换</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'outside func #2:'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst1), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst2))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 不过值确实已经改变</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst1, lst2)</span></span></code></pre>
</div><h4 id="默认参数" tabindex="-1">默认参数 <a class="header-anchor" href="#默认参数" aria-label="Permalink to &quot;默认参数&quot;">&ZeroWidthSpace;</a></h4>
<p>Python 中函数的参数非常灵活，有关键字参数、可变参数等，但在算法竞赛中这些特性的用处并不是很大，这里只介绍一下默认参数，因为 C++ 中也有默认参数，且在 Python 中使用默认参数很有可能遇到坑。</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> append_to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(element, to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[]):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    to.append(element)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> to</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">lst1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> append_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">lst2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> append_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(lst1, lst2)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 你可能以为输出是 [12] [42]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 但运行结果其实是 [12] [12, 42]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 这是因为默认参数的值仅仅在函数定义的时候赋值一次</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 默认参数的值应该是不可变对象，使用 None 占位是一种最佳实践</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> append_to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(element, to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> to </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">is</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        to </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    to.append(element)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> to</span></span></code></pre>
</div><h4 id="类型标注" tabindex="-1">类型标注 <a class="header-anchor" href="#类型标注" aria-label="Permalink to &quot;类型标注&quot;">&ZeroWidthSpace;</a></h4>
<p>Python 是一个动态类型检查的语言，以灵活但隐式的方式处理类型，Python 解释器仅仅在运行时检查类型是否正确，并且允许在运行时改变变量类型，俗话说「动态类型一时爽，代码重构火葬场」，程序中的一些错误可能在运行时才会暴露：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">     1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "two"</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # This line never runs, so no TypeError is raised</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">     1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "two"</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  # Now this is type checked, and a TypeError is raised</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">TypeError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: unsupported operand </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'int'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'str'</span></span></code></pre>
</div><p>Python 3.5 后引入了类型标注，允许设置函数参数和返回值的类型，但只是作为提示，并没有实际的限制作用，需要静态检查工具才能排除这类错误（例如 <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noreferrer">PyCharm</a> 和 <a href="http://mypy-lang.org/" target="_blank" rel="noreferrer">Mypy</a>），所以显得有些鸡肋，对于 OIer 来说更是只需了解，可按如下方式对函数的参数和返回值设置类型标注：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> headline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    text,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># type: str</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># type: int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    fill_char </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "-"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># type: str</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">):                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># type: (...) -> str</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">text.title()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.center(width, fill_char)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(headline(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"type comments work"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">))</span></span></code></pre>
</div><p>除了函数参数，变量也是可以类型标注的，你可以通过调用 <code>__annotations__</code> 来查看函数中所有的类型标注。变量类型标注赋予了 Python 静态语言的性质，即声明与赋值分离：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nothing: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">str</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nothing</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">NameError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'nothing'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> is</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> defined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>>></span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> __annotations__</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'nothing'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'str'</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div><h2 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-label="Permalink to &quot;装饰器&quot;">&ZeroWidthSpace;</a></h2>
<p>装饰器是一个函数，接受一个函数或方法作为其唯一的参数，并返回一个新函数或方法，其中整合了修饰后的函数或方法，并附带了一些额外的功能。简而言之，可以在不修改函数代码的情况下，增加函数的功能。相关知识可以参考 <a href="https://docs.python.org/3/glossary.html#term-decorator" target="_blank" rel="noreferrer">官方文档</a>。</p>
<p>部分装饰器在竞赛中非常实用，比如 <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" target="_blank" rel="noreferrer"><code>lru_cache</code></a>，可以为函数自动增加记忆化的能力，在递归算法中非常实用：</p>
<p><code>@lru_cache(maxsize=128,typed=False)</code></p>
<ul>
<li>传入的参数有 2 个：<code>maxsize</code> 和 <code>typed</code>，如果不传则 <code>maxsize</code> 的默认值为 128，<code>typed</code> 的默认值为 <code>False</code>。</li>
<li>其中 <code>maxsize</code> 参数表示的是 LRU 缓存的容量，即被装饰的方法的最大可缓存结果的数量。如果该参数值为 128，则表示被装饰方法最多可缓存 128 个返回结果；如果 <code>maxsize</code> 传入为 <code>None</code> 则表示可以缓存无限个结果。</li>
<li>如果 <code>typed</code> 设置为 <code>True</code>，不同类型的函数参数将被分别缓存，例如，<code>f(3)</code> 和 <code>f(3.0)</code> 会缓存两次。</li>
</ul>
<p>以下是使用 <code>lru_cache</code> 优化计算斐波那契数列的例子：</p>
<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">@lru_cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">maxsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> fib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(n):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fib(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fib(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span></code></pre>
</div><h2 id="常用内置库" tabindex="-1">常用内置库 <a class="header-anchor" href="#常用内置库" aria-label="Permalink to &quot;常用内置库&quot;">&ZeroWidthSpace;</a></h2>
<p>在这里介绍一些写算法可能用得到的内置库，具体用法可以自行搜索或者阅读 <a href="https://docs.python.org/3/library/index.html" target="_blank" rel="noreferrer">官方文档</a>。</p>
<table tabindex="0">
<thead>
<tr>
<th>库名</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://docs.python.org/3/library/array.html" target="_blank" rel="noreferrer">array</a></td>
<td>定长数组</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noreferrer">argparse</a></td>
<td>命令行参数处理</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/bisect.html" target="_blank" rel="noreferrer">bisect</a></td>
<td>二分查找</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/collections.html" target="_blank" rel="noreferrer">collections</a></td>
<td>有序字典、双端队列等数据结构</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/fractions.html" target="_blank" rel="noreferrer">fractions</a></td>
<td>有理数</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/heapq.html" target="_blank" rel="noreferrer">heapq</a></td>
<td>基于堆的优先级队列</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/io.html" target="_blank" rel="noreferrer">io</a></td>
<td>文件流、内存流</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/itertools.html" target="_blank" rel="noreferrer">itertools</a></td>
<td>迭代器</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/math.html" target="_blank" rel="noreferrer">math</a></td>
<td>数学函数</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/os.html" target="_blank" rel="noreferrer">os.path`</a></td>
<td>系统路径等</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/random.html" target="_blank" rel="noreferrer">random</a></td>
<td>随机数</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/re.html" target="_blank" rel="noreferrer">re</a></td>
<td>正则表达式</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/struct.html" target="_blank" rel="noreferrer">struct</a></td>
<td>转换结构体和二进制数据</td>
</tr>
<tr>
<td><a href="https://docs.python.org/3/library/sys.html" target="_blank" rel="noreferrer">sys</a></td>
<td>系统信息</td>
</tr>
</tbody>
</table>
<h2 id="从例题对比-c-与-python" tabindex="-1">从例题对比 C++ 与 Python <a class="header-anchor" href="#从例题对比-c-与-python" aria-label="Permalink to &quot;从例题对比 C++ 与 Python&quot;">&ZeroWidthSpace;</a></h2>
<div class="info custom-block"><p class="custom-block-title">&quot;<a href="https://www.luogu.com.cn/problem/P4779" target="_blank" rel="noreferrer">例题 洛谷 P4779【模板】单源最短路径（标准版）</a>&quot;</p>
<p>给定一个 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.891ex" height="2.52ex" role="img" focusable="false" viewBox="0 -864 6581.7 1114" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(989,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1766.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2822.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3700.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(4756.1,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1033,393.1) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(6192.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><msup><mn>10</mn><mn>5</mn></msup><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container> 个点、<mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="20.045ex" height="2.52ex" role="img" focusable="false" viewBox="0 -864 8860.1 1114" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(878,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1267,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2044.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3100.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4256.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(5312.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6034.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(7034.6,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1033,393.1) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(8471.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>m</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>m</mi><mo>≤</mo><mn>2</mn><mo>×</mo><msup><mn>10</mn><mn>5</mn></msup><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container> 条有向边的带非负权图，请你计算从 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container> 出发，到每个点的距离。数据保证能从 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container> 出发到任意点。</p>
</div>
<h3 id="声明常量" tabindex="-1">声明常量 <a class="header-anchor" href="#声明常量" aria-label="Permalink to &quot;声明常量&quot;">&ZeroWidthSpace;</a></h3>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Pj4Ds" id="tab-Bl6T4qy" checked><label for="tab-Bl6T4qy">C++</label><input type="radio" name="group-Pj4Ds" id="tab-UfKZwXy" ><label for="tab-UfKZwXy">Python</label></div><div class="blocks">
<div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> &#x3C;bits/stdc++.h></span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">using namespace std;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span></code></pre>
</div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 引入优先队列模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">#python version &#x3C; 3.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> ImportError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">#python3.*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1e5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2e5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">INF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3f3f3f3f</span></span></code></pre>
</div></div></div>
<h3 id="声明前向星结构体和其它变量" tabindex="-1">声明前向星结构体和其它变量 <a class="header-anchor" href="#声明前向星结构体和其它变量" aria-label="Permalink to &quot;声明前向星结构体和其它变量&quot;">&ZeroWidthSpace;</a></h3>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-qVZ4k" id="tab-FGusEi8" checked><label for="tab-FGusEi8">C++</label><input type="radio" name="group-qVZ4k" id="tab-EwuS3h2" ><label for="tab-EwuS3h2">Python</label></div><div class="blocks">
<div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> qxx {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nex, t, v;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">qxx </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[M];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[N], cnt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">cnt] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (qxx){</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[f], t, v}, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[f] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">typedef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pii;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">priority_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii, vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, greater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[N];</span></span></code></pre>
</div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> qxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 前向星类（结构体）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.nex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [qxx() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(M)]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 链表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">cnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">INF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq.PriorityQueue()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 定义优先队列，默认第一元小根堆</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(f, t, v):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 在前向星中加边</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 如果要修改全局变量，要使用 global 来声明</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt, e, h</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 调试时的输出语句，多个变量使用元组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # print("add_path(%d,%d,%d)" % (f,t,v))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    cnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].nex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> h[f]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> t</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> v</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    h[f] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt</span></span></code></pre>
</div></div></div>
<h3 id="dijkstra-算法" tabindex="-1">Dijkstra 算法 <a class="header-anchor" href="#dijkstra-算法" aria-label="Permalink to &quot;Dijkstra 算法&quot;">&ZeroWidthSpace;</a></h3>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-stnpU" id="tab-Mmug1pU" checked><label for="tab-Mmug1pU">C++</label><input type="radio" name="group-stnpU" id="tab-uHtmpki" ><label for="tab-uHtmpki">Python</label></div><div class="blocks">
<div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  memset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dist, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dist));</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">  dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[s] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">make_pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, s));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    pii u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u.first) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second]; i; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].nex) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">      const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].t, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].v;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> w) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">      dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> w;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">make_pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v], v));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> nextedgeid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 生成器，可以用在 for 循环里</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> h[u]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].nex</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    dist[s] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    q.put((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, s))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    while</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.empty():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.get()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># get 函数会顺便删除堆中对应的元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">            continue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nextedgeid(u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].t</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].v</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">                continue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            dist[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            q.put((dist[v], v))</span></span></code></pre>
</div></div></div>
<h3 id="主函数" tabindex="-1">主函数 <a class="header-anchor" href="#主函数" aria-label="Permalink to &quot;主函数&quot;">&ZeroWidthSpace;</a></h3>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FOprF" id="tab-7eyyyfc" checked><label for="tab-7eyyyfc">C++</label><input type="radio" name="group-FOprF" id="tab-pHvdiKG" ><label for="tab-pHvdiKG">Python</label></div><div class="blocks">
<div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n, m, s;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d%d%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">n, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">m, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">s);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> m; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u, v, w;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d%d%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">u, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">v, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u, v, w);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '__main__'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 一行读入多个整数。注意它会把整行都读进来</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    n, m, s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(m):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        add_path(u, v, w)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    dijkstra(s)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dist[i], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ' '</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()</span></span></code></pre>
</div></div></div>
<h3 id="完整代码" tabindex="-1">完整代码 <a class="header-anchor" href="#完整代码" aria-label="Permalink to &quot;完整代码&quot;">&ZeroWidthSpace;</a></h3>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-QFItR" id="tab-OGcR8UK" checked><label for="tab-OGcR8UK">C++</label><input type="radio" name="group-QFItR" id="tab-uXvQEQn" ><label for="tab-uXvQEQn">Python</label></div><div class="blocks">
<div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> &#x3C;bits/stdc++.h></span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">using namespace std;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> qxx {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nex, t, v;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">qxx </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[M];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[N], cnt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">cnt] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (qxx){</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[f], t, v}, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[f] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">typedef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pii;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">priority_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii, vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, greater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">>></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[N];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  memset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dist, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(dist));</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">  dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[s] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">make_pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, s));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    pii u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u.first) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second]; i; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].nex) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">      const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> &#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].t, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i].v;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> w) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">      dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[u.second] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> w;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">      q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">make_pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[v], v));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n, m, s;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d%d%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">n, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">m, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">s);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> m; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u, v, w;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d%d%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">u, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">v, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">    add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u, v, w);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">  dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> n; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[i]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 引入优先队列模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># python version &#x3C; 3.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> ImportError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># python3.*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1e5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2e5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">INF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">3f3f3f3f</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> qxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 前向星类（结构体）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.nex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [qxx() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(M)]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 链表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">cnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">dist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">INF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(N)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> pq.PriorityQueue()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 定义优先队列，默认第一元小根堆</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> add_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(f, t, v):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 在前向星中加边</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 如果要修改全局变量，要使用 global 来声名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt, e, h</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 调试时的输出语句，多个变量使用元组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # print("add_path(%d,%d,%d)" % (f,t,v))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    cnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].nex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> h[f]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> t</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    e[cnt].v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> v</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    h[f] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cnt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> nextedgeid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(u):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 生成器，可以用在 for 循环里</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> h[u]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].nex</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> dijkstra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(s):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    dist[s] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    q.put((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, s))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    while</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.empty():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> q.get()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">            continue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> nextedgeid(u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].t</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> e[i].v</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x3C;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">                continue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            dist[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> dist[u[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">w</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">            q.put((dist[v], v))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 如果你直接运行这个python代码（不是模块调用什么的）就执行命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '__main__'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">    # 一行读入多个整数。注意它会把整行都读进来</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    n, m, s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(m):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        u, v, w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().split())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">        add_path(u, v, w)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    dijkstra(s)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">        # 两种输出语法都是可以用的</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">{}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.format(dist[i]), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">' '</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">        # print("%d" % dist[i],end=' ')</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 结尾换行</span></span></code></pre>
</div></div></div>
<h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>Python Documentation，<a href="https://www.python.org/doc/" target="_blank" rel="noreferrer">https://www.python.org/doc/</a></li>
<li>Python 官方中文教程，<a href="https://docs.python.org/zh-cn/3/tutorial/" target="_blank" rel="noreferrer">https://docs.python.org/zh-cn/3/tutorial/</a></li>
<li>Learn Python3 In Y Minutes，<a href="https://learnxinyminutes.com/docs/python3/" target="_blank" rel="noreferrer">https://learnxinyminutes.com/docs/python3/</a></li>
<li>Real Python Tutorials，<a href="https://realpython.com/" target="_blank" rel="noreferrer">https://realpython.com/</a></li>
<li>廖雪峰的 Python 教程，<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/" target="_blank" rel="noreferrer">https://www.liaoxuefeng.com/wiki/1016959663602400/</a></li>
<li>GeeksforGeeks: Python Tutorials,<a href="https://www.geeksforgeeks.org/python-programming-language/" target="_blank" rel="noreferrer">https://www.geeksforgeeks.org/python-programming-language/</a></li>
</ol>
<h2 id="参考资料和注释" tabindex="-1">参考资料和注释 <a class="header-anchor" href="#参考资料和注释" aria-label="Permalink to &quot;参考资料和注释&quot;">&ZeroWidthSpace;</a></h2>
<p>[1]: <a href="https://docs.python.org/zh-cn/3/tutorial/interpreter.html#id1" target="_blank" rel="noreferrer">Python 解释器—Python 3 文档</a></p>
<p>[2]: <a href="https://docs.python.org/zh-cn/3/howto/unicode.html#the-string-type" target="_blank" rel="noreferrer">Unicode 指南—Python 3 文档</a></p>
<h2 id="来源" tabindex="-1">来源 <a class="header-anchor" href="#来源" aria-label="Permalink to &quot;来源&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><a href="https://oi-wiki.org/lang/python/" target="_blank" rel="noreferrer">OI Wiki - Python 速成</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 298 期）：轮到硬件工程师吃香了]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-298</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-298</guid>
            <pubDate>Fri, 26 Apr 2024 16:21:07 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。（[通知] 下周五一假期，周刊暂停一次。）
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-298-期-轮到硬件工程师吃香了" tabindex="-1">科技爱好者周刊（第 298 期）：轮到硬件工程师吃香了 <a class="header-anchor" href="#科技爱好者周刊-第-298-期-轮到硬件工程师吃香了" aria-label="Permalink to &quot;科技爱好者周刊（第 298 期）：轮到硬件工程师吃香了&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。（<strong>[通知] 下周五一假期，周刊暂停一次。</strong>）</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4204" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041903.webp" alt="" loading="lazy"></p>
<p>这是最近的网红地点，太原植物园的时光电梯。这里原来是煤矿区，后来改建成了公园。（<a href="https://new.qq.com/rain/a/20240414A04RNY00" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="轮到硬件工程师吃香了" tabindex="-1">轮到硬件工程师吃香了 <a class="header-anchor" href="#轮到硬件工程师吃香了" aria-label="Permalink to &quot;轮到硬件工程师吃香了&quot;">&ZeroWidthSpace;</a></h2>
<p>这一周，我看到一个<a href="https://twitter.com/aznweng/status/1780594562597081362" target="_blank" rel="noreferrer">美国的招聘数据</a>，跟大家分享一下。</p>
<p><strong>他们的硬件工程师招聘，创出了历史新高。</strong></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042301.webp" alt="" loading="lazy"></p>
<p>据统计，美国互联网公司的所有招聘岗位，2022年有6%是硬件岗位，目前这个比例上升到了16%。</p>
<p>这是前所未有的，也就是说，公司每招聘五个软件工程师，就会招聘一个硬件工程师，以前从来没有这么多硬件岗位。</p>
<p>目前的状况是，美国大大小小的互联网公司都在招聘硬件工程师。那几个巨头，谷歌、微软、Meta、苹果等等，更是大量搜罗硬件人才。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042302.webp" alt="" loading="lazy"></p>
<p>虽然中国没有这方面的统计，但是情况也类似。你随便打开一个招聘网站，搜一下“硬件工程师”，会返回大量结果，很多都是高薪。<strong>硬件岗位正在前所未有的增加。</strong></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042303.webp" alt="" loading="lazy"></p>
<p>为什么硬件工程师突然变得吃香了？</p>
<p><strong>原因几乎肯定就是 AI</strong>。互联网正在全行业上马 AI 项目，大家不管三七二十一，先做起来再说，唯恐落于人后。</p>
<p>AI 的软件部分，有的是开源模型，你只要按照文档和教程，都能跑起来。不管原来干什么，哪怕是前端工程师，也能转型搞 AI。</p>
<p>但是，硬件部分就不行了，必须用专业人才。 AI 离不开算力，算力可是百分之百的硬件，软件没法提供算力。</p>
<p>互联网公司如果建设自己的算力，就需要 AI 芯片和 AI 服务器，有些公司还会搞定制的集成电路 ASIC/FPGA，这些都需要硬件工程师。<strong>你砸这么多钱上马 AI，就肯定要聘请大量的硬件工程师，否则就没有算力。</strong></p>
<p>但是，硬件工程师的供给很少，因为不容易培养，他需要有电子电路知识，还需要了解计算机系统，并且有足够的动手实践。所以，往往招不到合适的人，招聘岗位会挂很久，累积起来，加剧了市场的供求失衡。</p>
<p>相比硬件工程师的火爆，软件工程师的招聘就平淡无奇了。</p>
<p>软件岗位虽然还是远多于硬件岗位，但是增长缓慢，尤其是初级岗位，甚至有些疲软。跟前几年的巅峰相比，已经下降了很多。</p>
<p>为什么（初级）软件工程师的需求不振呢？我可以列出好几条原因。</p>
<blockquote>
<p>（1）SaaS 和云服务的发展，使得很多需求可以外购现成的服务，不必自己编码。</p>
<p>（2）智能手机市场饱和，对手机 App 的需求减缓。</p>
<p>（3）培训班和训练营，源源不断生产大量的初级软件工程师。</p>
<p>（4）AI 可以完成简单的编程任务，减少了对初级软件工程师的需求。</p>
</blockquote>
<p>展望未来，如果 AI 的编程能力进一步发展，可以完成复杂的编程任务，目前这种局面就会持续下去：硬件工程师火爆，软件工程师平稳。</p>
<p>令人担心的是，软件工程师的初级岗位以后几乎肯定会减少，需求集中在中高级岗位。那样的话，初级工程师的培训会成为一个难题，没有外部环境，需要自己锻炼自己，变成中高级开发者。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.nature.com/articles/d41586-024-00398-w" target="_blank" rel="noreferrer">牛肉大米</a></p>
<p>韩国科学家在大米上培养牛肉细胞，从而产生了牛肉味的大米。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021903.webp" alt="" loading="lazy"></p>
<p>研究人员给大米涂上营养液，然后在上面植入了牛肉细胞，让其生长约一周时间，就变成了牛肉米。</p>
<p>牛肉米呈现粉红色，因为这是细胞培养液的颜色，牛肉细胞本身是无色的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021904.webp" alt="" loading="lazy"></p>
<p>牛肉米的好处是增加大米的营养，只吃一碗米饭，就可以同时补充淀粉和牛肉，适合作为野外口粮，还可以减少畜牧业对环境的影响。</p>
<p>2、<a href="https://aeronde.com/index_en.html" target="_blank" rel="noreferrer">圆环飞行器</a></p>
<p>一家法国的创业公司，造出了圆环飞行器。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042408.webp" alt="" loading="lazy"></p>
<p>整个飞行器就是一个巨型的白色圆环，里面充满了氦气，外部装备了多个螺旋桨，使用电力控制。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042409.webp" alt="" loading="lazy"></p>
<p>它的负重是200公斤，只能乘坐两个成人，但是座位就是一个系在圆环下面的长椅，乘客一定要很勇敢。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042410.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://www.ianvisits.co.uk/articles/elizabeth-line-testing-ways-of-banishing-its-ghosts-in-the-walls-68642/" target="_blank" rel="noreferrer">消除墙壁背影</a></p>
<p>英国伦敦地铁站的候车座位，就是安装在墙壁上的不锈钢凳子，乘客会背靠墙壁。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010304.webp" alt="" loading="lazy"></p>
<p>坐的人太多了，久而久之，墙壁上就留下了人的背影，既不卫生，也不美观。</p>
<p>为了消除背影，地铁站想了各种方法。如果更换有靠背的椅子，成本比较高，也很麻烦。最后，还是采用了最简单的方法：把背影贴掉。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010305.webp" alt="" loading="lazy"></p>
<p>贴纸便宜又简便，还能印上采用各种图案。不耐用了，再换一张就可以了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010306.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010307.webp" alt="" loading="lazy"></p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://new.qq.com/rain/a/20240422A04OR300" target="_blank" rel="noreferrer">Linus Torvalds 最新访谈</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042402.webp" alt="" loading="lazy"></p>
<p>Linux 创始人 Linus Torvalds 最新访谈的中译，主要谈到了最近的 xz 后门事件，以及对 AI 的看法。</p>
<p>2、<a href="https://www.joshwcomeau.com/css/full-bleed/" target="_blank" rel="noreferrer">CSS 网格实现经典出血布局</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030606.webp" alt="" loading="lazy"></p>
<p>一篇非常好的教程，讲解使用 CSS 网格（grid）实现页面的出血布局（即图片占用边距，占满整个行宽）。</p>
<p>3、<a href="https://linuxiac.com/zerossl-how-to-install-ssl-certificate/" target="_blank" rel="noreferrer">如何申请免费的 ZeroSSL 证书</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122801.webp" alt="" loading="lazy"></p>
<p>ZeroSSL 跟 Let's Encrypt 一样，提供免费的 SSL 证书。它的用户界面比较友好，并且有一些付费的额外功能。本文教你如何申请该证书。</p>
<p>4、<a href="https://ameow.xyz/archives/develop-a-frontend-site-with-copilot" target="_blank" rel="noreferrer">联手 Copilot，我在10个小时内上线了一个前端网站</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042413.webp" alt="" loading="lazy"></p>
<p>作者只有前端基础，通过使用 GitHub Copilot，在短时间内完成一个 React 前端项目，并总结了一些使用 Copilot 的技巧。（<a href="https://github.com/ruanyf/weekly/issues/4340" target="_blank" rel="noreferrer">@LeslieLeung</a> 投稿）</p>
<p>5、<a href="https://mp.weixin.qq.com/s/2y463r9G4hnsIc0c2ig7dA" target="_blank" rel="noreferrer">我的推特增长策略</a>（中文）</p>
<p>作者从去年末开始做推特账号运营，且发帖频率很低，如今涨了8000关注，本文总结增长策略。（<a href="https://github.com/ruanyf/weekly/issues/4298" target="_blank" rel="noreferrer">@dongan-beta</a> 投稿）</p>
<p>6、<a href="https://betterprogramming.pub/typescript-with-go-rust-errors-no-try-catch-heresy-da0e43ce5f78" target="_blank" rel="noreferrer">JS、Go、Rust 处理报错的不同方式</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023123006.webp" alt="" loading="lazy"></p>
<p>作者比较 JS、Go、Rust 这三种语言处理运行时报错的不同方式，认为 JS 应该向后两者学习。</p>
<p>7、<a href="https://blog.robenkleene.com/2023/12/26/introducing-rep-ren/" target="_blank" rel="noreferrer">rep 和 ren：替换和重命名的新工具</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023123007.webp" alt="" loading="lazy"></p>
<p>作者介绍他写的两个命令行工具，可以跟 grep 和 find 结合使用，大批量地替换和重命名文件。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.meta.ai/" target="_blank" rel="noreferrer">Meta AI</a></p>
<p>上周，Meta 公司发布自家的 AI 服务，免费使用，基于 Llama 3 模型，可以“文生文“和”文生图”，效果不错，详见 Meta 的<a href="https://about.fb.com/news/2024/04/meta-ai-assistant-built-with-llama-3/" target="_blank" rel="noreferrer">官方介绍文章</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041901.webp" alt="" loading="lazy"></p>
<p>这应该是 OpenAI 公司迄今最强劲的对手了。</p>
<p>另外，Meta 公司还有一个专门的 Llama 聊天网站 <a href="https://llama3.dev/" target="_blank" rel="noreferrer">llama.dev</a>，可以选择该模型的不同版本。（<a href="https://github.com/ruanyf/weekly/issues/4342" target="_blank" rel="noreferrer">@AICodeHunt</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042206.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://duckduckgo.com/?q=DuckDuckGo&amp;ia=chat" target="_blank" rel="noreferrer">DuckDuckGo AI Chat</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042005.webp" alt="" loading="lazy"></p>
<p>搜索引擎 DuckDuckGo 推出的免费 AI 聊天，底层是 GPT-3.5 Turbo 和 Claude 1.2。</p>
<p>3、<a href="https://llmpricecheck.com/" target="_blank" rel="noreferrer">LLM Pricing</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042006.webp" alt="" loading="lazy"></p>
<p>这个网站提供 AI 模型价格对比和试用链接，直观地帮你挑选最合适的模型。（<a href="https://github.com/ruanyf/weekly/issues/4307" target="_blank" rel="noreferrer">@lvwzhen</a> 投稿）</p>
<p>4、<a href="https://imagetotext.cfd/" target="_blank" rel="noreferrer">Image to Text</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041902.webp" alt="" loading="lazy"></p>
<p>用户在这个网站上传图片，它会返回图片的文字描述（英文）。如果图片上有文字，还会进行 OCR 识别。</p>
<p>这里还有一个类似网站 <a href="https://imagedescriber.online/" target="_blank" rel="noreferrer">Image Describer</a>。</p>
<p>5、<a href="https://github.com/ihmily/outfit-anyone" target="_blank" rel="noreferrer">OutfitAnyone AI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042415.webp" alt="" loading="lazy"></p>
<p>一个模特换衣的 AI 模型，只要上传服饰平铺图，就可以生成模特的试衣结果。（<a href="https://github.com/ruanyf/weekly/issues/4297" target="_blank" rel="noreferrer">@ihmily</a> 投稿）</p>
<p>6、<a href="https://github.com/lrhh123/ChatGPT-On-CS" target="_blank" rel="noreferrer">懒人客服</a></p>
<p>一个 AI 自动回复的客服软件，支持微信、千牛、抖店等多个平台。（<a href="https://github.com/ruanyf/weekly/issues/4308" target="_blank" rel="noreferrer">@alsritter</a> 投稿）</p>
<p>7、<a href="https://openperplex.com/" target="_blank" rel="noreferrer">Dive Into Knowledge</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042207.webp" alt="" loading="lazy"></p>
<p>该网站对搜索引擎的返回结果进行总结，效果还可以。</p>
<p>8、<a href="https://llmbook-zh.github.io/" target="_blank" rel="noreferrer">大语言模型</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042305.webp" alt="" loading="lazy"></p>
<p>免费阅读的电子书，适合对 LLM 技术感兴趣的初学者，作者是去年发表的大模型综述《A Survey of Large Language Models》的团队。（<a href="https://github.com/ruanyf/weekly/issues/4330" target="_blank" rel="noreferrer">@acelit</a> 投稿）</p>
<p>9、<a href="https://github.com/amin2312/AI-Image-Generator" target="_blank" rel="noreferrer">AI Image Generator</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042414.webp" alt="" loading="lazy"></p>
<p>一款易于操作的图片生成器，可以本地部署，后端需要接入 Dall·E 和 Stable Diffusion。（<a href="https://github.com/ruanyf/weekly/issues/4345" target="_blank" rel="noreferrer">@amin2312</a> 投稿）</p>
<p>10、<a href="https://github.com/zhbhun/rmbg" target="_blank" rel="noreferrer">RMBG</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042501.webp" alt="" loading="lazy"></p>
<p>一款开源工具，使用 AI 去除图像背景。（<a href="https://github.com/ruanyf/weekly/issues/4347" target="_blank" rel="noreferrer">@zhbhun</a> 投稿）</p>
<p>这里还有一个类似网站“<a href="https://cutout.aiwave.cc/" target="_blank" rel="noreferrer">未道帮 AI 抠图</a>”。（<a href="https://github.com/ruanyf/weekly/issues/4356" target="_blank" rel="noreferrer">@wytxer</a> 投稿）</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/feschber/lan-mouse" target="_blank" rel="noreferrer">Lan Mouse</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010703.webp" alt="" loading="lazy"></p>
<p>一个开源软件，使用同一个鼠标和键盘，控制局域网的多台电脑。</p>
<p>2、<a href="https://github.com/cherryful/unocss-ui" target="_blank" rel="noreferrer">UnoCssUi</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041904.webp" alt="" loading="lazy"></p>
<p>一个基于 Vue3、UnoCSS、Tailwindcss 的组件库，原子化设计，没有任何依赖。（<a href="https://github.com/ruanyf/weekly/issues/4294" target="_blank" rel="noreferrer">@szluyu99</a> 投稿）</p>
<p>3、<a href="https://github.com/drawdb-io/drawdb" target="_blank" rel="noreferrer">drawDB</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040703.webp" alt="" loading="lazy"></p>
<p>开源的数据库结构图和 SQL 生成工具。（<a href="https://github.com/ruanyf/weekly/issues/4314" target="_blank" rel="noreferrer">@yingming006</a> 投稿）</p>
<p>4、<a href="https://github.com/Simon-He95/vscode-highlight-text" target="_blank" rel="noreferrer">vscode-highlight-text</a></p>
<p>一个 VS Code 插件，可以自定义任意语言和框架的高亮规则。（<a href="https://github.com/ruanyf/weekly/issues/4302" target="_blank" rel="noreferrer">@Simon-He95</a> 投稿）</p>
<p>5、<a href="https://github.com/Dolov/chrome-github-2fa" target="_blank" rel="noreferrer">Easy GitHub 2FA authentication</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042304.webp" alt="" loading="lazy"></p>
<p>一款开源的浏览器插件，自动填写 GitHub 双因素认证的验证码。（<a href="https://github.com/ruanyf/weekly/issues/4328" target="_blank" rel="noreferrer">@Dolov</a> 投稿）</p>
<p>6、<a href="https://gitee.com/giteeClass/java-vision" target="_blank" rel="noreferrer">JavaVision</a></p>
<p>一个视觉识别项目，具备物体识别、人脸识别、以图搜图等核心功能，使用 Java 开发，需要本地部署，然后通过 Web API 调用。（<a href="https://github.com/ruanyf/weekly/issues/4343" target="_blank" rel="noreferrer">@javpower</a> 投稿）</p>
<p>7、<a href="https://github.com/shion-app/shion" target="_blank" rel="noreferrer">Shion</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042502.webp" alt="" loading="lazy"></p>
<p>开源的 Windows 软件，用来追踪统计个人的时间消耗，自动记录各种软件的使用时间，以及同步浏览器历史。（<a href="https://github.com/ruanyf/weekly/issues/4350" target="_blank" rel="noreferrer">@hanaTsuk1</a> 投稿）</p>
<p>8、<a href="https://github.com/chat2db/Chat2DB" target="_blank" rel="noreferrer">Chat2DB</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042503.webp" alt="" loading="lazy"></p>
<p>开源的数据库管理工具，有桌面端和 Web 端，用来浏览操作各种数据库。（<a href="https://github.com/ruanyf/weekly/issues/4349" target="_blank" rel="noreferrer">@JerryFan626</a> 投稿）</p>
<p>9、<a href="https://github.com/teableio/teable" target="_blank" rel="noreferrer">Teable</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042504.webp" alt="" loading="lazy"></p>
<p>开源的 Airtable 替代品，无代码搭建数据库应用，建立在 PostgreSQL 之上，界面友好、响应快速。（<a href="https://github.com/ruanyf/weekly/issues/4352" target="_blank" rel="noreferrer">@yingming006</a> 投稿）</p>
<p>10、<a href="https://github.com/astoilkov/main-thread-scheduling" target="_blank" rel="noreferrer">main-thread-scheduling</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010602.webp" alt="" loading="lazy"></p>
<p>这个 JS 模块号称可以把计算量大的任务放到主进程，同时又不会阻塞主进程，UI 界面保持对用户的随时响应。它的源码有学习价值。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://cloud.tencent.com/developer/article/1430171" target="_blank" rel="noreferrer">图解 Word2vec</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042003.webp" alt="" loading="lazy"></p>
<p>一篇2019年的长文，Word2vec 技术入门。虽然写得不是很清楚，但是很多例子很有启发，还配有插图，可参考<a href="https://jalammar.github.io/illustrated-word2vec/" target="_blank" rel="noreferrer">英语原文</a>。</p>
<p>2、<a href="https://github.com/hardhackerlabs/book" target="_blank" rel="noreferrer">硬地骇客——两个月 $12000 ARR 实践之路</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042208.webp" alt="" loading="lazy"></p>
<p>一本开源电子书，介绍 <a href="https://podwise.ai/" target="_blank" rel="noreferrer">Podwise 产品</a>从灵感到变现的全过程。（<a href="https://github.com/ruanyf/weekly/issues/4322" target="_blank" rel="noreferrer">@SaitoWu</a> 投稿）</p>
<p>3、<a href="https://www.searchforjohn.com/" target="_blank" rel="noreferrer">Serach for John</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020301.webp" alt="" loading="lazy"></p>
<p>一个新的搜索引擎，可以聚合其他搜索引擎的结果，我的试用效果非常好。</p>
<p>4、<a href="https://intronetworks.cs.luc.edu/" target="_blank" rel="noreferrer">计算机网络简介</a>（An Introduction to Computer Networks）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100518.webp" alt="" loading="lazy"></p>
<p>一本免费的英文书籍，介绍计算机网络知识，美国大学的教材。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://petapixel.com/2024/04/21/how-a-photographer-captured-his-spectacular-dream-eclipse-photo/" target="_blank" rel="noreferrer">日食照片</a></p>
<p>4月8日，北美洲发生了日全食。很多摄影师早早就为这个事件开始了准备。</p>
<p>一个鸟类摄影师来到了墨西哥的一个小岛。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042403.webp" alt="" loading="lazy"></p>
<p>岛上有许多军舰鸟。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042404.webp" alt="" loading="lazy"></p>
<p>摄影师想拍摄鸟类在日全食时的表现。</p>
<p>那一天，他终于拍到了令人叫绝的照片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042405.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042406.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024042407.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://lito-leafart.com/" target="_blank" rel="noreferrer">树叶艺术品</a></p>
<p>一个日本艺术家专门制作树叶艺术品。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111202.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111203.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111204.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://herman.bearblog.dev/a-case-for-toe-socks/" target="_blank" rel="noreferrer">五趾袜</a></p>
<p>我过去八年一直穿五趾袜，非常推荐它们。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202306/bg2023062816.webp" alt="" loading="lazy"></p>
<p>（1）五趾袜更适合脚趾。脚趾可以伸展并自由活动，如果束缚在一起，是很不舒服的。</p>
<p>（2）五趾袜站得更稳。脚掌的表面积越大，站得就越稳。即使普通的运动鞋配上五趾袜，我也觉得稳定性更好。</p>
<p>（3）脚趾间不会出汗。普通袜子使得脚趾之间会捂出汗液，五趾袜就没有这个问题。</p>
<p>（4）走长路的时候，脚趾之间不会互相摩擦出水泡，这对长跑运动员或徒步旅行者很重要。原来是脚趾间的摩擦，现在是袜子与袜子之间的摩擦。</p>
<p>（5）五趾袜更牢固一些，袜子不容易滑落。</p>
<p>目前，五趾袜目前还不常见，因为它们的制造工艺更复杂，成本更高，人们还没有习惯它们。我已经说服了很多人尝试五趾袜，每个人都感觉很好，所以你也可以试试。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>特斯拉的市值高得离谱，达到4800亿美元，2022年总收入810亿美元，市盈率36倍。</p>
<p>相比之下，美国最大的汽车公司——通用汽车的市值500亿美元，2022年总收入为1720亿美元，市盈率6倍。</p>
<p>特斯拉的问题在于，市场把它当成 Meta 和谷歌那样的科技公司，但它实际上是一家汽车公司。一旦市场开始认清这一点，股价就不可避免地下跌了。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=40064741" target="_blank" rel="noreferrer">Hacker News 读者</a>，评论特斯拉的股价不断下跌</p>
<p>2、</p>
<p>十九世纪现代医学出现后，人类的寿命大大延长，再加上法律对个人财产的保护，使得全世界大部分财产和权力掌握在老年人手中。</p>
<p>有文章称，世界上最富裕城市的最优质地区都居住着老年人。</p>
<p>-- <a href="https://granta.com/the-trouble-with-old-men/" target="_blank" rel="noreferrer">《老人的烦恼》</a></p>
<p>3、</p>
<p>React 这个库的革命性在于，之前的网页应用都直接构建在 DOM 之上，开发者必须自己处理 DOM 的状态，自己保证各个节点之间的同步。</p>
<p>React 改变了一切，使得应用程序脱离了 DOM。你不必再管 DOM 的状态，只需要管理自己应用的状态。这消除了复杂 Web 应用中繁琐且容易出错的许多工作量。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=39310142" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>4、</p>
<p>社交媒体就是一个水族馆，网红和名人是那里的展品——水母、鲨鱼、章鱼、小丑鱼等等。普通访问者就是游客，对展品的形状和颜色惊叹不已。</p>
<p>-- <a href="https://kottke.org/24/02/social-media-sites-are-metaphorical-aquariums" target="_blank" rel="noreferrer">《社交媒体是隐喻的水族馆》</a></p>
<p>5、</p>
<p>敏捷开发有一个问题，就是它要求“新的冲刺在上一个冲刺结束后立即开始。”</p>
<p>有了这个规则，程序员就陷入了永远冲刺的陷阱。</p>
<p>-- <a href="https://cbh.bearblog.dev/always-sprinting/" target="_blank" rel="noreferrer">《永远冲刺》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/04/weekly-issue-251.html" target="_blank" rel="noreferrer">国产单板机值得推荐</a>（2023 #251）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/04/weekly-issue-201.html" target="_blank" rel="noreferrer">中国需要成立半导体部</a>（2022 #201）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/03/weekly-issue-151.html" target="_blank" rel="noreferrer">NFT 是什么，听说能赚钱</a>（2021 #151）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/04/weekly-issue-101.html" target="_blank" rel="noreferrer">互联网不再稀缺</a>（2020 #101）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202404/bg2024041903.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 297 期）：饮水鸟玩具]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-297</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-297</guid>
            <pubDate>Fri, 19 Apr 2024 16:21:19 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
香港中环布置了两百]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-297-期-饮水鸟玩具" tabindex="-1">科技爱好者周刊（第 297 期）：饮水鸟玩具 <a class="header-anchor" href="#科技爱好者周刊-第-297-期-饮水鸟玩具" aria-label="Permalink to &quot;科技爱好者周刊（第 297 期）：饮水鸟玩具&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4204" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041107.webp" alt="" loading="lazy"></p>
<p>香港中环布置了两百多个3米～5米的“发光蛋”，一部分在陆地上，一部分漂在海上。一到夜晚，它们就发出不同的光色与声效。（<a href="https://www.sohu.com/a/766773393_123753" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="饮水鸟玩具" tabindex="-1">饮水鸟玩具 <a class="header-anchor" href="#饮水鸟玩具" aria-label="Permalink to &quot;饮水鸟玩具&quot;">&ZeroWidthSpace;</a></h2>
<p>前几天，我看到有人介绍“饮水鸟”玩具，心痒痒，就从网上买了一个。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041303.webp" alt="" loading="lazy"></p>
<p>价格很便宜，十几元人民币。到手以后，我玩了一下，觉得很有意思，分享给大家。</p>
<p>它是一个物理学玩具，有点像永动机，只要把鸟头按到水杯里，让鸟嘴碰到冷水，它就会一直弹起、倒下、弹起、倒下……</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041304.webp" alt="" loading="lazy"></p>
<p>我买的那个，这样运动了一天一夜，都没有停。</p>
<p>更有意思的是它的原理，你想不到可以这样用。</p>
<p>首先，去掉那些故意迷惑人的外部装饰，它就是一个密封的异型玻璃容器。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041305.webp" alt="" loading="lazy"></p>
<p>两头是圆球，中间由一根玻璃管相连，下部装了一些易挥发的液体（比如二氯甲烷、乙醚、酒精）。</p>
<p>鸟嘴被毛毡包裹，保证冷水会充分附着在上面。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041807.webp" alt="" loading="lazy"></p>
<p>遇到冷水以后，由于水温低，以及水份蒸发带走热量，使得容器上部的气压下降，下部的气压就会大于上部。</p>
<p>下部的气压就会压着液体，让它顺着玻璃管上升，被压入上部。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041808.webp" alt="" loading="lazy"></p>
<p>随着液体流入，鸟头越来越重，最终倒入水中，再次变成饮水的姿势。</p>
<p>鸟身倾斜以后，玻璃管在鸟尾的一端就会露出水面，从而玻璃管两端的气压就会变得相等。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041809.webp" alt="" loading="lazy"></p>
<p>由于重力的作用，上部的液体重新流回下部，从而鸟头再次弹起。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041810.webp" alt="" loading="lazy"></p>
<p>这个过程会一直重复下去，只要冷水使得上部与下部之间存在温度差。<strong>本质上，饮水鸟是一个热机，不需要其他动力，靠温度差驱动。</strong></p>
<p>我觉得，这真是热量转换为能量的一个绝佳演示。但是，除了这个玩具，没听说过有其他的实际应用。</p>
<p>我倒是看到过<a href="https://www.cnn.com/2024/03/14/climate/drinking-bird-energy-power-gadgets-climate-intl/index.html" target="_blank" rel="noreferrer">一篇报道</a> ，有人<a href="https://www.cell.com/device/fulltext/S2666-9986(24)00108-X" target="_blank" rel="noreferrer">提出</a>，将饮水鸟做成发电机，利用温度差发电。虽然我猜测，发电效率一定很差，但如果实现了，一定很有趣。</p>
<h2 id="掘金动手实验室-harmonyos-活动" tabindex="-1">掘金动手实验室：HarmonyOS 活动 <a class="header-anchor" href="#掘金动手实验室-harmonyos-活动" aria-label="Permalink to &quot;掘金动手实验室：HarmonyOS 活动&quot;">&ZeroWidthSpace;</a></h2>
<p>“掘金动手实验室”是一个以“参与”为特色的技术活动，联合厂商，为开发者提供一个实践与创新的平台。</p>
<p>这一次，<strong>它邀请了华为鸿蒙团队，让大家提前接触 HarmonyOS NEXT 系统</strong>，对鸿蒙和手机应用开发感兴趣的同学，不要错过了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041706.webp" alt="" loading="lazy"></p>
<p>本次活动面向所有业内人士，开发者、设计师、产品经理都可以参加。你不仅可以了解 HarmonyOS NEXT 的新特性 ，跟官方团队面对面，<strong>还有动手实操的机会</strong>。</p>
<p>活动的下半场，会分组进行头脑风暴，看看什么创意可以在鸿蒙上实现。如果具备实现条件，现场还能动手，让大家熟悉这个系统。可以多人一起参加，也可以一人为一组。</p>
<p><strong>活动时间是本周日（4月21日）一整天，免费参加</strong>，地点在上海漕河泾。参加者可以获得 HarmonyOS NEXT 内测名额，获胜者还有奖品。</p>
<p>报名和活动详情，请扫描上方海报的二维码，也可以点击<a href="https://www.bagevent.com/event/8819409?bag_track=ruanyifeng" target="_blank" rel="noreferrer">这个链接</a>。报名后，活动小助手会将你加入本次活动的微信社群，请务必注意微信好友申请！</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://phys.org/news/2024-04-huge-star-explosion-sky-lifetime.html" target="_blank" rel="noreferrer">恒星爆炸</a></p>
<p>从现在到9月之间的某个时间，人类将可以亲眼看到恒星爆炸。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041101.webp" alt="" loading="lazy"></p>
<p>距离地球3000光年的北冕座，存在一个双星系统，里面的两颗恒星离得很近。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041103.webp" alt="" loading="lazy"></p>
<p>每隔80年左右，它们会运行到最接近的位置，彼此的引力将引发恒星内部物质的核爆炸。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041102.webp" alt="" loading="lazy"></p>
<p>爱尔兰学者约翰·伯明翰1866年发现了这个现象，然后它在1946年再次出现。现在，2024年它又将重现。</p>
<p>需要注意的是，这次爆炸还没有出现在我们眼前，但它其实发生在3000年前。</p>
<p>2、<a href="https://finance.eastmoney.com/a/202404173048968557.html" target="_blank" rel="noreferrer">迪拜暴雨</a></p>
<p>4月17日，迪拜下了1949年有气象记录以来，最大的一场暴雨。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041707.webp" alt="" loading="lazy"></p>
<p>迪拜处于沙漠地区，终年炎热，缺少淡水，根本没有发达的排水系统。大雨造成了严重积水，全城一片混乱。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041708.webp" alt="" loading="lazy"></p>
<p>迪拜国际机场那么大的停机坪，全部积水，变成了水上机场。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041801.webp" alt="" loading="lazy"></p>
<p>由于全球变暖，一些地方更干旱，另一些地方有更多的降雨。很多沙漠地区，包括中国的西北，都出现了阴雨或暴雨天气，不知道沙漠以后会不会变成绿洲。</p>
<p>3、<a href="https://www.nytimes.com/2024/04/11/nyregion/nyc-restaurants-virtual-remote.html" target="_blank" rel="noreferrer">远程店员</a></p>
<p>很多餐馆为了节省成本，采用点餐机，只雇佣很少的店员，或者根本没有店员。</p>
<p>但是，有些客人不会或不愿使用点餐机，需要真人服务。这种情况下，纽约几家餐馆想出了一个绝妙的点子：远程店员。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041418.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041415.webp" alt="" loading="lazy"></p>
<p>餐馆在纽约，店员在菲律宾，客人点餐时会自动发起一个远程视频会议，通过屏幕跟菲律宾的店员点餐。</p>
<p>然后，店员再从菲律宾将客人的需求，发到纽约的后厨，完成上菜。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041416.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041417.webp" alt="" loading="lazy"></p>
<p>菲律宾店员的工资是每小时3美元，是当地类似工作的两倍，而纽约州的最低工资是每小时16美元。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://harper.blog/2024/04/12/i-accidentally-built-a-meme-search-engine/" target="_blank" rel="noreferrer">我如何搭建一个相似图片搜索引擎</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041406.webp" alt="" loading="lazy"></p>
<p>作者使用向量嵌入技术，为自己的图片加了一个相似图片搜索功能，意外发现非常简单。</p>
<p>2、<a href="https://mrkaran.dev/posts/travel-tailscale/" target="_blank" rel="noreferrer">与 Tailscale 一起旅行</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041601.webp" alt="" loading="lazy"></p>
<p>有些网络服务有地域限制，比如只限于美国境内使用。本文的前半部分介绍一种简单的 Tailscale 用法，让你在出国期间也能用本国的服务。</p>
<p>3、<a href="https://unkey.dev/blog/uuid-ux" target="_blank" rel="noreferrer">UUID 的用户体验</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041410.webp" alt="" loading="lazy"></p>
<p>UUID 指的是独一无二的 ID 标识符，本文讨论怎么让它对于用户更好用。</p>
<p>另外，UUID 有多个版本，<a href="https://blog.daveallie.com/ulid-primary-keys/" target="_blank" rel="noreferrer">这里</a>解释各版本的差异。结论是，一般情况使用 UUIDv4，如果需要单调递增，使用 UUIDv7。</p>
<p>4、<a href="https://blog.5udou.cn/blog/detail/1711630845567" target="_blank" rel="noreferrer">如何找到 Chrome 的崩溃原因？</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041607.webp" alt="" loading="lazy"></p>
<p>Chrome 浏览器打开页面时，经常崩溃，作者就从闪退时产生的 Crash dump 文件，着手寻找崩溃原因。（<a href="https://github.com/ruanyf/weekly/issues/4277" target="_blank" rel="noreferrer">@linxiaowu66</a> 投稿）</p>
<p>5、<a href="https://graphite.dev/blog/the-ideal-pr-is-50-lines-long" target="_blank" rel="noreferrer">理想的 PR 长度为50行</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021104.webp" alt="" loading="lazy"></p>
<p>GitHub 提交 PR 的最佳长度是多少？本文认为是50行，可接受范围为25行～100行。</p>
<p>少于25行，代码变动会过于频繁和琐碎；多于100行，提交的复杂度和审查时间都会增加。</p>
<p>6、<a href="https://nuejs.org/blog/tailwind-misinformation-engine/" target="_blank" rel="noreferrer">为什么我不看好 Tailwind</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021901.webp" alt="" loading="lazy"></p>
<p>Tailwind 是当红的 CSS 框架，最大卖点为样式代码的复用。作者解释，为什么他不喜欢也不看好这个框架。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://sshx.io/" target="_blank" rel="noreferrer">sshx</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023110602.webp" alt="" loading="lazy"></p>
<p>这个工具可以通过链接，与其他人共享你的终端。</p>
<p>2、<a href="https://github.com/00000o1/-" target="_blank" rel="noreferrer">Hyphen</a></p>
<p>一个 Web 组件的基类，你可以在它的基础上定义自己的 Web Component。类似的工具还有 <a href="https://github.com/kennyfrc/cami.js" target="_blank" rel="noreferrer">Cami.js</a>。</p>
<p>3、<a href="https://github.com/honojs/hono" target="_blank" rel="noreferrer">Hono</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041608.webp" alt="" loading="lazy"></p>
<p>一个 Node.js 的轻量级 Web 框架，专注于边缘节点的使用场景。</p>
<p>4、<a href="https://github.com/Innei/Shiro" target="_blank" rel="noreferrer">Shiro</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041609.webp" alt="" loading="lazy"></p>
<p>一个极简主义的个人网站，作为 <a href="https://github.com/mx-space" target="_blank" rel="noreferrer">Mix Space</a> 架设的站点的前端。（<a href="https://github.com/ruanyf/weekly/issues/4274" target="_blank" rel="noreferrer">@Innei</a> 投稿）</p>
<p>5、<a href="https://firstpartysimulator.org/" target="_blank" rel="noreferrer">Cover your tracks</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023110603.webp" alt="" loading="lazy"></p>
<p>这个工具可以查看，服务器能够拿到多少客户端信息，从而生成你的指纹。</p>
<p>6、<a href="https://github.com/bboysoulcn/telemonitor" target="_blank" rel="noreferrer">TeleMonitor</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041403.webp" alt="" loading="lazy"></p>
<p>Python 写的系统监控工具，监控 CPU、内存和磁盘的使用情况，并通过 Telegram 发送警告。（<a href="https://github.com/ruanyf/weekly/issues/4260" target="_blank" rel="noreferrer">@bboysoulcn</a> 投稿）</p>
<p>7、<a href="https://github.com/amuluze/amprobe" target="_blank" rel="noreferrer">Amprobe</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041404.webp" alt="" loading="lazy"></p>
<p>一个 Go + Vue3 开发的轻量级主机及容器监控工具。（<a href="https://github.com/ruanyf/weekly/issues/4261" target="_blank" rel="noreferrer">@amuluze</a> 投稿）</p>
<p>8、<a href="https://chromewebstore.google.com/detail/elemsnap/mblkhbaakhbhiimkbcnmeciblfhmafna" target="_blank" rel="noreferrer">ElemSnap</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041606.webp" alt="" loading="lazy"></p>
<p>Chrome 浏览器截图 + 美化插件。（<a href="https://github.com/ruanyf/weekly/issues/4273" target="_blank" rel="noreferrer">@AydenGen</a> 投稿）</p>
<p>9、<a href="https://github.com/KID-joker/stokado" target="_blank" rel="noreferrer">stokado</a></p>
<p>浏览器存储对象（比如 localStorage、IndexDB）的包装库，提供统一的 API，以及一些便利的功能（比如过期时间）。（<a href="https://github.com/ruanyf/weekly/issues/4279" target="_blank" rel="noreferrer">@KID-joker</a> 投稿）</p>
<p>10、<a href="https://ppresume.com/" target="_blank" rel="noreferrer">PPResume</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041802.webp" alt="" loading="lazy"></p>
<p>一个基于 LaTeX 的简历生成器，可以生成精美的简历，并提供极高质量的 PDF 输出。（<a href="https://github.com/ruanyf/weekly/issues/4285" target="_blank" rel="noreferrer">@xiaohanyu</a> 投稿）</p>
<p>11、<a href="https://apps.apple.com/cn/app/%E8%87%AA%E5%BE%8B%E7%9F%B3%E5%A4%B4-%E8%B5%B0%E8%B7%AF%E8%AF%BB%E4%B9%A6%E6%8D%A2%E6%97%B6%E9%97%B4-%E4%B8%8D%E5%81%9A%E6%89%8B%E6%9C%BA%E6%8E%A7/id6479392365" target="_blank" rel="noreferrer">自律石头</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041803.webp" alt="" loading="lazy"></p>
<p>一个 iOS 手机应用，可以限制指定 App 的使用时间，防止过度沉迷手机。（<a href="https://github.com/ruanyf/weekly/issues/4284" target="_blank" rel="noreferrer">@tuesda</a> 投稿）</p>
<p>12、<a href="https://www.soundbug.com/" target="_blank" rel="noreferrer">音虫</a>（SoundBug）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041804.webp" alt="" loading="lazy"></p>
<p>一款国产的音频工作站，用来音乐编曲和录音的制作工具，追求简洁直观的用户界面和易于上手的操作。（<a href="https://github.com/ruanyf/weekly/issues/4286" target="_blank" rel="noreferrer">@asoiso</a> 投稿）</p>
<p>13、<a href="https://github.com/kingwrcy/moments" target="_blank" rel="noreferrer">极简朋友圈</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041805.webp" alt="" loading="lazy"></p>
<p>一个仿照微信朋友圈 UI 的个人短博客网站，参见 <a href="https://m.mblog.club/" target="_blank" rel="noreferrer">Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4288" target="_blank" rel="noreferrer">@kingwrcy</a> 投稿）</p>
<p>14、<a href="https://github.com/dromara/newcar" target="_blank" rel="noreferrer">Newcar</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041806.webp" alt="" loading="lazy"></p>
<p>一个 JS 语言的前端动画引擎，基于 Skia 的WebAssembly 版本，在 Canvas 画布上生成动画。（<a href="https://github.com/ruanyf/weekly/issues/4287" target="_blank" rel="noreferrer">@sheepbox8646</a> 投稿）</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/gcui-art/suno-api" target="_blank" rel="noreferrer">Suno AI API</a>（非官方）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041401.webp" alt="" loading="lazy"></p>
<p>一个开源项目，为 Suno AI 提供 API，用于“文生音乐”。（<a href="https://github.com/ruanyf/weekly/issues/4262" target="_blank" rel="noreferrer">@blueeon</a> 投稿）</p>
<p>另有一个<a href="https://github.com/SunoApi/SunoApi" target="_blank" rel="noreferrer">类似项目</a>，提供非官方的 Web 客户端。（<a href="https://github.com/ruanyf/weekly/issues/4263" target="_blank" rel="noreferrer">@SunoApi</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041414.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://www.animefilter.online/" target="_blank" rel="noreferrer">头像的动漫转换</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041202.webp" alt="" loading="lazy"></p>
<p>基于 stable diffusion 模型，将头像照片转成三种动漫风格。（<a href="https://github.com/ruanyf/weekly/issues/4253" target="_blank" rel="noreferrer">@Lucas-YYB</a> 投稿）</p>
<p>3、<a href="https://stockcake.com/" target="_blank" rel="noreferrer">StockCake</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041408.webp" alt="" loading="lazy"></p>
<p>无版权的 AI 图片搜索引擎。</p>
<p>4、<a href="https://stocktune.com/" target="_blank" rel="noreferrer">StockTune</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041407.webp" alt="" loading="lazy"></p>
<p>无版权的 AI 音乐搜索引擎。</p>
<p>5、<a href="https://github.com/coder-hxl/x-crawl" target="_blank" rel="noreferrer">x-crawl</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041702.webp" alt="" loading="lazy"></p>
<p>一个 AI 辅助的爬虫库，基于 Node.js，抓取网页后，可以用文字描述所要的操作。（<a href="https://github.com/ruanyf/weekly/issues/4281" target="_blank" rel="noreferrer">@coder-hxl</a> 投稿）</p>
<p>6、<a href="https://github.com/315386775/DeepLearing-Interview-Awesome-2024" target="_blank" rel="noreferrer">DeepLearning Interview Awesome 2024</a></p>
<p>这个仓库收集 AI 的 面试题库。（<a href="https://github.com/ruanyf/weekly/issues/4278" target="_blank" rel="noreferrer">@315386775</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.urongda.com/" target="_blank" rel="noreferrer">中国大学矢量校徽合集</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041201.webp" alt="" loading="lazy"></p>
<p>高校校徽的矢量文件下载，目前收集了100多个校徽，还在不断增长中。（<a href="https://github.com/ruanyf/weekly/issues/4252" target="_blank" rel="noreferrer">@incidunt</a> 投稿）</p>
<p>2、<a href="https://pankajpipada.com/posts/2024-04-15-genai-resources/" target="_blank" rel="noreferrer">生成式 AI 和 LLM 学习资料</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041501.webp" alt="" loading="lazy"></p>
<p>一个老外整理的 AI 学习的网络资源，一共十几个，都是免费的。</p>
<p>3、<a href="https://linux-kernel-labs-zh.xyz/" target="_blank" rel="noreferrer">《Linux 内核实验》中文翻译</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041605.webp" alt="" loading="lazy"></p>
<p>布加勒斯特理工大学的 Linux 内核教学课程，动手实践设备驱动的编写。（<a href="https://github.com/ruanyf/weekly/issues/4269" target="_blank" rel="noreferrer">@hanyujie2002</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://mathtourist.blogspot.com/2009/02/pondering-artists-perplexing-tribute-to.html" target="_blank" rel="noreferrer">勾股定理的错误图片</a></p>
<p>2009年1月号的《大学数学杂志》（CMJ）的封面，是一张勾股定理的插图。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041409.webp" alt="" loading="lazy"></p>
<p>这张图片引起了很多数学家的议论，因为它是错的。</p>
<p>它的三条边长度之比是 2-3-4 ，所以这个三角形不可能是直角三角形，而是钝角三角形。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<strong>高速摄影的诞生</strong></p>
<blockquote>
<p>以下内容摘自科学作家瓦科拉夫·斯米尔（Vaclav Smil）的著作《数字不会撒谎》（Number Don't Lie）。</p>
</blockquote>
<p>1867年，美国加州的前州长找到了摄影师迈布里奇（Eadweard Muybridge，1830-1904），请他来解决一个古老的争议：<strong>马的四条腿在奔跑时是否都离开了地面？</strong></p>
<p>摄影师发现很难证明这一点，当时的快门不够快，他拍了许多照片，都看不清楚。</p>
<p>他不得不设法缩短快门时间，最终在1878年造出了快门速度1/1000秒的相机（每秒钟拍1000张），可以用来拍高速移动的物体。</p>
<p>1878年6月19日，结论性的一天来到了。摄影师在斯坦福大学的帕洛阿尔托农场，把底片装在一个高速滚动的圆盘上，拍摄了一系列奔跑的马。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023110607.webp" alt="" loading="lazy"></p>
<p>显然，在疾驰时，马的四只蹄子都离开了地面。</p>
<p>这种高速摄影的技巧被继承了下来，不断改进，速度从每秒1000张很快变成了每秒10000张。</p>
<p>1940年，旋转镜面相机的专利设计将速率提高到每秒100万张。</p>
<p>1999年，艾哈迈德·泽维尔（Ahmed Zewail）因开发一种光谱仪而获得诺贝尔化学奖，该光谱仪可以在飞秒（10<sup>-15</sup>秒）上捕获化学反应的过渡态。</p>
<p>今天，我们可以使用强烈的超快激光脉冲来捕获仅相隔阿秒（10<sup>-18</sup>秒）的事件，这种快门速度使得人们甚至有可能看到电子的运动。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>1986年，第一批癌症的放疗机上市，型号是Therac-25，使用电脑控制。但是使用后，发生了几起严重事故，病人的放射剂量大大超标。</p>
<p>事后发现，这不是硬件错误，而是软件错误。程序员没有考虑到键盘的连击，一旦操作人员击键速度快，发生连击，就会连续发出射线。</p>
<p>-- <a href="https://thedailywtf.com/articles/the-therac-25-incident" target="_blank" rel="noreferrer">《THERAC-25 事故》</a></p>
<p>2、</p>
<p>很多时候，我们觉得某样东西非常糟糕，但是其他人却很欣赏。</p>
<p>与其怀疑别人，不妨换个角度，假定那确实是很好的东西，然后尝试去理解它。有了这种态度，更容易学到新东西，并会为你省去很多挫折、误解和与他人的冲突。</p>
<p>-- <a href="https://stan.bar/appreciate/" target="_blank" rel="noreferrer">《你无法欣赏你不理解的东西》</a></p>
<p>3、</p>
<p>软件开发的最重要规则，始终是做最简单可行的事情。</p>
<p>不要做愚蠢的事情，也不要做明显行不通的事情，简单性是取得快速进步的最重要因素。</p>
<p>-- <a href="https://ronjeffries.com/xprog/articles/practices/pracsimplest/" target="_blank" rel="noreferrer">《做可能有效的最简单的事情》</a></p>
<p>4、</p>
<p>许多大型组织存在“死海效应”，那些更有才华、更高效的工程师最有可能离开，而没有才华和效率的工程师都留了下来，整个公司慢慢变成了一片死海。</p>
<p>-- <a href="https://brucefwebster.com/2008/04/11/the-wetware-crisis-the-dead-sea-effect/" target="_blank" rel="noreferrer">《死海效应》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/04/weekly-issue-250.html" target="_blank" rel="noreferrer">新技术的最大风险</a>（2023 #250）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/03/weekly-issue-200.html" target="_blank" rel="noreferrer">低期望，多尝试</a>（2022 #200）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/03/weekly-issue-150.html" target="_blank" rel="noreferrer">当音乐还是稀缺的时候</a>（2021 #150）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/03/weekly-issue-100.html" target="_blank" rel="noreferrer">零利率时代</a>（2020 #100）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202404/bg2024041107.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 296 期）：xz 后门的作者 Jia Tan 是谁？]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-296</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-296</guid>
            <pubDate>Fri, 12 Apr 2024 16:19:04 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
去年底建成的南昌东]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-296-期-xz-后门的作者-jia-tan-是谁" tabindex="-1">科技爱好者周刊（第 296 期）：xz 后门的作者 Jia Tan 是谁？ <a class="header-anchor" href="#科技爱好者周刊-第-296-期-xz-后门的作者-jia-tan-是谁" aria-label="Permalink to &quot;科技爱好者周刊（第 296 期）：xz 后门的作者 Jia Tan 是谁？&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4204" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040706.webp" alt="" loading="lazy"></p>
<p>去年底建成的南昌东站，以《滕王阁序》的“落霞与孤鹜齐飞，秋水共长天一色”为灵感，造型宛如展翅翱翔的羽翼，象征城市的腾飞。（<a href="https://www.sohu.com/a/747607834_791225" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="xz-后门的作者-jia-tan-是谁" tabindex="-1">xz 后门的作者 Jia Tan 是谁？ <a class="header-anchor" href="#xz-后门的作者-jia-tan-是谁" aria-label="Permalink to &quot;xz 后门的作者 Jia Tan 是谁？&quot;">&ZeroWidthSpace;</a></h2>
<p>互联网行业最近的重大事件，莫过于 <a href="https://boehs.org/node/everything-i-know-about-the-xz-backdoor" target="_blank" rel="noreferrer">xz 软件的后门</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040903.webp" alt="" loading="lazy"></p>
<p>xz 是一种压缩软件，大量用于 Linux 系统，比如系统管理器 systemD 就用它压缩日志。它是 Linux 的基本组件之一，每台服务器几乎都有它。</p>
<p>今年3月底，有人发现它的新版本有点奇怪，让 SSH 的启动时间慢了500毫秒。进一步调查发现，里面竟然有一个后门。</p>
<p>这件事震惊了业界，因为新版本即将纳入主要的 Linux 发行版（比如 Debian 和 Fedora），只差几天而已。到了那时，服务器带有后门，后果不堪设想。</p>
<p>而且，<strong>整个事件经过精心策划，过程长达数年，每一步都毫无破绽</strong>，心思之缜密，耐心之好，能力之强，令人后怕。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040902.webp" alt="" loading="lazy"></p>
<p>这个事件开始于2021年4月，一个网名叫做 Jia Tan 的人，第一次向 xz 软件包提交了一个正常的补丁，被顺利合并。</p>
<p>2021年11月和2022年4月，他又提交了两个正常的补丁，也被合并。</p>
<p>然后，突然冒出了几个网友，在邮件列表上向管理员建议，xz 项目缺乏人手，响应迟缓，应该给予 Jia Tan 管理员权限。这个建议被采纳了。但是，人们现在发现，这几个网友都是陌生的邮件地址和名字，根本找不到其他的活动痕迹。</p>
<p>就这样，Jia Tan 成为了管理员，拥有独立发布新版本的权限，先后发了几个版本。虽然他的这些代码可能是无害的，但是扩展了功能，为后面要做的坏事打下了基础。</p>
<p>2024年2月，他添加了后门。代码做了混淆，而且后门不在源代码里面，要在构建阶段才会生成，很难发现。他发了这个版本以后，就开始发信，催促几个大型发行版，尽快收入这个版本。</p>
<p><strong>后门曝光后，Jia Tan 就彻底消失了</strong>，没有任何身份信息，也没有其他痕迹，谁也不知道他到底是谁。人们开始搜集线索，试图找出这个人。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040904.webp" alt="" loading="lazy"></p>
<p>他的网名是汉语拼音，邮件全名是 Jia Cheong Tan，中间的 Cheong 似乎是粤语。他的 GitHub 提交时间采用东八时区。他的 IP 地址是新加坡。</p>
<p><strong>一切都在指向，他是一个在新加坡的华人。真的是这样吗？</strong></p>
<p>网名显然是假的，代码提交时间可以更改，至于 IP 地址，已经查明是 VPN 地址。</p>
<p><strong>有没有一种可能，他伪装成华人，栽赃给中国？</strong></p>
<p>有人<a href="https://rheaeve.substack.com/p/xz-backdoor-times-damned-times-and" target="_blank" rel="noreferrer">分析了</a>，他在 GitHub 的所有提交。虽然提交时间可以更改，但也不能改得太过分，毕竟要保持提交顺序和及时性，所以还是能看出一点东西。</p>
<p>他的提交，绝大部分采用东八时区的时间，但是有一些是东二时区和东三时区。</p>
<p>研究者相信，<strong>他很可能是一个东二时区的欧洲人，伪装成东八时区的中国人</strong>。他更改了计算机的时区，但是偶尔有几次忘记了更改。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040905.webp" alt="" loading="lazy"></p>
<p>东二时区的国家（上图的绿色部分），主要是东欧国家，以及一部分北欧国家（芬兰和瑞典）和中东国家（以色列和埃及）。</p>
<p>他来自东二时区，主要理由有三点。</p>
<p>（1）他在东二时区的提交日期是冬季，而东三时区的提交日期是夏季。这正好符合欧洲国家和以色列的夏令时切换。</p>
<p>（2）他明显在手动切换时区。举例来说，2022年10月6日，他先在东八时区的17:00:38进行了一次提交，然后又在东三时区的21:53:09再次提交。两次相差不到十个小时，很难相信这一点时间，他已经从中国来到欧洲写代码。</p>
<p>（3）他在中国的农历假日（中秋节、清明节、春节）都有提交，尤其是2023年春节假期（1月21日到1月27日），他有五天提交记录（分别是22日、23日、24日、26日、27日），这说明他不过春节。相反地，他在欧洲人很重视的假期（圣诞节和新年）却没有提交记录。</p>
<p>综上所述，这个 Jia Tan 很可能来自东二时区。不过，这个人（或者组织）非常小心，而且是技术高手，也许永远也发现不了真实身份。</p>
<p>这件事情提醒我们，开源社区的参与者形形色色，不全是好人，有些人非常阴险，不仅干坏事，还伪装身份，栽赃给他人。因此，我们对他人保持善意的同时，也不能丢失警惕。已经有人提议，重要的开源项目不能接受匿名身份的代码提交者。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.spoon-tamago.com/2531-sato-surname-problem/" target="_blank" rel="noreferrer">日本人都姓佐藤</a></p>
<p>一个日本大学教授警告，如果不改变人口下降的趋势，到了2531年，所有日本人都会姓佐藤（sato）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040206.webp" alt="" loading="lazy"></p>
<p>佐藤是日本目前最常见的姓氏，占总人口的1.5%。由于日本人口正在下降，罕见姓氏不断消失，人口向大姓集中。</p>
<p>而且，日本有法律，强制要求女性婚后改用夫家的姓氏，导致小姓更难生存。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040205.webp" alt="" loading="lazy"></p>
<p>（图片说明：某场比赛时，球员姓氏都是佐藤。）</p>
<p>根据调查，2022年至2023年间，佐藤姓氏增长率高达0.83%。也就是说，总人口在减少，但是佐藤氏在增加。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040207.webp" alt="" loading="lazy"></p>
<p>根据教授的计算，以这个增长率，到了2531年，日本将不存在第二个姓氏，所有人都姓佐藤。</p>
<p>为了警示日本国民，他还办了一个“<a href="https://think-name.jp/" target="_blank" rel="noreferrer">佐藤问题网站</a>”，提出急需改变女性婚后改夫姓的问题。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040204.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://www.theguardian.com/environment/2024/mar/24/birding-online-community-10000-species" target="_blank" rel="noreferrer">观察最多鸟类的人</a></p>
<p><a href="https://igoterra.com" target="_blank" rel="noreferrer">iGoTerra</a> 是一个野生动物网上社区，用来记录和管理自己看到的野生动物。</p>
<p>它有一个<a href="https://igoterra.com/rankings?group=33&amp;rank=8&amp;area=312025&amp;year=-1&amp;observedSeen=1" target="_blank" rel="noreferrer">榜单</a>，列出看到最多鸟类的用户排名。最近，该榜单诞生了有史以来第一位看到超过10000种鸟的人。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040303.webp" alt="" loading="lazy"></p>
<p>创造记录的是一位70岁的美国退休外交官 Peter Kaestner。下图是2024年2月9日他在菲律宾拍到的捕蜘鸟，这是他看到的第10,000种鸟。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040304.webp" alt="" loading="lazy"></p>
<p>这个记录是不可思议的，因为已知的鸟类大约只有1.1万种，这意味着他几乎见过地球上所有鸟。</p>
<p>技术帮助鸟类观察者创造记录。机器学习现在可以从照片中自动认出，这是哪一种鸟，甚至从叫声也可以分辨鸟类，iGoTerra 社区则让爱好者分享在哪里可以看到什么鸟。</p>
<p>另外，由于对于鸟类的理解在发展，物种被不断细分，很多新的鸟类因此诞生。这也是能够突破10000大关的原因之一。</p>
<p>不过，iGoTerra 只要求上传照片或鸟叫的录音作为证据，并不会对真实性进行审核。</p>
<p>3、<a href="https://www.vintag.es/2024/04/steve-wozniak-working-in-garage.html" target="_blank" rel="noreferrer">苹果公司的起源</a></p>
<p>本月，苹果公司庆祝<a href="https://www.benzinga.com/markets/equities/24/04/38023363/happy-48-apple-if-you-invested-1000-in-apple-when-it-went-public-heres-how-much-youd-have" target="_blank" rel="noreferrer">成立48周年</a>。这家公司是在1976年4月1日由乔布斯和史蒂夫·沃兹尼亚克在美国加州成立的。</p>
<p>当时，他们两个在乔布斯父母的车库里面，组装电脑的电路板对外销售。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040208.webp" alt="" loading="lazy"></p>
<p>车库非常简陋，下面是当时的一些照片，沃兹尼亚克一个人在干活。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040209.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040210.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040211.webp" alt="" loading="lazy"></p>
<p>两位创始人恐怕都没有料到，苹果后来会发展得这么大，真可谓“作始也简，将毕也巨”。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.163.com/dy/article/IVGAHL7K0511ABV6.html" target="_blank" rel="noreferrer">史上首位图灵和阿贝尔双料获奖者</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041108.webp" alt="" loading="lazy"></p>
<p>计算机科学的最高奖“图灵奖”刚刚揭晓，普林斯顿高等研究院的数学教授艾维·维格森（Avi Wigderson）。他还拿过数学界的最高奖“阿贝尔奖”，是唯一一位双料获奖者。</p>
<p>2、<a href="https://joshcollinsworth.com/blog/antiquated-react" target="_blank" rel="noreferrer">可以替代 React 的框架</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023081606.webp" alt="" loading="lazy"></p>
<p>这篇长文对 React 框架提出批评，认为它的很多做法已经过时。文章后半部分介绍了各种可以替代 React 的前端框架。</p>
<p>3、<a href="https://greptime.com/blogs/2024-03-19-keyboard-monitoring" target="_blank" rel="noreferrer">如何生成键盘输入统计看板</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040306.webp" alt="" loading="lazy"></p>
<p>本文介绍使用一个 Python 脚本，统计用户在当前计算机按下了什么键。（<a href="https://github.com/ruanyf/weekly/issues/4195" target="_blank" rel="noreferrer">@tisonkun</a> 投稿）</p>
<p>4、<a href="https://www.zdnet.com/article/4-things-claude-ai-can-do-that-chatgpt-cant/" target="_blank" rel="noreferrer">Claude AI 能做，而 ChatGPT 不能做的四件事</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023090711.webp" alt="" loading="lazy"></p>
<p>Claude 是 Anthropic 公司推出的大规模语言模型，有免费版和收费的 <a href="https://www.zdnet.com/article/anthropic-unveils-claude-pro-a-paid-subscription-plan-for-its-chatgpt-rival/" target="_blank" rel="noreferrer">Pro 版</a>。本文比较了 Claude 强于 ChatGPT 的四个地方。</p>
<p>5、<a href="https://linuxiac.com/how-to-set-up-caddy-as-reverse-proxy/" target="_blank" rel="noreferrer">如何将 Caddy 作为反向代理</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032907.webp" alt="" loading="lazy"></p>
<p>一篇初学者教程，介绍如何用 Caddy 架设反向代理服务器，它的设置比 nginx 简单，而且自动生成和更新 HTTPS 证书。</p>
<p>6、<a href="https://overreacted.io/goodbye-clean-code/" target="_blank" rel="noreferrer">我后悔重构了代码</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120807.webp" alt="" loading="lazy"></p>
<p>著名程序员 Dan Abramov 的一篇旧文。他曾经觉得同事的代码太冗余，就擅自重构了，让其变得干净。</p>
<p>但是，他后来认识到，那些冗余的代码有可取之处，抽象反而不利于日后的扩展。</p>
<h2 id="ai-相关" tabindex="-1">AI 相关 <a class="header-anchor" href="#ai-相关" aria-label="Permalink to &quot;AI 相关&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="http://chatgpt.com/" target="_blank" rel="noreferrer">ChatGPT</a></p>
<p>OpenAI 宣布，ChatGPT 取消注册要求，不登录就可以使用。但是，收费的功能（比如 ChatGPT 4 和 DALL-E）还是必须登录。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040201.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://www.opera.com/zh-cn" target="_blank" rel="noreferrer">Opera</a></p>
<p>Opera 浏览器<a href="https://press.opera.com/2024/04/03/ai-feature-drops-local-llms/" target="_blank" rel="noreferrer">宣布</a>，通过它就能安装和使用50多个 AI 模型（每个模型占用大约 2GB 空间），大大简化了本地计算机使用 AI 的难度。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040401.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://www.suno.ai/" target="_blank" rel="noreferrer">Suno AI</a></p>
<p>Suno AI 是一个“文生音乐”的服务。网友的<a href="https://sunoprompt.com/" target="_blank" rel="noreferrer">这个工具</a>帮助你生成它的提示词，可以调整各种细节。（<a href="https://github.com/ruanyf/weekly/issues/4194" target="_blank" rel="noreferrer">@Lcorinst</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040305.webp" alt="" loading="lazy"></p>
<p>另有一个 <a href="https://sunoaidownload.com/" target="_blank" rel="noreferrer">Suno AI 音乐下载器</a>。（<a href="https://github.com/ruanyf/weekly/issues/4250" target="_blank" rel="noreferrer">@AICodeHunt</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041104.webp" alt="" loading="lazy"></p>
<p>4、<a href="https://artiversehub.ai/prompt-marketplace" target="_blank" rel="noreferrer">Free Prompt Market</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040311.webp" alt="" loading="lazy"></p>
<p>一个收集各种文生图 AI 模型的提示词的网站，可以作为参考工具。（<a href="https://github.com/ruanyf/weekly/issues/4209" target="_blank" rel="noreferrer">@leoli202303</a> 投稿）</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://vivirenremoto.github.io/doomcaptcha/" target="_blank" rel="noreferrer">DOOM 验证码</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032906.webp" alt="" loading="lazy"></p>
<p>DOOM 游戏被用作网页验证码，只有消灭指定数目的敌人，才能通过验证。</p>
<p>2、<a href="https://github.com/OneUptime/oneuptime" target="_blank" rel="noreferrer">OneUptime</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040301.webp" alt="" loading="lazy"></p>
<p>一个开源的服务可用性检查工具，记录服务的健康状态，如果发现服务下线，立刻发送通知，可以替代 <a href="https://www.statuspage.io/" target="_blank" rel="noreferrer">StatusPage.io</a>。</p>
<p>3、<a href="https://github.com/dashpresshq/dashpress" target="_blank" rel="noreferrer">DashPress</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040302.webp" alt="" loading="lazy"></p>
<p>一个开源工具，只需执行一个命令，就会自动分析数据库结构，生成管理后台，号称不用写代码。</p>
<p>4、<a href="https://github.com/weijunext/landing-page-boilerplate" target="_blank" rel="noreferrer">Landing page boilerplate</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040307.webp" alt="" loading="lazy"></p>
<p>开源的项目落地页模板，参见<a href="https://juejin.cn/post/7350200488455520267" target="_blank" rel="noreferrer">介绍文章</a>。（<a href="https://github.com/ruanyf/weekly/issues/4197" target="_blank" rel="noreferrer">@weijunext</a> 投稿）</p>
<p>5、<a href="https://github.com/qiweiii/github-custom-notifier" target="_blank" rel="noreferrer">GitHub Custom Notifier</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040308.webp" alt="" loading="lazy"></p>
<p>一个开源的浏览器插件，用来监听 GitHub 官方没有提供的一些事件（比如创建 label），事件发生时，浏览器就会发送通知。（<a href="https://github.com/ruanyf/weekly/issues/4199" target="_blank" rel="noreferrer">@qiweiii</a> 投稿）</p>
<p>6、<a href="https://github.com/heyform/heyform" target="_blank" rel="noreferrer">HeyForm</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040310.webp" alt="" loading="lazy"></p>
<p>一个开源的表单生成器，创建调查、问卷、投票等，可以不编写一行代码。（<a href="https://github.com/ruanyf/weekly/issues/4207" target="_blank" rel="noreferrer">@iMuFeng</a> 投稿）</p>
<p>7、<a href="https://github.com/dafengzhen/youdeyiwu" target="_blank" rel="noreferrer">Youdeyiwu</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040312.webp" alt="" loading="lazy"></p>
<p>一个开源的轻量级论坛，追求界面简洁和使用方便，后端使用 Java，前端使用 Next.js。（<a href="https://github.com/ruanyf/weekly/issues/4211" target="_blank" rel="noreferrer">@dafengzhen</a> 投稿）</p>
<p>8、<a href="https://genji-md.dev/" target="_blank" rel="noreferrer">Markdown Genji</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040313.webp" alt="" loading="lazy"></p>
<p>VitePress 的一个插件，用于在 Markdown 文档插入可以执行的代码块，创建交互式文档。（<a href="https://github.com/ruanyf/weekly/issues/4212" target="_blank" rel="noreferrer">@pearmini</a> 投稿）</p>
<p>9、<a href="https://github.com/ruanyf/weekly/issues/4222" target="_blank" rel="noreferrer">Mutative</a></p>
<p>一个操作不可变状态的 JS 库，追求高效。（<a href="https://github.com/ruanyf/weekly/issues/4222" target="_blank" rel="noreferrer">@unadlib</a> 投稿）。</p>
<p>10、<a href="https://github.com/0x2E/fusion" target="_blank" rel="noreferrer">Fusion</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040501.webp" alt="" loading="lazy"></p>
<p>一个轻量、简洁的 RSS 聚合和阅读器，使用 Go + Svelte 开发。（<a href="https://github.com/ruanyf/weekly/issues/4223" target="_blank" rel="noreferrer">@0x2E</a> 投稿）</p>
<p>11、<a href="https://github.com/nashaofu/node-screenshots" target="_blank" rel="noreferrer">node-screenshots</a></p>
<p>一个跨平台、零依赖的 Node.js 模块，用于截图和录屏。（<a href="https://github.com/ruanyf/weekly/issues/4224" target="_blank" rel="noreferrer">@nashaofu</a> 投稿）</p>
<p>12、<a href="https://github.com/Bistutu/FluentRead" target="_blank" rel="noreferrer">流畅阅读</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040707.webp" alt="" loading="lazy"></p>
<p>一款浏览器翻译插件，支持人工智能引擎。（<a href="https://github.com/ruanyf/weekly/issues/4230" target="_blank" rel="noreferrer">@Bistutu</a> 投稿）</p>
<p>13、<a href="https://github.com/lesderid/keynavish" target="_blank" rel="noreferrer">keynavish</a></p>
<p>使用键盘控制鼠标运动的 Windows 软件。（<a href="https://github.com/ruanyf/weekly/issues/55" target="_blank" rel="noreferrer">@NomandChan</a> 投稿）</p>
<p>14、<a href="https://github.com/k8zdev/k8z" target="_blank" rel="noreferrer">K8Z</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024041002.webp" alt="" loading="lazy"></p>
<p>管理 Kubernetes 的开源工具，有手机客户端和桌面客户端。（<a href="https://github.com/ruanyf/weekly/issues/4246" target="_blank" rel="noreferrer">@kofj</a> 投稿）</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://qufei1993.github.io/nextjs-learn-cn" target="_blank" rel="noreferrer">Learn Next.js 中文教程</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040309.webp" alt="" loading="lazy"></p>
<p>Next.js <a href="https://nextjs.org/learn" target="_blank" rel="noreferrer">官方教程</a>的中文翻译，构建一个全栈 Web 应用程序。（<a href="https://github.com/ruanyf/weekly/issues/4206" target="_blank" rel="noreferrer">@qufei1993</a> 投稿）</p>
<p>2、<a href="https://3dp.ing/" target="_blank" rel="noreferrer">3DP.ing</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040602.webp" alt="" loading="lazy"></p>
<p>一个 3D 打印模型的搜索引擎，特点是使用图片搜索。（<a href="https://github.com/ruanyf/weekly/issues/4227" target="_blank" rel="noreferrer">@wangasa</a> 投稿）</p>
<p>3、<a href="https://1000userguide.com" target="_blank" rel="noreferrer">1000UserGuide</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040901.webp" alt="" loading="lazy"></p>
<p>该网站整理了300多个免费推广渠道，包括网站、论坛、网址导航、产品目录等，帮助独立开发者推广产品。（<a href="https://github.com/ruanyf/weekly/issues/4240" target="_blank" rel="noreferrer">@naxiaoduo</a> 投稿）</p>
<p>4、<a href="https://github.com/zhuima/awesome-cloudflare" target="_blank" rel="noreferrer">Awesome Cloudflare</a></p>
<p>这个仓库收集基于 Cloudflare 服务的各种开源软件。（<a href="https://github.com/ruanyf/weekly/issues/4244" target="_blank" rel="noreferrer">@zhuima</a> 投稿）</p>
<p>5、<a href="https://github.com/rogerzhu/-bgnet0-cn/tree/main/src" target="_blank" rel="noreferrer">Beej's Guide to Network Concepts 中译</a></p>
<p>网友对<a href="https://beej.us/guide/bgnet0/" target="_blank" rel="noreferrer">《Beej's Guide to Network Concepts》</a>一书的中文翻译。（<a href="https://github.com/ruanyf/weekly/issues/4248" target="_blank" rel="noreferrer">@rogerzhu</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.cnn.com/travel/california-highway-1-damage-big-sur/index.html" target="_blank" rel="noreferrer">加州一号公路</a></p>
<p>加州一号公路从旧金山直到洛杉矶，就建在海岸山脉上，一路沿着太平洋，风景十分优美。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040203.webp" alt="" loading="lazy"></p>
<p>但是，正因为建在海边悬崖上，这条公路经常发生地质灾害。本月就发生了崩塌，一部分公路掉进了太平洋，不得不暂时封闭。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202404/bg2024040202.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://www.nasa.gov/image-article/craters-edge/" target="_blank" rel="noreferrer">梅子坑</a></p>
<p>梅子坑（plum crater）是一个小型的月球陨石撞击坑，直径约40米，深约10米。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032901.webp" alt="" loading="lazy"></p>
<p>这个陨石坑之所以特别，是因为人类访问过这个地方。</p>
<p>1972年4月21日，阿波罗16号飞船的登月地点，就在梅子坑附近。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032902.webp" alt="" loading="lazy"></p>
<p>宇航员实地考察了这个陨石坑。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032904.webp" alt="" loading="lazy"></p>
<p>当年的脚印至今清晰可见（下图）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032903.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://theconversation.com/what-are-roundabouts-a-transportation-engineer-explains-the-safety-benefits-of-these-circular-intersections-215412" target="_blank" rel="noreferrer">环岛的作用</a></p>
<p>开车时，你可能已经遇到许多环岛。</p>
<p>你有没有想过，这些路口为什么要造环岛？没有环岛，行车面积不就更大了吗？</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023102603.webp" alt="" loading="lazy"></p>
<p>本质上，环岛上是一种交通控制措施，相比交通灯控制的传统交叉路口，它们具有多种优势，最重要的一个是安全性。</p>
<p>首先，环岛迫使司机放慢速度，为了调整车头方向，司机不得降速。</p>
<p>其次，环岛减少了潜在冲突点的数量。冲突点就是车辆与车辆、车辆与行人可能发生碰撞的位置，它的数量越多，就越容易发生碰撞。</p>
<p>根据一项研究，环岛只有8个潜在冲突点，而传统的四向交叉路口有32个。</p>
<p>最后，环岛的车道都是紧密相邻的同心圆，并且还有很多进口和出口，迫使车辆减速让行。</p>
<p>根据美国公路管理局估计，环岛取代传统的交叉路口时，可将严重交通事故减少80%到90%。</p>
<p>除了安全性，环岛还有一些其他优点，比如让交通更有秩序，不会出现车辆在交叉路口乱成一团的情形，也能让司机更轻松地掉头。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>马斯克的管理风格非常独特，他不需要非技术性的中层管理人员，员工表现不佳就会被裁，也不喜欢大型会议。</p>
<p>-- <a href="https://finance.sina.cn/7x24/2024-03-30/detail-inaqasmq1380352.d.html" target="_blank" rel="noreferrer">前特斯拉 AI 总监安德烈·卡帕西</a></p>
<p>2、</p>
<p>有一种开发模式，叫做“头条新闻驱动法”，将项目分解成一个个头条新闻。</p>
<p>选择一个日期，可以发布第一个头条新闻，然后拼命工作在该日期发布，接着转到下一个头条新闻，重复上面的过程。</p>
<p>-- <a href="https://www.spakhm.com/headline-development" target="_blank" rel="noreferrer">《头条新闻驱动法》</a></p>
<p>3、</p>
<p>我们有一栋房子的 WiFi，只在下雨时可用。后来，我发现了原因。</p>
<p>它的 WiFi 是通过桥接器连接另一栋房子的 WiFi，窗外的树长高了，挡住了对面房子的信号。下雨时，雨水压低了树叶，信号就又通了。</p>
<p>-- <a href="https://predr.ag/blog/wifi-only-works-when-its-raining/" target="_blank" rel="noreferrer">《WiFi 在下雨时可用》</a></p>
<p>4、</p>
<p>每年冬天，室内供暖消耗大量能源。如果我们能够发明更舒适、更保暖的保暖内衣，就可以减少能源消耗，同时不牺牲轻便感。保暖内衣允许我们大幅调低供暖温度，并且成本几乎为零。</p>
<p>-- <a href="https://solar.lowtechmagazine.com/2011/02/insulation-first-the-body-then-the-home/" target="_blank" rel="noreferrer">《先保暖身体，再保暖房间》</a></p>
<p>5、</p>
<p>节省几次击键的工具被高估了，保持注意力专注的工具被低估了。</p>
<p>-- <a href="https://www.johndcook.com/blog/2023/01/29/small-scale-automation/" target="_blank" rel="noreferrer">《小型自动化》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/04/weekly-issue-249.html" target="_blank" rel="noreferrer">最成功的软件企业家</a>（2023 #249）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/03/weekly-issue-199.html" target="_blank" rel="noreferrer">俄罗斯的 HTTPS 证书问题</a>（2022 #199）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/03/weekly-issue-149.html" target="_blank" rel="noreferrer">新能源汽车，谁会是赢家？</a>（2021 #149）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/03/weekly-issue-99.html" target="_blank" rel="noreferrer">疫情导致的研究生扩招</a>（2020 #99）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202404/bg2024040706.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 295 期）：巧妙的灯泡钟]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-295</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-295</guid>
            <pubDate>Fri, 29 Mar 2024 16:19:45 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。（[通知] 下周清明节假期，周刊暂停一次。）
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmai]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-295-期-巧妙的灯泡钟" tabindex="-1">科技爱好者周刊（第 295 期）：巧妙的灯泡钟 <a class="header-anchor" href="#科技爱好者周刊-第-295-期-巧妙的灯泡钟" aria-label="Permalink to &quot;科技爱好者周刊（第 295 期）：巧妙的灯泡钟&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。（<strong>[通知] 下周清明节假期，周刊暂停一次。</strong>）</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4075" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031801.webp" alt="" loading="lazy"></p>
<p>山东日照的“在水美术馆”，是一座水上美术馆，长达一公里。春秋季节，它的外墙玻璃还可以打开，让室内室外融为一体。（<a href="https://m.thepaper.cn/newsDetail_forward_24815035" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="巧妙的灯泡钟" tabindex="-1">巧妙的灯泡钟 <a class="header-anchor" href="#巧妙的灯泡钟" aria-label="Permalink to &quot;巧妙的灯泡钟&quot;">&ZeroWidthSpace;</a></h2>
<p>本周，分享一个构思很巧妙的<a href="https://ironicsans.beehiiv.com/p/life-death-bulbdial-clock" target="_blank" rel="noreferrer">灯泡钟</a>。</p>
<p>它的灵感来自日晷。我们知道，日晷是一种古代计时工具，根据太阳投影的位置，判断当前的时间。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032412.webp" alt="" loading="lazy"></p>
<p>2008年，一位美国设计师突发奇想，能不能把日晷做成一个现代的时钟？</p>
<p>他很快发现，这不可行。因为太阳投影的位置在每个纬度都不一样，做不了固定的钟面，而且只有白天有投影（下图），晚上和阴雨天都不能用。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032411.webp" alt="" loading="lazy"></p>
<p>（图片说明：日晷只在上午7点到下午5点之间可用。）</p>
<p>但是，那个发明家受到了启发，意识到阴影可以表示时间，就提出了“灯泡钟”的设想。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032413.webp" alt="" loading="lazy"></p>
<p>灯泡钟是一个圆盘，圆心位置有一根垂直的棍子，周围有三圈轨道。每圈轨道上安装了一个不同高度的灯泡，对着棍子进行光照，会在钟面上投下阴影。</p>
<p>这里的关键是这三圈轨道都围绕圆心旋转，但是转速不同，分别为60秒/圈、60分钟/圈、12小时/圈，代表秒、分钟、小时。</p>
<p>因此，三个灯泡的位置是不断变化的，它们投下的阴影也随之变化，形成秒针、分针和时针，从而构成当前时间。</p>
<p>这个设计真的很巧妙，而且制造难度不大。它的缺点是通过影子显示时间，只在昏暗的环境可见（比如餐厅、夜总会、电影院），明亮的地方就会看不见指针。</p>
<p>那个发明家并不是真的想造这个钟，只把它当作一个奇思妙想，写了一篇文章，公开在网上。没想到有人看到了，真的把这个钟造出来了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032414.webp" alt="" loading="lazy"></p>
<p>为了降低成本，实物版的“灯泡钟”没有采用旋转轨道，而是去掉了机械部分，改为三圈灯环，分别安装了60个、60个和12个 LED 灯泡，同一时间每圈只亮一个灯，对应当前的小时、分钟和秒。</p>
<p>为了便于区分，这三圈 LED 的颜色还不一样，做成了红绿蓝三原色，三个阴影就是三种颜色。</p>
<p>后来，这个设计正式投产了，变成了可以购买的商品。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032415.webp" alt="" loading="lazy"></p>
<p>拆开以后，内部是这样的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032416.webp" alt="" loading="lazy"></p>
<p>可以看到，这个成品一点都不酷，外观根本不吸引人，销量很差也就不奇怪了。</p>
<p>最终，这家公司倒闭关门了，灯泡钟也被放弃，不过所有设计图纸都<a href="https://wiki.evilmadscientist.com/Bulbdial" target="_blank" rel="noreferrer">开源</a>了。</p>
<p>于是，网上陆续出现了很多基于开源方案的衍生品，爱好者纷纷做出自己的灯泡钟，下面就是其中两个。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032417.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032418.webp" alt="" loading="lazy"></p>
<p>它们的共同点是没有实体指针，都采用灯泡投影显示时间。</p>
<p>我觉得，灯泡钟这个设想很酷，做起来也不难，是很好的电子电路玩具项目，感兴趣的朋友不妨动手试试。</p>
<h2 id="harmonyos-next-的开发方案" tabindex="-1">HarmonyOS NEXT 的开发方案 <a class="header-anchor" href="#harmonyos-next-的开发方案" aria-label="Permalink to &quot;HarmonyOS NEXT 的开发方案&quot;">&ZeroWidthSpace;</a></h2>
<p>华为的鸿蒙系统（HarmonyOS）是一个独特的存在。以前，它基于安卓开源版本 ASOP，兼容安卓应用，不用为它做单独的开发。但是，现在不一样了。</p>
<p>华为确定，今年秋季发布 <strong>HarmonyOS NEXT</strong>。这是一个全新的操作系统，不兼容安卓。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032707.webp" alt="" loading="lazy"></p>
<p>这意味着，<strong>各种应用必须重新开发一次客户端</strong>，从零开始，做一个跟现有安卓/苹果客户端功能完全一样的 App，成本何其大。</p>
<p>但是，这个问题又避不开。国内安卓用户中，华为市占率最高，而且普遍都是中高端系列。如果再仔细一点，还能发现华为用户的付费率也是安卓中最高的。</p>
<p>根据第三方统计，截止2023年第一季度，鸿蒙系统的市场占有率已经在8%以上，且还在逆势增长。虽然这些都是鸿蒙，还不是鸿蒙 NEXT，但对于开发者而言，适配鸿蒙 NEXT 只是时间问题。</p>
<p>政府明确支持 HarmonyOS NEXT，<a href="http://www.news.cn/local/20240303/dca3e6d4bd734380b4dc9602d5df9b76/c.html" target="_blank" rel="noreferrer">深圳</a>、<a href="https://m.21jingji.com/timeline/6d9b6fd73a5bc98a293edc724554a46e.html" target="_blank" rel="noreferrer">上海</a>、<a href="https://www.fuzhou.gov.cn/zwgk/gb/202301/t20230111_4520047.htm" target="_blank" rel="noreferrer">福州</a>都已经出台了政策扶植，很多头部 App（比如小红书、支付宝）已经在着手适配这个新系统了。</p>
<p>对于大型互联网公司，适配 HarmonyOS NEXT 只是工程师的分配问题，但是对于中小型公司，这就成了一个头痛的难题，开发团队本身就资源不够，难道还要再另外寻找鸿蒙工程师吗？怎么负担这部分成本啊。</p>
<p>对于中小应用，其实有一个简单的方法，可以解决鸿蒙适配问题。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032702.webp" alt="" loading="lazy"></p>
<p>我们知道，H5 是移动平台兼容性最好的开发技术。它的代码不改动或者少量改动，就可以在多种系统中运行，典型的例子就是小程序。</p>
<p>目前，很多应用都有微信小程序版本，如果有一种工具，可以<strong>把微信小程序转成鸿蒙原生 App</strong>，就为大多数中小应用提供了一种简单可行的适配方案。</p>
<p>国产软件 <a href="https://www.finclip.com/" target="_blank" rel="noreferrer">FinClip</a> 就是这样一种工具。它是一个小程序容器，或者说是小程序 SDK，能够不改动一行代码，就让微信小程序、支付宝卡片在其中运行。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032706.webp" alt="" loading="lazy"></p>
<p>它的开发目的，就是让小程序能够不依赖于宿主（微信/支付宝），独立运行在多种环境中。它兼容微信小程序语法与登录体系，能够让小程序直接在其上运行，目前已经支持安卓、iOS、鸿蒙 NEXT、Flutter、Windows、车机等。</p>
<p>因此，我们可以用它<strong>一键将小程序转为鸿蒙 NEXT 原生 App</strong>。它的鸿蒙版 SDK 功能与安卓、iOS 保持一致，所有开发组件、接口均与微信对标。<u>本质上，它提供一个鸿蒙 NEXT 的适配层，让小程序直接在这个适配层上运行，并将它们打包在一起，形成一个独立 App</u>。</p>
<p>同时，它作为适配层，可以同时容纳多个小程序。也就是说，你也可以用它作为平台，让现有的各种微信小程序在里面上架，做成一个自己的超级 App。</p>
<p>总之，对于现有的微信小程序，<a href="https://www.finclip.com/" target="_blank" rel="noreferrer">FinClip</a> 是一个相当简单的鸿蒙 NEXT 适配方案。欢迎大家注册体验，还能抽取 Mate 60 Pro、MatePad 11 等。对技术或者产品有问题的小伙伴，也可进群交流。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032814.webp" alt="" loading="lazy"></p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.smithsonianmag.com/smart-news/wild-kiwis-born-near-new-zealands-capital-for-the-first-time-in-more-than-150-years-180983386/" target="_blank" rel="noreferrer">奇异鸟</a></p>
<p>新西兰的国鸟是“奇异鸟”，英语叫做 kiwi。它是一种珍稀鸟类，除了新西兰，其他国家都没有。</p>
<p>它不会飞，大小跟鸡差不多，最大特点就是嘴特别长。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120714.webp" alt="" loading="lazy"></p>
<p>它曾经在新西兰大量存在，但自从白貂19世纪引入新西兰后，它被白貂捕食，数量每年减少2%～3%。目前仅存6.8万只左右，如果不采取措施，将在今后几十年内灭绝。</p>
<p>为了保证它的野外生存，新西兰政府2022年在首都惠灵顿郊外，划了一块保护区，放置了4600个陷阱，把白貂抓干净，然后放养了60多只奇异鸟。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120715.webp" alt="" loading="lazy"></p>
<p>2023年11月，保护人员惊喜地发现，那里多了两只野生奇异鸟宝宝。这是150多年来，新西兰首都地区首次有野生奇异鸟诞生。</p>
<p>2、<a href="https://web.archive.org/web/20231210161239/https://www.scientificamerican.com/article/tyrannosaurs-stomach-contents-have-been-found-for-the-first-time/" target="_blank" rel="noreferrer">霸王龙吃什么</a></p>
<p>霸王龙又称暴龙，是已知最重、最凶猛的肉食恐龙。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121104.webp" alt="" loading="lazy"></p>
<p>但是，它是肉食动物属于科学家的推测，并没有直接证据，能够证明它吃肉。科学家只是根据它的锋利牙齿、爪子，以及粪便化石，推测它是食肉动物。</p>
<p>最近，直接证据终于发现了。科学家找到一块小霸王龙的化石（下图），它的胃里有其他恐龙的残骸。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121105.webp" alt="" loading="lazy"></p>
<p>这件事告诉我们，古生物学是一个多么困难的学科，仅有的证据就是一两块化石，要像侦探一样，从石头里面找出蛛丝马迹。</p>
<p>3、<a href="https://www.core77.com/posts/125315/A-Wearable-Mouse" target="_blank" rel="noreferrer">手指鼠标</a></p>
<p>一家德国创业公司发明了手指鼠标，夹在两根手指上使用。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023081501.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023081502.webp" alt="" loading="lazy"></p>
<p>它内部含有陀螺仪，可以感知手的移动，以及手指的动作，比如左键、右键、双击、滚动等。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023081503.webp" alt="" loading="lazy"></p>
<p>它通过蓝牙与外部设备连接，非常适合随身携带，目前售价是65美元（约470元人民币）。</p>
<p>4、<a href="https://apnews.com/article/chatgpt-gpt4-iowa-ai-water-consumption-microsoft-f551fde98083d17a7e8d904f8be822c4" target="_blank" rel="noreferrer">服务器耗水</a></p>
<p>大型互联网公司都是用水大户，因为机房的服务器需要用水冷却。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091103.webp" alt="" loading="lazy"></p>
<p>微软公司最近披露，它的2022年用水量比2021年猛增34%，增加了644万吨水，相当于2,500多个国际标准泳池的用水。</p>
<p>外界认为，这是因为微软在2022年中，开始进行大量 AI 计算，从而增加了冷却用水。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091104.webp" alt="" loading="lazy"></p>
<p>加州大学的研究团队估计，ChatGPT 每回答5 到50个问题，就需要用水500毫升（相当于一瓶矿泉水）。因此，AI 的发展将会加剧世界的用水紧张。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.bentoml.com/blog/navigating-the-world-of-large-language-models" target="_blank" rel="noreferrer">畅游 LLM 的世界</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032202.webp" alt="" loading="lazy"></p>
<p>如果在家用电脑上安装 LLM（大型语言模型），应该选择哪一个模型？</p>
<p>本文分析并评价了目前最流行的几个 LLM 的基本情况和优缺点。</p>
<p>2、<a href="https://gyrovague.com/2023/08/05/archive-today-on-the-trail-of-the-mysterious-guerrilla-archivist-of-the-internet/" target="_blank" rel="noreferrer">追寻 archive.today 的管理员</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023080508.webp" alt="" loading="lazy"></p>
<p><a href="https://archive.today/" target="_blank" rel="noreferrer">archive.today</a> 是一个神秘的网站，可以生成网页的备份，供在线查看。没人知道谁建立了这个网站。本文试图找出答案。</p>
<p>3、<a href="https://mp.weixin.qq.com/s/dD-aPhnynOqSC3MUYLjeAA" target="_blank" rel="noreferrer">微信早期的消息收发架构</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032813.webp" alt="" loading="lazy"></p>
<p>本文是一篇简化的介绍，讲解微信刚刚建立时，怎么做到消息的收发。（<a href="https://github.com/ruanyf/weekly/issues/4193" target="_blank" rel="noreferrer">@ryantang1991</a> 投稿）</p>
<p>4、<a href="https://hughfenghen.github.io/posts/2024/03/14/web-storage-and-opfs/" target="_blank" rel="noreferrer">OPFS API 及工具介绍</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032810.webp" alt="" loading="lazy"></p>
<p>网页脚本如果要跟本地文件系统交互，是很不方便的。目前，浏览器有一个 OPFS API，为网页提供一个虚拟的本地文件系统，本文介绍它的用法。（<a href="https://github.com/ruanyf/weekly/issues/4189" target="_blank" rel="noreferrer">@hughfenghen</a> 投稿）</p>
<p>5、<a href="https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities" target="_blank" rel="noreferrer">如何管理多个 Git 身份</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101404.webp" alt="" loading="lazy"></p>
<p>Git 使用时，需要指定用户名和邮件地址。本文教你一种简单的方法，不同的项目自动切换 Git 身份。</p>
<p>6、<a href="https://jasoneckert.github.io/myblog/ultimate-linux-arm64-workstation/" target="_blank" rel="noreferrer">我在 Mac Mini 运行 Asahi</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101617.webp" alt="" loading="lazy"></p>
<p>Asahi 是一个专门为苹果 ARM 芯片开发的 Linux 发行版，作者将其安装在 Mac Mini 上面，得到了一个他见过的最快的 Linux 桌面。</p>
<p>7、<a href="https://www.akshaykhot.com/content-security-policy/" target="_blank" rel="noreferrer">如何用 CSP 防止 XSS 注入攻击</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023080507.webp" alt="" loading="lazy"></p>
<p>本文讲解怎么使用浏览器的 CSP（内容安全策略），防止网页被 XSS （跨站点脚本注入攻击）。</p>
<p>8、<a href="https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/1" target="_blank" rel="noreferrer">什么是生锈</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092410.webp" alt="" loading="lazy"></p>
<p>本文向普通读者介绍，生锈相关的各种知识，里面穿插了许多奇闻轶事。上图中，信箱已经生锈了，背后的镀锌板却完好无损。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/microsoft/garnet" target="_blank" rel="noreferrer">Garnet</a></p>
<p>上周，著名的缓存服务器 Redis 宣布更改许可证，未经许可不得基于它对外提供云服务。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032201.webp" alt="" loading="lazy"></p>
<p>此前两天，微软发布了一个兼容 Redis 的缓存服务器 Garnet，不知道两件事之间是否存在关联。</p>
<p>另外，Redis 现在也被分叉了，诞生了两个全新的项目 <a href="https://redict.io/" target="_blank" rel="noreferrer">Redict</a> 和 <a href="https://github.com/valkey-io/valkey" target="_blank" rel="noreferrer">Valkey</a>，目标是成为自由软件版本的 Redis。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032805.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://github.com/blitz-js/superjson" target="_blank" rel="noreferrer">Superjson</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023102207.webp" alt="" loading="lazy"></p>
<p>一个 JavaScript 模块，用于字符串和 JSON 数据的互相转换，支持多种 JSON 不支持的数据格式。</p>
<p>3、<a href="https://github.com/logancyang/obsidian-copilot" target="_blank" rel="noreferrer">Copilot for obsidian</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032304.webp" alt="" loading="lazy"></p>
<p>Obsidian 编辑器的一个开源插件，使其可以用上本地的 AI 助手，参见<a href="https://mp.weixin.qq.com/s/at7K_8lEfVzQJq5qnpzvUg" target="_blank" rel="noreferrer">介绍文章</a>。（<a href="https://github.com/ruanyf/weekly/issues/4171" target="_blank" rel="noreferrer">@ivone-liu</a> 投稿）</p>
<p>4、<a href="https://github.com/tahitimoon/LunarLink" target="_blank" rel="noreferrer">LunarLink</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032806.webp" alt="" loading="lazy"></p>
<p>一个基于 Web 的接口自动化测试平台，可以快速编写和运行接口自动化测试用例。（<a href="https://github.com/ruanyf/weekly/issues/4173" target="_blank" rel="noreferrer">@tahitimoon</a> 投稿）</p>
<p>5、<a href="https://github.com/bravekingzhang/text2video" target="_blank" rel="noreferrer">text2video</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032808.webp" alt="" loading="lazy"></p>
<p>一个开源的文本转图文视频的软件。（<a href="https://github.com/ruanyf/weekly/issues/4187" target="_blank" rel="noreferrer">@bravekingzhang</a> 投稿）</p>
<p>6、<a href="https://github.com/wanglin2/mind-map" target="_blank" rel="noreferrer">simple-mind-map</a>（思绪思维导图）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032812.webp" alt="" loading="lazy"></p>
<p>一个开源的 Web 思维导图，试用 <a href="https://wanglin2.github.io/mind-map/" target="_blank" rel="noreferrer">Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4190" target="_blank" rel="noreferrer">@wanglin2</a> 投稿）</p>
<p>7、<a href="https://github.com/openai/shap-e" target="_blank" rel="noreferrer">Shap-E</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050612.webp" alt="" loading="lazy"></p>
<p>一个生成式 AI 模型，从文本生成 3D 动画图片。</p>
<p>8、<a href="https://github.com/rameshvarun/blog-cells" target="_blank" rel="noreferrer">blog-cells</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023082403.webp" alt="" loading="lazy"></p>
<p>这个工具可以在网页插入互动式区块，用来展示和执行 JavaScript 代码，类似于 Jupyter。</p>
<p>9、<a href="https://github.com/magic-wormhole/magic-wormhole" target="_blank" rel="noreferrer">Magic Wormhole</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023082501.webp" alt="" loading="lazy"></p>
<p>一个文件传输协议，可以在任意两台计算机（不必在同一局域网）之间传输文件。上传方会获得一个密码，下载方只要输入密码就能获取文件。</p>
<p>它有很多第三方客户端（包括手机 App），比如<a href="https://github.com/LeastAuthority/destiny" target="_blank" rel="noreferrer">这个</a>和<a href="https://github.com/pavelsof/mobile-wormhole" target="_blank" rel="noreferrer">这个</a>。</p>
<p>10、<a href="https://mist-project.github.io" target="_blank" rel="noreferrer">Mist</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023082502.webp" alt="" loading="lazy"></p>
<p>这个工具可以在图片上面添加水印底纹，使得该图片无法再被 AI 模型作为训练材料。上图是添加水印后的效果（左图），以及放大的水印（右图）。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://tools.buyixiao.xyz/historical-figure-query" target="_blank" rel="noreferrer">中国古代历史人物可视化</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032303.webp" alt="" loading="lazy"></p>
<p>输入一个古代人物名（共收录52000+人物），就可以显示该人物的社会关系、亲戚关系和生平足迹图，上图是李白的生平足迹图，参见<a href="https://mp.weixin.qq.com/s/evUacKtLOVCrZahgRmnjsg" target="_blank" rel="noreferrer">介绍文章</a>。（<a href="https://github.com/ruanyf/weekly/issues/4170" target="_blank" rel="noreferrer">@inspurer</a> 投稿）</p>
<p>2、<a href="https://www.libhunt.com/css" target="_blank" rel="noreferrer">CSS 框架排名</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032301.webp" alt="" loading="lazy"></p>
<p>这个网页按照 GitHub 的星星数量，为 CSS 框架排名。</p>
<p>3、<a href="https://aibydoing.com/intro" target="_blank" rel="noreferrer">动手实战人工智能</a>（AI by doing）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032807.webp" alt="" loading="lazy"></p>
<p>一本中文电子书，通过实例介绍一些 AI 算法。（<a href="https://github.com/ruanyf/weekly/issues/4178" target="_blank" rel="noreferrer">@huhuhang</a> 投稿）</p>
<p>4、<a href="https://lamucal.ai/" target="_blank" rel="noreferrer">Lamucal</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032809.webp" alt="" loading="lazy"></p>
<p>这个网站可以为任何歌曲生成和弦、节拍、歌词、旋律和标签，使用了 <a href="https://github.com/DoMusic/Hybrid-Net?tab=readme-ov-file" target="_blank" rel="noreferrer">Hybrid-Net 模型</a>。（<a href="https://github.com/ruanyf/weekly/issues/4188" target="_blank" rel="noreferrer">@liufeigit</a> 投稿）</p>
<p>5、<a href="https://paper.z2h.cn/" target="_blank" rel="noreferrer">Z2H 字贴</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032811.webp" alt="" loading="lazy"></p>
<p>一个在线的字帖生成网站，支持中文和英文。（<a href="https://github.com/ruanyf/weekly/issues/4191" target="_blank" rel="noreferrer">@liamwang</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://oldoperatingtheatre.com/step-into-the-role-of-a-surgeon-in-our-interactive-game/" target="_blank" rel="noreferrer">19世纪早期的手术器械</a></p>
<p>19世纪早期，还没有发明麻醉剂和消毒剂，外科手术是一件非常可怕的事情。</p>
<p>英国圣托马斯医院当年的手术器械，保留到了现在。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202212/bg2022120502.webp" alt="" loading="lazy"></p>
<p>看看上面的器械，特别是那把锯子，难怪当年的外科病人有一半是死在手术台上的。</p>
<p>2、<a href="https://www.statista.com/chart/22981/average-speed-of-tour-de-france-winners-by-decade/" target="_blank" rel="noreferrer">环法自行车赛的冠军速度</a></p>
<p>世界最著名的自行车比赛，是环法自行车赛。下图是从1903年第一届比赛开始，冠军的平均速度。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202207/bg2022071106.webp" alt="" loading="lazy"></p>
<p>可以看到，冠军的骑速一直在增加，从第一届的26.85公里/小时，增加到2021年的41.17公里/小时。不过进入21世纪之后，增长似乎停滞了。</p>
<p>环法自行车赛的路线基本不变，总长3500公里左右。冠军速度的增长，只有两种解释，一种是自行车器材的进步，另一种是运动员可能服用了药物。</p>
<p>3、<a href="https://lcamtuf.substack.com/p/radios-how-do-they-work" target="_blank" rel="noreferrer">无线电波</a></p>
<p>无线电波是什么？我们可以把它想象成一个带电的电容器被拉开，其内部电场溢出到周围空间。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032815.webp" alt="" loading="lazy"></p>
<p>如果进行电场可视化，绘制虚拟的正电粒子路径，我们会看到连接两极的弧形线，从两侧一直延伸到无穷大。</p>
<p>当然，不变的电场对于无线电不是很有用，但是如果改变两极的电荷，电场就会变化。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://hackaday.com/2021/10/25/the-longest-ever-flight-was-over-64-days-in-a-cessna-172/" target="_blank" rel="noreferrer">史上最长的载人飞行</a></p>
<p>载人飞行最长可以持续多少时间？</p>
<p>1958年12月到1959年2月，两个飞行员乘坐一架小飞机，一共在空中停留了64天22小时19分钟，这个记录至今无人打破。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202212/bg2022121301.webp" alt="" loading="lazy"></p>
<p>大家可能想不到，这两个飞行员不是科学家，也不是军方人员，而是美国拉斯维加斯一个娱乐城的员工。</p>
<p>当时，为了吸引顾客，他们想出一个点子，如果开着画着公司标志的小飞机，创造在空中不间断飞行的纪录，就可以提升公司的知名度。老板觉得是个好主意，就同意了。</p>
<p>1958年12月4日下午3点52分，他们起飞了。公证员驾驶一辆敞篷车在跑道上追赶飞机，起飞的一刹那，他们在轮胎上涂上白油漆，防止飞机偷偷降落。</p>
<p>为了长时间在空中停留，这架小飞机必须定期接受补给。它平时在空中飞，但是每天有两次贴近地面，让卡车来加油，同时补给生活物质。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202212/bg2022121302.webp" alt="" loading="lazy"></p>
<p>65天的飞行过程中，卡车一共为飞机加油128次。</p>
<p>两个飞行员轮流驾驶飞机，休息的那个人会阅读漫画和玩游戏，还会数下面道路上有多少辆汽车，以此打发时间。他们的生活垃圾会打包，从空中扔到无人的沙漠中。</p>
<p>有一天凌晨，驾驶飞机的那个飞行员实在过于疲劳，不禁睡着了。等他醒来，飞机已经自行飞行了一个多小时。除此以外，总体上没有大的事故。</p>
<p>随着时间的推移，这架飞机的故障越来越多，发动机和仪表都开始出现各种小问题。他们又坚持了几天，最终决定在1959年2月7日降落。</p>
<p>今天，这架小飞机陈列在拉斯维加斯的麦卡伦国际机场，就挂在旅客行李大厅的上方。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202212/bg2022121303.webp" alt="" loading="lazy"></p>
<p>这架上个世纪50年代的小飞机，它的发动机能够连续运行1500个小时，非常了不起。更了不起的是，两个飞行员能够在充满噪音的狭小机舱里面生活两个多月，这不是常人可以忍受的。可能正是因为这个原因，该记录至今未被打破。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>电动汽车的最大缺点是，大部分能量用来移动电池，而不是移动乘客。</p>
<p>人类的体重并不重（大约70公斤左右），特斯拉 Y 型汽车的电池重量是770公斤。所以，运送电池的耗能是运送乘客的10倍。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=38835304" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>2、</p>
<p>个人的财务管理，其实只有两条原则：一是支出小于收入，二是做对投资，投资对象可以是能够获利的资产，也可以是你的个人技能。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=34532288" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>3、</p>
<p>如果你感觉自己被困住了，焦虑并充满消极情绪，生命出现了停滞，那么治疗方法很简单：做点什么。</p>
<p>-- <a href="https://ggnotes.com/the-best-way-to-get-unstuck" target="_blank" rel="noreferrer">《摆脱束缚的最好方法》</a></p>
<p>4、</p>
<p>我所在的公司去年赚了数十亿美元，但是决定解雇数百名工程师（占员工的很大比重）。一些我最尊敬的优秀工程师就这样离开了，这完全没有道理。</p>
<p>此前公司已经裁员过一轮了，管理层那时告诉我们，员工调整已经完成，一切到此为止。</p>
<p>你不能相信比你地位高的管理者告诉你的任何事情。他们可能对自己也撒了谎，更何况对你。永远不要对你的公司投入感情。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=38949749" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>5、</p>
<p>有一种流行的错误观点，认为黑洞就像宇宙吸尘器，会把周围一切吸进去。事实上，如果太阳塌缩变成一个黑洞，太阳系行星的轨道将不会变化，因为太阳系的中心质量保持不变，行星感受到与以前相同的重力。</p>
<p>黑洞的独特之处在于尺寸非常小，但密度很高。这使得在非常接近它的质心的地方，引力极其强烈，但这不会增加远离质心之处的引力。</p>
<p>-- <a href="https://www.amnh.org/learn-teach/curriculum-collections/cosmic-horizons-book/john-michell-black-holes" target="_blank" rel="noreferrer">《最早提出黑洞的人》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/03/weekly-issue-248.html" target="_blank" rel="noreferrer">不要夸大 ChatGPT</a>（2023 #248）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/03/weekly-issue-198.html" target="_blank" rel="noreferrer">美国制造是否可能</a>（2022 #198）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/03/weekly-issue-148.html" target="_blank" rel="noreferrer">微增长时代</a>（2021 #148）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/03/weekly-issue-98.html" target="_blank" rel="noreferrer">怎样清晰地表达自己的观点？</a>（2020 #98）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202403/bg2024031801.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 294 期）：崖门海战的感想]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-294</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-294</guid>
            <pubDate>Fri, 22 Mar 2024 16:19:43 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
上海徐家汇的美罗城]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-294-期-崖门海战的感想" tabindex="-1">科技爱好者周刊（第 294 期）：崖门海战的感想 <a class="header-anchor" href="#科技爱好者周刊-第-294-期-崖门海战的感想" aria-label="Permalink to &quot;科技爱好者周刊（第 294 期）：崖门海战的感想&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4075" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031918.webp" alt="" loading="lazy"></p>
<p>上海徐家汇的美罗城，在球形屏幕上播放漫画作品《七龙珠》的图像，纪念本月去世的日本漫画家鸟山明。（<a href="https://weibo.com/6392708119/O4DoQfCrk" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="崖门海战的感想" tabindex="-1">崖门海战的感想 <a class="header-anchor" href="#崖门海战的感想" aria-label="Permalink to &quot;崖门海战的感想&quot;">&ZeroWidthSpace;</a></h2>
<p>前一段日子，我在广东旅行，路过江门市。</p>
<p>我偶然发现，著名的<a href="https://baike.baidu.com/item/%E5%B4%96%E5%B1%B1%E6%B5%B7%E6%88%98/10764308" target="_blank" rel="noreferrer">崖门海战</a>发生在这里，就去参观了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032101.webp" alt="" loading="lazy"></p>
<p>如果你不知道，崖门海战是南宋军队最后被元军歼灭的地方，也就是南宋灭亡之地，位于今天的江门市新会区古井镇官冲村。具体时间是1279年3月19日，本周正好是745周年。</p>
<p>那个地方可真远，我先从江门市区到了新会，它距离新会城区还有30多公里，公共交通只有一部从古井镇出发的、班次很少的郊区客运，基本上你只能自驾或打的前往。</p>
<p>即使按照今天的标准，它都属于偏远，何况当年。南宋朝廷是何等窘迫，要逃到这种地方落脚。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032102.webp" alt="" loading="lazy"></p>
<p>（图片说明：景区没有多少留存的古迹，只有重建的崖山祠。）</p>
<p>参观后，我浮想联翩，觉得<strong>真是不可思议，南宋军队犯了那么多低级错误，才导致灭亡</strong>。</p>
<p>下面，我分享我看到的一些细节，好像没有人说过。</p>
<p><strong>首先，崖门海战不是发生在海里。</strong></p>
<p>我一直以为，既然是海战，那一定是在海边。错了！战场遗址是在一个陆上水道，距离大海至少还有十几公里。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032103.webp" alt="" loading="lazy"></p>
<p>上面是<a href="https://j.map.baidu.com/3c/WLJi" target="_blank" rel="noreferrer">百度地图</a>的截图，可以看到战场距离入海口还有很长一段路。</p>
<p>虽然古代的海岸线跟今天不一样，但是根据古代地图（下图）以及纪念馆的沙盘（下图），战场确实是在水道里面，不是在开阔海域。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032104.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032105.webp" alt="" loading="lazy"></p>
<p>下面是我拍的实地照片，虽然天气不好，灰蒙蒙的，但是能看清水道其实很狭窄。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032106.webp" alt="" loading="lazy"></p>
<p>你能相信吗，20万人、上千艘船就在这么一条狭窄的水道里面厮杀？</p>
<p>这么一点点地方，根本无法施展，不要说战术，恐怕布阵都困难，完全就是混战。加之两岸都是平滩，也无法陆上支援，防守的一方基本上就是听人宰割，这也是当天实际发生的情况。</p>
<p><strong>其次，新会位置不佳，无法防守。</strong></p>
<p>不仅崖门海战的地点匪夷所思，南宋选择落脚在新会，也是一个糟糕的选择。</p>
<p>新会地势平坦，无险可守，而且靠近大海，没有腹地，不适合作为根据地。</p>
<p>如果南宋撤到其他地方，比如向西进入广西的山区，或者向南进入海南岛或东南亚，都比新会容易防守，元军的进攻会遇到更多困难，南宋起码不会这么快灭亡。</p>
<p><strong>最后，南宋毫无作战策略，束手待毙</strong>。</p>
<p>这是最不可理解的。南宋是前一年5月份来到新会，就在这里常驻了。当年的12月29日，广州被元军占领，这种情况下，你已经没有后方了，就应该赶快撤退了。但是，南宋没走。</p>
<p>第二年的2月26日，元军封锁了崖门水道入海口，至此前后方都被敌人占领，宋军已成瓮中之鳖。但是，南宋还是没走，在新会死守。</p>
<p>3月19日，元军发起总攻，南宋已经被包围了足足21天，期间没有任何突围的尝试。</p>
<p>更让人目瞪口呆的是，南宋还下令放弃陆上营地，士兵全部到船上应战。而且，小船用铁索连成一排，封锁江面，阻挡元军前进。部队因此丧失了岸上支援和机动性，无法以小股部队的形式突围。</p>
<p>总之，<strong>南宋在崖门被消灭，完全是自身的一系列错误导致的</strong>。</p>
<p>后人阅读史书时，发现前人有那么多机会改变历史，偏偏每一步都做了错误的决定，自己把自己葬送，怎不令人扼腕叹息。</p>
<p>关于海战本身就说到这里，下面我想讨论一下，网上流传的一句话“<a href="http://www.19cntv.com/archive/61.html" target="_blank" rel="noreferrer">崖山之后无中国</a>”（崖山即崖门）。</p>
<p>崖门海战标志着汉人政权第一次被外族彻底消灭，产生了深远的影响。这句话有很多解释，我比较同意其中一种，就是说<strong>这个事件使得汉人的心态和文化发生了巨变，之前的中国和之后的中国在气质上不一样</strong>。</p>
<p>宋朝是中国文明的一个高峰，文化艺术、商业活动、科学技术都空前繁荣。四大发明里面，造纸术被认为是发明于西汉，其余的印刷术、指南针和火药都被认为是发明于宋朝。但是，这样一个辉煌的文明却被蛮族消灭了，这对汉人造成了巨大的打击，从此，汉民族就发生了变化，心态趋于保守，从重视文化艺术变成重视利益。</p>
<p>陈寅恪说过，中国文化以后的发展，还是要回到宋代的方向，而不是明清的方向。“华夏民族之文化，历数千载之演进，造极于赵宋之世。后渐衰微，终必复振。”</p>
<h2 id="小红书实习生招聘" tabindex="-1">小红书实习生招聘 <a class="header-anchor" href="#小红书实习生招聘" aria-label="Permalink to &quot;小红书实习生招聘&quot;">&ZeroWidthSpace;</a></h2>
<p>在校生同学看过来，如果你今年的实习还没定，现在有一个好机会。</p>
<p>小红书，作为年轻人的生活方式平台，今年面向在校生的实习申请已经开始了。如果被录取，<strong>所有实习岗位均有转正机会</strong>，同时春季招聘也在火热进行中。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032107.webp" alt="" loading="lazy"></p>
<p>这次招聘有<strong>很多技术方向的岗位</strong>，包括前端、后端、客户端、测试、运维、算法、安全等；工作地点可选上海、北京、武汉和广州。</p>
<p>感兴趣的同学，不要错过这个机会，不仅可以体验大型互联网公司的内部技术运作，同时也是个人履历的一个亮点，一定对将来的发展有帮助。</p>
<p>招聘详情请访问官网 <a href="https://campus.xiaohongshu.com/" target="_blank" rel="noreferrer">campus.xiaohongshu.com</a>。周刊读者有福利，可以使用内推码【<strong>95NHXSOB9XLA</strong>】内推。当然，如果有认识的小红书员工，也可以请其内推。</p>
<p>招聘时间是3月20日到6月28日，3月底就会陆续开始面试，4月起开始发放 Offer。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://news.exeter.ac.uk/faculty-of-health-and-life-sciences/menopause-explains-why-some-female-whales-live-so-long/" target="_blank" rel="noreferrer">鲸鱼的更年期</a></p>
<p>大多数哺乳动物终生能够生育后代，只有人类、黑猩猩和几种鲸鱼除外。</p>
<p>这些物种会经历更年期，此后就不再能够生育后代。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031802.webp" alt="" loading="lazy"></p>
<p>最近有一篇论文提出，更年期的意义在于，可以显著延长鲸鱼的寿命。经历更年期的雌性鲸鱼，比同等大小的其他雌性鲸鱼多了40年的寿命，并且也比同种的雄性鲸鱼寿命长。</p>
<p>科学家猜想，这是因为更年期使得雌性鲸鱼可以将更多的时间，用于照顾自己和后代，而不必再把精力投入繁殖。</p>
<p>2、<a href="https://e360.yale.edu/features/solar-water-pumps-groundwater-crops" target="_blank" rel="noreferrer">印度的太阳能水泵</a></p>
<p>印度是一个缺水又缺电的国家，农民为了解决灌溉用水，纷纷安装太阳能水泵，通过太阳能发电抽取地下水。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031701.webp" alt="" loading="lazy"></p>
<p>结果，地下水位迅速下降，当地的降雨又很少，某些地方下方100米的岩层都是干燥的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031702.webp" alt="" loading="lazy"></p>
<p>农民只能去购买更大功率的太阳能水泵，印度政府忧心忡忡，担心地下水被抽空。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031703.webp" alt="" loading="lazy"></p>
<p>以前，水泵由电厂供电，政府可以通过断电，来控制水泵运行。但是，现在水泵由太阳能直接供电，政府无法控制了。这也提示我们，分布式太阳能发电会减少政府的控制。</p>
<p>3、<a href="https://www.nytimes.com/2024/02/02/climate/sun-shade-climate-geoengineering.html" target="_blank" rel="noreferrer">太空遮阳伞</a></p>
<p>随着全球变暖，科学家提出了各种各样的方案，为地球降温。</p>
<p>以色列科学家的最新设想是，在外太空为地球架设一个太阳伞，挡住部分太阳光。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024021004.webp" alt="" loading="lazy"></p>
<p>它并不需要完全挡住太阳光，根据计算，只要不到2%的太阳光被阻挡，就足以使地球降温1.5摄氏度。</p>
<p>这把遮阳伞十分巨大，面积大约为260万平方公里，略小于印度。</p>
<p>设计团队宣称，虽然该方案听起来异想天开，但是可以马上见效，其他方案都需要等待多年，才知道是否有效。</p>
<p>批评者则说，该方案实施困难，成本巨大。万一实施后，防护罩被太阳风暴或流星损毁，将导致地球突然变暖，带来灾难性后果。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://jacobbartlett.substack.com/p/my-toddler-loves-planes-so-i-built" target="_blank" rel="noreferrer">女儿喜欢飞机，我为她做了一个雷达 App</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112801.webp" alt="" loading="lazy"></p>
<p>作者介绍自己使用开源数据，为苹果手机做了一个雷达 App，能够显示飞机在头顶的实时方位。</p>
<p>2、<a href="https://jakelazaroff.com/words/web-components-eliminate-javascript-framework-lock-in/" target="_blank" rel="noreferrer">Web 组件如何适配 JS 框架</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112802.webp" alt="" loading="lazy"></p>
<p>Web 组件是浏览器原生的组件格式，本文介绍怎么将这种格式用于各种 JS 前端框架。</p>
<p>3、<a href="https://preslav.me/2023/11/27/python-is-easy-golang-is-simple-simple-is-not-easy/" target="_blank" rel="noreferrer">Python 很简单，Go 很清晰</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112803.webp" alt="" loading="lazy"></p>
<p>作者比较了 Python 和 Go 两种语言，认为前者易学（easy），后者更清晰明白（simple），不易出错，可以将它们结合使用。</p>
<p>4、<a href="https://chriscoyier.net/2023/11/27/the-hanging-punctuation-property-in-css/" target="_blank" rel="noreferrer">CSS 的悬挂标点属性</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112810.webp" alt="" loading="lazy"></p>
<p>如果标点正好在行首或行尾，是否要跟上下文对齐？这就要用到 CSS 的<code>hanging-punctuation</code>属性。</p>
<p>5、<a href="https://darkcoding.net/software/epoll-the-api-that-powers-the-modern-internet/" target="_blank" rel="noreferrer">epoll API 介绍</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011106.webp" alt="" loading="lazy"></p>
<p>Linux 有一个 epoll API，能够高性能地处理网络请求。它是整个互联网的基础，JS 语言的异步处理就基于这个 API。</p>
<p>6、<a href="https://dreith.com/blog/theres-such-a-thing-as-using-too-many-ifs/" target="_blank" rel="noreferrer">如何简化多个 if 的判断结构</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112507.webp" alt="" loading="lazy"></p>
<p>编程实践中，往往连续使用多个 if 进行判断，这种代码非常冗余，也不易读，本文讨论怎么简化它。</p>
<p>7、<a href="https://betterstack.com/community/guides/scaling-docker/podman-vs-docker/" target="_blank" rel="noreferrer">探索 Podman</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011504.webp" alt="" loading="lazy"></p>
<p>Podman 是 Docker 的替代品，本文是它的初学者教程。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/Textualize/frogmouth" target="_blank" rel="noreferrer">Frogmouth</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050101.webp" alt="" loading="lazy"></p>
<p>命令行的 Markdown 阅读器。</p>
<p>2、<a href="https://github.com/francoismichel/ssh3" target="_blank" rel="noreferrer">SSH3</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121701.webp" alt="" loading="lazy"></p>
<p>使用 QUIC + TLS 重新实现的 SSH 加密登陆工具，支持 UDP 端口转发。</p>
<p>3、<a href="https://github.com/hehehai/x-hiring" target="_blank" rel="noreferrer">X-Hiring</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031803.webp" alt="" loading="lazy"></p>
<p>每日自动抓取于 V2EX 和电鸭社区的招聘信息，使用 Google AI 提取摘要。（<a href="https://github.com/ruanyf/weekly/issues/4127" target="_blank" rel="noreferrer">@hehehai</a> 投稿）</p>
<p>4、<a href="https://github.com/027xiguapi/pear-rec/blob/main/README.zh-CN.md" target="_blank" rel="noreferrer">pear-rec</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031804.webp" alt="" loading="lazy"></p>
<p>一个在线的 GIF 编辑工具，也可以对 MP4 视频进行解析导入。（<a href="https://github.com/ruanyf/weekly/issues/4128" target="_blank" rel="noreferrer">@027xiguapi</a> 投稿）</p>
<p>5、<a href="https://github.com/struy-cn/Y-TOC" target="_blank" rel="noreferrer">Y-TOC</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031805.webp" alt="" loading="lazy"></p>
<p>一个内容目录海报美化生成工具。（<a href="https://github.com/ruanyf/weekly/issues/4130" target="_blank" rel="noreferrer">@StruggleYang</a> 投稿）</p>
<p>6、<a href="https://github.com/yusanshi/emgithub" target="_blank" rel="noreferrer">emgithub</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031806.webp" alt="" loading="lazy"></p>
<p>打开 GitHub 仓库某个文件的页面，将地址栏的 github.com 改成 emgithub.com，就可以获得当前文件的嵌入代码，像嵌入 GitHub Gist 代码一样嵌入到页面中。（<a href="https://github.com/ruanyf/weekly/issues/4131" target="_blank" rel="noreferrer">@yusanshi</a> 投稿）</p>
<p>7、<a href="https://github.com/mggger/Calorie-Calculator" target="_blank" rel="noreferrer">Calorie Calculator</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031906.webp" alt="" loading="lazy"></p>
<p>上传食物图片，自动计算卡路里，基于 Google Gemini AI。（<a href="https://github.com/ruanyf/weekly/issues/4138" target="_blank" rel="noreferrer">@mggger</a> 投稿）</p>
<p>8、<a href="https://mjcn.club/" target="_blank" rel="noreferrer">壁纸样机生成器</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031908.webp" alt="" loading="lazy"></p>
<p>一个在线工具，图片套 iPhone、iPad、Mac 的模板，生成样机图片。（<a href="https://github.com/ruanyf/weekly/issues/4140" target="_blank" rel="noreferrer">@CheckCoder</a> 投稿）</p>
<p>9、<a href="https://www.engineerdraft.com/en/searchable/" target="_blank" rel="noreferrer">Searchable</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031909.webp" alt="" loading="lazy"></p>
<p>一款 Mac 应用，利用 OpenAI 的 Clip 模型在本地对图片进行索引和搜索，可以本地搜索图片文字、语义化搜索和以图搜图。（<a href="https://github.com/ruanyf/weekly/issues/4142" target="_blank" rel="noreferrer">@yujinqiu</a> 投稿）</p>
<p>10、<a href="https://github.com/yesmore/vmail" target="_blank" rel="noreferrer">Vmail.dev</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031910.webp" alt="" loading="lazy"></p>
<p>使用 Cloudflare email worker 实现的临时邮箱服务，可以<a href="https://dev.yesmore.cc/projects/vmail" target="_blank" rel="noreferrer">自己部署</a>。（<a href="https://github.com/ruanyf/weekly/issues/4133" target="_blank" rel="noreferrer">@yesmore</a> 投稿）</p>
<p>11、<a href="https://apps.apple.com/us/app/vidhub-video-library-player/id1659622164" target="_blank" rel="noreferrer">VidHub</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031911.webp" alt="" loading="lazy"></p>
<p>苹果设备的视频播放器，可以管理和播放本地、网盘、NAS、Cloud Drive 来源的视频。（<a href="https://github.com/ruanyf/weekly/issues/4143" target="_blank" rel="noreferrer">@julycamera</a> 投稿）</p>
<p>12、<a href="https://videosora.app/zh-cn/" target="_blank" rel="noreferrer">VideoSora</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031912.webp" alt="" loading="lazy"></p>
<p>一款将文本或语音转化成图文短视频的在线工具。（<a href="https://github.com/ruanyf/weekly/issues/4150" target="_blank" rel="noreferrer">@tangpanqing</a> 投稿）</p>
<p>13、<a href="https://github.com/Kingfish404/segment-anything-webui" target="_blank" rel="noreferrer">Segment Anything web UI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031916.webp" alt="" loading="lazy"></p>
<p>Segment Anything 模型的前端交互 UI，包括了最基本的点击，画框和自动分割等功能，还引入了 CLIP 实现语义选择分割。（<a href="https://github.com/ruanyf/weekly/issues/4154" target="_blank" rel="noreferrer">@Kingfish404</a> 投稿）</p>
<p>14、<a href="https://github.com/Textualize/toolong" target="_blank" rel="noreferrer">Toolong</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032108.webp" alt="" loading="lazy"></p>
<p>一个终端工具，可以查看和搜索非常长的文本文件（比如日志）。（<a href="https://github.com/ruanyf/weekly/issues/4158" target="_blank" rel="noreferrer">@WFANG12719</a> 投稿）</p>
<p>15、<a href="https://notion-flow.xheldon.com/" target="_blank" rel="noreferrer">Notion Flow</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032109.webp" alt="" loading="lazy"></p>
<p>一个浏览器插件，可以在 Notion 页面显示文章目录，并将内容发送到 GitHub Pages。（<a href="https://github.com/ruanyf/weekly/issues/4163" target="_blank" rel="noreferrer">@Xheldon</a> 投稿）</p>
<p>16、<a href="https://www.sidebrowser.xyz/" target="_blank" rel="noreferrer">Side Browser</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032110.webp" alt="" loading="lazy"></p>
<p>一个浏览器插件，允许在浏览器的侧边栏打开网页。（<a href="https://github.com/ruanyf/weekly/issues/4159" target="_blank" rel="noreferrer">@extrastu</a> 投稿）</p>
<p>有读者反映，该插件可能借鉴了另一个相同功能的 <a href="https://chromewebstore.google.com/detail/sidebartab-pin-chatgpt-or/acghhljehhigfeinngmggkpgbacpikfe" target="_blank" rel="noreferrer">Sidebar 插件</a>。（<a href="https://github.com/ruanyf/weekly/issues/4164" target="_blank" rel="noreferrer">@vinebyte</a> 投稿）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032112.webp" alt="" loading="lazy"></p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.hello-algo.com/chapter_paperbook/" target="_blank" rel="noreferrer">Hello 算法</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031913.webp" alt="" loading="lazy"></p>
<p>一本介绍算法知识的开源书籍，网上可以免费阅读，纸质版已于近期出版。（<a href="https://github.com/ruanyf/weekly/issues/4149" target="_blank" rel="noreferrer">@krahets</a> 投稿）</p>
<p>2、<a href="https://stockcake.com/" target="_blank" rel="noreferrer">StockCake</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031907.webp" alt="" loading="lazy"></p>
<p>AI 生成的免费图像素材网站，无限的无版权图片免费下载。（<a href="https://github.com/ruanyf/weekly/issues/4139" target="_blank" rel="noreferrer">@wrenash</a> 投稿）</p>
<p>3、<a href="https://kanjivg.tagaini.net/index.html" target="_blank" rel="noreferrer">KanjiVG</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111210.webp" alt="" loading="lazy"></p>
<p>这个项目提供汉字的 SVG 文件下载，可以显示笔划动画。</p>
<p>4、<a href="https://www.designsystemhunt.com/" target="_blank" rel="noreferrer">DesignSystemHunt.com</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024010601.webp" alt="" loading="lazy"></p>
<p>这个网站收集各种设计系统（design system），已经有130多个。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://taylor.town/cyberpunk-bathroom" target="_blank" rel="noreferrer">冰淇淋建筑</a></p>
<p>美国洛杉矶到拉斯维加斯的高速公路，沿路都是一望无际的荒漠，令司机昏昏欲睡。</p>
<p>为了足够醒目和振奋精神，一家加油站在路口制作了一个巨大的冰淇淋杯建筑。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050901.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050902.webp" alt="" loading="lazy"></p>
<p>这个冰淇淋杯内部，其实是加油站的厕所。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050903.webp" alt="" loading="lazy"></p>
<p>因为拉斯维加斯是赌城，小便器上方还有触摸屏，让你玩小游戏，跟冰淇淋杯的风格很搭。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023050904.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://twitter.com/AcademiaAesthe1/status/1599391209969324038" target="_blank" rel="noreferrer">大理石丝巾</a></p>
<p>法国卢浮宫收藏了一座1781年的雕塑，人物的丝巾是用大理石雕塑的，栩栩如生。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202212/bg2022120501.webp" alt="" loading="lazy"></p>
<p>古代欧洲雕塑的写实主义，真是做到了登峰造极。</p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://arstechnica.com/science/2022/06/behold-the-magnetar-natures-ultimate-superweapon/" target="_blank" rel="noreferrer">磁星</a></p>
<p>很多人的印象中，黑洞是宇宙最可怕的东西，会吞噬一切，没有东西可以逃出黑洞。但是，天文学家现在知道了，还有比黑洞更可怕的东西，那就是磁星（Magnetar）。</p>
<p>磁星其实很小，只有一个小城镇的大小，直径大概20公里左右。但是，它具有宇宙已知最大的磁场，距离它1000公里以内的所有物质，都会立刻被分解，而且是立刻被分解成原子。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024032113.webp" alt="" loading="lazy"></p>
<p>地球的磁场强度，在北极测量的话，大约为半高斯，最大不超过1高斯。即使这么一点强度，就已经是太阳系里面磁场最强的行星了，足以在全世界驱动指南针。</p>
<p>家里冰箱上的那种冰箱贴，磁场强度大约是地球磁场的100到200倍。太阳黑子的磁场强度约为4,000高斯，是太阳系中最强的。</p>
<p>如果你曾经做过核磁共振的检查，那么你就亲身经历了大约10,000高斯的磁场。人类能够制造的最强磁场是几万高斯，没法再高了，再高就会破坏制造它们的设备。</p>
<p>磁星的表面磁场强度，大约为10的14次方到15次方的高斯，内部的磁场强度还要再大10倍。这就是说，磁星的磁场比地球强100亿倍。</p>
<p>这么大的磁场，只要进入距离它1000公里的范围内，你就会立刻被分解成原子。因为磁力这时已经超过了将原子聚集在一起的分子力，强迫电子轨道跟磁场线一致。</p>
<p>典型的磁星直径只有20公里左右，但在这么小的体积内，它可以达到两倍于太阳的质量，使它们成为宇宙中已知密度最高的物体之一。一茶匙的磁星材料重约1亿吨，这么大的重量就会产生灾难性的引力坍缩，所以磁星的寿命都很短，只有10,000年左右。在整个生命周期内，它都会向外大量发射 X 射线。</p>
<p>天文学家现在只知道大约24颗磁星，几乎都在银河系。因为它们的寿命很短，所以能够观测到的很少，天文学家估计仅在银河系内就有大约3000万颗死去的磁星。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>有一种程序员，技术非常好，但创建的项目过于复杂，其他人很难完成。他们选择自己完成大部分工作，并将不太重要的任务交给其他人。当他们退出时，由于代码的复杂性和缺乏理解，团队陷入了巨大的困境。</p>
<p>有些人认为，这种程序员是大牛，但我认为他们实际上是很糟糕的，因为他们的工作不易被其他人接手或维护。</p>
<p>-- <a href="http://mikhailian.mova.org/node/284" target="_blank" rel="noreferrer">《最糟糕的程序员》</a></p>
<p>2、</p>
<p>英国国会议员、科技委员会成员凯瑟琳·弗莱彻（Katherine Fletcher），有一天突发奇想，公开表示她很担心 AI，未来某一天 AI 可能会决定杀死地球上的每一头牛。是的，你没看错，她真的这么说。</p>
<p>-- <a href="https://www.spiked-online.com/2023/12/28/why-are-the-elites-suddenly-so-terrified-about-ai/" target="_blank" rel="noreferrer">《为什么精英们突然害怕 AI？》</a></p>
<p>3、</p>
<p>有一段时间，我使用 Gentoo（一个需要自己从头编译源码的 Linux 发行版）。当我的宿舍在寒冷的冬夜里太冷时，我就会在它上面重新编译 Open Office。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=38804383" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>4、</p>
<p>痛苦能滋养勇气。如果只有美好的事情发生在你身上，你就不可能变得勇敢。</p>
<p>-- 玛丽·泰勒·摩尔（Mary Tyler Moore），美国电影女演员</p>
<p>5、</p>
<p>大家总是提倡，提高工作效率。但是很少有人谈，为什么要提提高工作效率。</p>
<p>我认为，真正的原因并不是，这样才能完成更多工作，或者获得更多时间，而是<strong>只有提高工作效率，你才能发挥自己最大的潜力</strong>。</p>
<p>-- <a href="https://thinkingthrough.substack.com/p/why-be-productive" target="_blank" rel="noreferrer">《为什么要有工作效率？》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/03/weekly-issue-247.html" target="_blank" rel="noreferrer">扎克伯格的裁员信</a>（2023 #247）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/03/weekly-issue-197.html" target="_blank" rel="noreferrer">如果这个世界有快乐机</a>（2022 #197）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/02/weekly-issue-147.html" target="_blank" rel="noreferrer">寻找你愿意忍受的痛苦</a>（2021 #147）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/03/weekly-issue-97.html" target="_blank" rel="noreferrer">那些为了考试拼搏的年轻人</a>（2020 #97）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202403/bg2024031918.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 293 期）：一周是一年的2%]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-293</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-293</guid>
            <pubDate>Fri, 15 Mar 2024 16:19:37 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
安徽芜湖轻轨，为了]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-293-期-一周是一年的2" tabindex="-1">科技爱好者周刊（第 293 期）：一周是一年的2% <a class="header-anchor" href="#科技爱好者周刊-第-293-期-一周是一年的2" aria-label="Permalink to &quot;科技爱好者周刊（第 293 期）：一周是一年的2%&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4075" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031203.webp" alt="" loading="lazy"></p>
<p>安徽芜湖轻轨，为了穿越人行天桥和高架，有一段设计成了波峰波谷，乘坐时会有一点过山车的感觉。（<a href="https://www.ixigua.com/7313798307732570634" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="一周是一年的2" tabindex="-1">一周是一年的2% <a class="header-anchor" href="#一周是一年的2" aria-label="Permalink to &quot;一周是一年的2%&quot;">&ZeroWidthSpace;</a></h2>
<p>纳特·弗里德曼（Nat Friedman）曾经是 GitHub 的 CEO，现在是一名风险投资家。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031405.webp" alt="" loading="lazy"></p>
<p>他的<a href="https://nat.org/" target="_blank" rel="noreferrer">个人网站首页</a>，写着一些自己的信条。其中有一条，让我很震动。</p>
<blockquote>
<p>他写道：“<strong>一周是一年的2%</strong>。”</p>
</blockquote>
<p>我一直觉得，每周七天是很短的时间，尤其是发布周刊以后，更是过得飞快。</p>
<p>但是，他的这句话让我意识到，每周其实是一年当中很重要的组成部分。虚度一周就是虚度一年的2%。</p>
<p>你没有几周可以虚度的。只要多浪费几周，这一年很快过去。</p>
<p>反过来，过好这一周，那么这一年的2%就有价值了。只要这样多过几周，一年就会变得很充实，有拿得出手的成果。</p>
<p>我坚持写周刊，每周记录一点东西，整理一些思考，现在想起来，其实就是在督促自己过好这一年的2%。</p>
<h2 id="维苏威古卷" tabindex="-1"><a href="https://scrollprize.org/grandprize" target="_blank" rel="noreferrer">维苏威古卷</a> <a class="header-anchor" href="#维苏威古卷" aria-label="Permalink to &quot;[维苏威古卷](https://scrollprize.org/grandprize)&quot;">&ZeroWidthSpace;</a></h2>
<p>公元79年10月24日，意大利的维苏威火山爆发，一天之内就毁灭了两万多人的庞贝古城。</p>
<p>火山灰掩盖了整座城市，其中有一栋房子存放了各种书籍。直到18世纪，这栋房子才重新被发现，下面是考古学家的建筑复原图。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020606.webp" alt="" loading="lazy"></p>
<p>房子里面的1800多卷纸莎草古书，都已经完全碳化。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020601.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020602.webp" alt="" loading="lazy"></p>
<p>考古学家试图展开这些烧焦的古书，但是纸张一碰就碎。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020603.webp" alt="" loading="lazy"></p>
<p>每一页的碎片就像下面这样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020604.webp" alt="" loading="lazy"></p>
<p>没有人能从这些烧焦的古书上，读出一个字。</p>
<p>2019年，一位美国科学家提出了一种新方法，使用短红外高光谱成像技术，对这些古卷进行 3D 扫描，然后虚拟建模，在不接触古卷的情况下，就可以展开或压平每一页，从而复现上面的笔迹。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020605.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020607.webp" alt="" loading="lazy"></p>
<p>下面是扫描后的页面结果。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020608.webp" alt="" loading="lazy"></p>
<p>问题是上面的笔迹还是很模糊，无法确定是哪一个字母，更不要说读出句子了。</p>
<p>2023年3月，在一些风险投资者的资助下，古卷保管单位举办了一次比赛，邀请全世界的程序员参加，要求使用机器学习，认出上面是什么字母，破解古卷的内容，奖金总额高达100万美元。</p>
<p>主办单位原以为，一年之内成功的可能性不到30%。但是，2023年10月，21岁的内布拉斯加大学的学生卢克·法里托（Luke Farritor）就读出了第一个单词 ΠΟΡΦΥΡΑϹ（紫色）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020609.webp" alt="" loading="lazy"></p>
<p>后来，他与正在柏林读博士的纳德（Youssef Nader）、瑞士苏黎世理工学院的机器人专业的学生席里格（Julian Schilliger），组成了一个团队，致力于建立一个完整的 AI 模型识别这些古书。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020610.webp" alt="" loading="lazy"></p>
<p>他们最终在比赛的截止日期前（2024年1月1日）识别出了2000个字符。</p>
<p>下面就是采用他们的模型，识别出来的碎片，内容已经清晰还原出来了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020611.webp" alt="" loading="lazy"></p>
<p>2月5日，主办单位宣布，他们获得了本次比赛的第一名。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024020612.webp" alt="" loading="lazy"></p>
<p>由于比赛结果令人鼓舞，主办单位扩展了自己的目标，接下来将对90%的维苏威古卷，进行扫描和识别，彻底破解两千年前的罗马人在书里写了什么。</p>
<p>他们所用的模型，已经全部开源，就放在 <a href="https://github.com/younader/Vesuvius-Grandprize-Winner" target="_blank" rel="noreferrer">GitHub</a>。任何人都可以安装和运行，尝试改进他们的模型，获得更好的结果。</p>
<p>现代科技的发展，真像神话一样，烧成灰的纸都能辨认出文字。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/Mayuresh1611/Paper-Piano" target="_blank" rel="noreferrer">纸钢琴</a></p>
<p>学习钢琴通常需要一个专门的琴房，如果是普通人家庭，购置和练习钢琴是非常不方便的。</p>
<p>有人在 GitHub 上发布了一个令人耳目一新的项目，尝试零成本地解决这个问题，让你可以随时随地练习钢琴。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031001.webp" alt="" loading="lazy"></p>
<p>你只要准备两张 A4 纸，水平连接在一起，两端各画两个方框，然后就可以在纸上练习钢琴了。</p>
<p>这个软件通过摄像头，捕捉你的手指动作，转化成钢琴击键，让电脑发出对应的琴声。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031002.webp" alt="" loading="lazy"></p>
<p>虽然这样不会有击键的感觉，但是不失为一种简单的解决方案。如果配一个仿真键盘，就比较完善了。</p>
<p>2、<a href="https://electrek.co/2024/03/08/tesla-shipping-cybertruck-tent/" target="_blank" rel="noreferrer">赛博卡车的配套帐篷</a></p>
<p>特斯拉的赛博卡车（Cybertruck）在2019年公布时，曾经展示了一个配套帐篷，可以装在车辆后部。</p>
<p>当时展示的照片是这样的。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031003.webp" alt="" loading="lazy"></p>
<p>现在，这个帐篷终于发货了，它实际长下面这样，与早先的设计大相径庭。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031004.webp" alt="" loading="lazy"></p>
<p>而且，它的售价高达3000美元（约人民币22000元），令车主十分不满。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031005.webp" alt="" loading="lazy"></p>
<p>自从赛博卡车正式发货以来，市场反响并不热烈，越来越多的人认为，它可能是特斯拉的一个失败产品。</p>
<p>3、<a href="https://sea.mashable.com/tech/31627/apple-car-leaked-design-info-reveals-it-wouldve-been-a-minivan" target="_blank" rel="noreferrer">取消的苹果汽车</a></p>
<p>上周有消息说，经过10年研发以后，苹果公司在内部宣布，取消了苹果汽车项目。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031304.webp" alt="" loading="lazy"></p>
<p>现在网上有苹果汽车的原型照片泄漏。如果照片属实，苹果研发的竟然不是轿车，而是小货车。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031305.webp" alt="" loading="lazy"></p>
<p>这实在难以置信，因为小货车无论造得多么好，销量肯定小于轿车。</p>
<p>以前就有人指出，苹果不太可能真的去做汽车，因为市场规模太小。特斯拉一年销售不到200万辆，这种销量对苹果来说是不值得做的。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://finance.sina.cn/chanjing/gsxw/2024-03-11/detail-inamxtkr1619017.d.html" target="_blank" rel="noreferrer">黄仁勋斯坦福大学演讲</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031406.webp" alt="" loading="lazy"></p>
<p>2024年3月初，英伟达CEO黄仁勋回到母校美国斯坦福大学，进行了两次演讲，讲述了自己的经历和对 AI 的看法。这是演讲的中文翻译。</p>
<p>2、<a href="https://finance.sina.com.cn/tech/roll/2024-03-13/doc-inanczhq9639052.shtml" target="_blank" rel="noreferrer">Meta 的 H100 集群细节</a>（中文）</p>
<p>Meta 公司公布了他们的 AI 集群细节。大家可以看看，AI 需要投多少钱。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031303.webp" alt="" loading="lazy"></p>
<p>他们现在有两个集群，每个集群包含了24576块英伟达 H100 GPU（上图）。H100 的价格是2.5万美元～4万美元/块，也就是说，每个集群就要花费数亿美元。</p>
<p>更厉害的是，他们计划今年年底前，将 H100 扩充至35万块，远期达到60万块。</p>
<p>3、<a href="https://blogs.oracle.com/javamagazine/post/java-comments-reduce-technical-debt" target="_blank" rel="noreferrer">注释可以减少技术债务</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111909.webp" alt="" loading="lazy"></p>
<p>作者列举了代码注释的好处，论述得很好，然后大力推荐使用 Javadoc。</p>
<p>4、<a href="https://weberdominik.com/blog/vscode-vertical-tabs/" target="_blank" rel="noreferrer">VS Code 的垂直 Tab 页</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023112006.webp" alt="" loading="lazy"></p>
<p>本文介绍如何在 VS Code 编辑器里面，放置一个垂直的边栏，进行标签切换。</p>
<p>5、<a href="https://pboyd.io/posts/securing-a-linux-vm/" target="_blank" rel="noreferrer">Linux 服务器加固指南</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202307/bg2023073104.webp" alt="" loading="lazy"></p>
<p>你架设了一台 Linux 虚拟主机，如何让它变得更安全，本文列出了详细的操作步骤。</p>
<p>6、<a href="https://badar.tech/2023/04/30/electronics-lab-bench-setup-guide/" target="_blank" rel="noreferrer">家庭电子实验室设置指南</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023051206.webp" alt="" loading="lazy"></p>
<p>作者介绍他的家庭电子实验室的配置，喜欢玩电子装置的朋友可以参考。</p>
<p>7、<a href="https://easylang.dev/apps/tutorial_mcarlo.html" target="_blank" rel="noreferrer">为什么去赌场是个坏主意</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202305/bg2023051304.webp" alt="" loading="lazy"></p>
<p>作者写了一些简单的小程序，使用蒙特卡罗模拟，演示如果不断博彩（比如1000次）会是多少收益。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/candiddev/rot" target="_blank" rel="noreferrer">Rot</a></p>
<p>一个命令行工具，用来对密码进行加密/解密，这样就可以把密码保存在公开的代码库了。</p>
<p>2、<a href="https://angie.software/en/" target="_blank" rel="noreferrer">Angie</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121308.webp" alt="" loading="lazy"></p>
<p>一个 nginx 的分叉版本，由原始团队成员开发，增加了一些功能。类似的项目还有 <a href="https://freenginx.org/" target="_blank" rel="noreferrer">free nginx</a>。</p>
<p>3、<a href="https://github.com/lavague-ai/LaVague" target="_blank" rel="noreferrer">LaVague</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031403.webp" alt="" loading="lazy"></p>
<p>一个很有意思的概念产品，使用文字指令来操作网站，比如输入文字“点击按钮”，它就自动点击网页按钮，底层用的是浏览器自动化框架 Selenium。</p>
<p>4、<a href="https://github.com/BingyanStudio/LapisCV" target="_blank" rel="noreferrer">LapisCV</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031209.webp" alt="" loading="lazy"></p>
<p>基于 Obsidian / Typora 编辑器的 Markdown 简历模板，可以导出 PDF 文件。（<a href="https://github.com/ruanyf/weekly/issues/4111" target="_blank" rel="noreferrer">@YiNNx</a> 投稿）</p>
<p>5、<a href="https://github.com/rookie-luochao/openapi-ui" target="_blank" rel="noreferrer">OpenAPI-UI</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031210.webp" alt="" loading="lazy"></p>
<p>该工具生成 Swagger 或 OpenAPI 3 格式的 API 接口文档，也可当作简洁的 Postman 使用。（<a href="https://github.com/ruanyf/weekly/issues/4114" target="_blank" rel="noreferrer">@rookie-luochao</a> 投稿）</p>
<p>6、<a href="https://github.com/MrWangJustToDo/git-diff-view" target="_blank" rel="noreferrer">git-diff-view</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031211.webp" alt="" loading="lazy"></p>
<p>一个 React/Vue 组件，用来显示 git diff 的结果，类似于 GitHub 的样式。（<a href="https://github.com/ruanyf/weekly/issues/4105" target="_blank" rel="noreferrer">@MrWangJustToDo</a> 投稿）</p>
<p>7、 <a href="http://www.ai-timeline.top/" target="_blank" rel="noreferrer">AI 时间线</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031212.webp" alt="" loading="lazy"></p>
<p>一个有意思的网站，输入一个关键词，自动生成该词的时间线，上图是输入“github”的生成结果，它的代码仓库在 <a href="https://github.com/zhugezifang/ai_timeline" target="_blank" rel="noreferrer">GitHub</a>。（<a href="https://github.com/ruanyf/weekly/issues/4115" target="_blank" rel="noreferrer">@zhugezifang</a> 投稿）</p>
<p>8、<a href="https://github.com/cuixueshe/earthworm" target="_blank" rel="noreferrer">Earthworm</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024031306.webp" alt="" loading="lazy"></p>
<p>一个开源的 Web 程序，通过连词造句的方式，经过不断重复练习英语，<a href="https://earthworm.cuixueshe.com/" target="_blank" rel="noreferrer">线上体验</a>。（<a href="https://github.com/ruanyf/weekly/issues/4120" target="_blank" rel="noreferrer">@cuixiaorui</a> 投稿）</p>
<p>9、<a href="https://github.com/postalserver/postal" target="_blank" rel="noreferrer">Postal</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121407.webp" alt="" loading="lazy"></p>
<p>一个开源的电子邮件服务器，自带 Web 界面。</p>
<p>10、<a href="https://briefsky.app/" target="_blank" rel="noreferrer">briefsky</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101702.webp" alt="" loading="lazy"></p>
<p>一个开源的天气预报前端，可以接入各种天气数据源。</p>
<p>11、<a href="https://qaul.net/" target="_blank" rel="noreferrer">Qaul</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101801.webp" alt="" loading="lazy"></p>
<p>一个可以离线通信的软件，允许一群用户在不联网的情况下，通过本机的共享 WiFi 发送消息。</p>
<p>12、<a href="https://github.com/TeamPiped/Piped" target="_blank" rel="noreferrer">Piped</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101802.webp" alt="" loading="lazy"></p>
<p>一个开源的 Youtube 网页前端 UI。</p>
<p>13、<a href="https://www.riffusion.com/" target="_blank" rel="noreferrer">Riffusion</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101803.webp" alt="" loading="lazy"></p>
<p>一个免费的 AI 工具，给出一段提示，它会生成相应的歌曲，并且是带有歌词、人声演唱的。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/ihmily/ip-info-api" target="_blank" rel="noreferrer">IP 信息查询合集</a></p>
<p>这个仓库收集可以查询 IP 信息的免费网站。（<a href="https://github.com/ruanyf/weekly/issues/4119" target="_blank" rel="noreferrer">@ihmily</a> 投稿）</p>
<p>2、<a href="https://www.learn-ts.org/" target="_blank" rel="noreferrer">TypeScript 互动教程</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122603.webp" alt="" loading="lazy"></p>
<p>通过一个个小练习，讲授 TypeScript 语法。</p>
<p>3、<a href="https://learnmoderncpp.com/" target="_blank" rel="noreferrer">学习现代 C++</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122701.webp" alt="" loading="lazy"></p>
<p>一个讲解 C++ 基础知识的自学教程。</p>
<p>4、<a href="https://www.virustotal.com/gui/home/upload" target="_blank" rel="noreferrer">Virustotal</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202304/bg2023042003.webp" alt="" loading="lazy"></p>
<p>软件病毒检测引擎，可以上传文件进行扫描，也可以指定需要扫描的文件或网址。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://rarehistoricalphotos.com/bathysphere-old-photos/" target="_blank" rel="noreferrer">世界第一艘深海潜水器</a></p>
<p>1925年，美国博物学家威廉·毕比（William Beebe）提出想造一种深海潜水器。当时，潜艇的最大下潜深度只有117米，而且没有窗口可以观察外部。</p>
<p>威廉·毕比设计的潜水器为球形，因为球形最抗压，由铸铁制造，里面只能待一个人。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100810.webp" alt="" loading="lazy"></p>
<p>潜水器的后端是一个透明的入舱口，采用螺栓固定，只能从外部打开，内部无法打开。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100811.webp" alt="" loading="lazy"></p>
<p>前端是三个窗口，由76毫米厚的石英制成，这是当时最坚固的透明材料。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100812.webp" alt="" loading="lazy"></p>
<p>潜水器内部由高压气瓶提供氧气，采用钠钙和氯化钙吸收二氧化碳和水分。</p>
<p>1930年6月11日，它第一次下水，达到了400米深度，1934年达到了900米的深度。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100813.webp" alt="" loading="lazy"></p>
<p>此后，威廉·毕比停止使用这个潜水器了，因为他觉得已经达到了观测海底生物的目的。</p>
<p>而且，它不是很安全。每次下水，它必须系着钢缆，要靠钢缆拉上来。万一钢缆在压力下出现问题，或者钩子断了，潜水器里面的人必死无疑。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100814.webp" alt="" loading="lazy"></p>
<p>现在，这个潜水器的复制品，陈列在美国华盛顿特区的国家地理博物馆。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100809.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://profoto.com/int/profoto-stories/albert-watson-steve-jobs" target="_blank" rel="noreferrer">乔布斯的遗照</a></p>
<p>苹果创始人乔布斯的遗照是如何拍摄的？</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101501.webp" alt="" loading="lazy"></p>
<p>2011年10月5日，史蒂夫·乔布斯去世，苹果网站用苏格兰摄影师艾伯特·沃森 (Albert Watson) 在2006年拍摄的这张照片来纪念他。</p>
<p>许多人知道，乔布斯并不太喜欢被人拍摄，这对摄影师是一种挑战。</p>
<p>拍摄当日，摄影师被告知拍摄时间只有一小时，然而他却胸有成竹地说，只要三十分钟便能完成。</p>
<p>艾伯特·沃森建议史蒂夫·乔布斯稍微前倾，说道：“想象一下，桌子对面有四五个人不同意你的观点，但你知道自己是对的。”</p>
<p>Steve Jobs 凝视着镜头，眼神十分坚定，给人一种充满信念与智慧的感觉。这就是这幅肖像照的创作过程。</p>
<p>离开时，史蒂夫·乔布斯看了一眼照片，问他是否可以拥有它，并说这“也许是我拍过的最好的照片”。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101502.webp" alt="" loading="lazy"></p>
<p>五年后，艾伯特·沃森接到苹果公司的电话，问他是否仍保留那张乔布斯的照片。他当时感到十分惊讶，同时意识到事情的紧迫性，随即找到照片并发送给苹果公司。</p>
<p>当天晚上，苹果在官网宣布乔布斯去世的消息，并附上艾伯特·沃森拍摄他的肖像，这张照片在网站上刊登了一个月，之后也成为乔布斯传记的封面，成为21世纪最广为人知的人像照片之一。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>以后不会存在“程序员”这种职业了，只要会说话，人人都具备程序员的能力。未来的编程语言只会剩下两种，一种叫做英文，一种叫做中文。</p>
<p>-- <a href="https://finance.sina.com.cn/jjxw/2024-03-10/doc-inamvkcs5017643.shtml" target="_blank" rel="noreferrer">李彦宏</a>，百度董事长</p>
<p>2、</p>
<p>你无事可做时，未来看起来就会让人灰心丧气。我早已放弃了为人生寻找某种意义之类的事情，但我确实尝试寻找一些有趣的事情来做。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=38754757" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>3、</p>
<p>电影《奥本海默》之中，奥本海默在黑板上写方程式，解释核裂变。这个方程式在物理上是完全正确的。</p>
<p>大多数观众不会意识到这一点，但这让我这个物理学家感觉很好，黑板上有正确的方程！</p>
<p>-- <a href="https://www.nature.com/articles/d41586-024-00715-3?utm_source=join1440&amp;utm_medium=email" target="_blank" rel="noreferrer">电影《奥本海默》的物理学顾问</a></p>
<p>4、</p>
<p>幸福的三大要素是：有要做的事（something to do）、有要爱的人（someone to love）、有寄予希望的东西（something to hope for）。</p>
<p>-- <a href="https://www.forbes.com/quotes/252/" target="_blank" rel="noreferrer">亚历山大·查默斯</a>，19世纪美国著名医生</p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/03/weekly-issue-246.html" target="_blank" rel="noreferrer">永不丢失的网络身份</a>（2023 #246）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/02/weekly-issue-196.html" target="_blank" rel="noreferrer">掌机的未来</a>（2022 #196）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/02/weekly-issue-146.html" target="_blank" rel="noreferrer">网课应该怎么上</a>（2021 #146）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/02/weekly-issue-96.html" target="_blank" rel="noreferrer">在线教育不等于录制视频</a>（2020 #96）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202403/bg2024031203.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 292 期）：所有代码都是技术债]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-292</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-292</guid>
            <pubDate>Fri, 08 Mar 2024 16:17:37 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
意大利佛罗伦萨新机]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-292-期-所有代码都是技术债" tabindex="-1">科技爱好者周刊（第 292 期）：所有代码都是技术债 <a class="header-anchor" href="#科技爱好者周刊-第-292-期-所有代码都是技术债" aria-label="Permalink to &quot;科技爱好者周刊（第 292 期）：所有代码都是技术债&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4075" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030705.webp" alt="" loading="lazy"></p>
<p>意大利佛罗伦萨新机场，宣布了设计方案。候机楼顶部将有一个7.7公顷的葡萄种植园，用来酿造当地著名的葡萄酒。（<a href="https://www.euronews.com/travel/2024/02/14/wine-meets-travel-florences-new-airport-will-have-a-vineyard-on-its-roof" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="所有代码都是技术债" tabindex="-1">所有代码都是技术债 <a class="header-anchor" href="#所有代码都是技术债" aria-label="Permalink to &quot;所有代码都是技术债&quot;">&ZeroWidthSpace;</a></h2>
<p>代码是公司的资产，公司总是鼓励大家多写代码。但是，很多人（尤其是管理层）没有意识到，<strong>代码也是负债</strong>。</p>
<p>代码越多，债越多，这就是程序员常说的“技术债”。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030702.webp" alt="" loading="lazy"></p>
<p>今天我想谈谈，什么是“技术债”？为什么你拥有的代码太多，不是一件好事。</p>
<p>“技术债”（technical debt）源自著名程序员沃德·坎宁安（Ward Cunningham）的<a href="https://queue.acm.org/detail.cfm?id=2168798" target="_blank" rel="noreferrer">一篇文章</a>。他写了一句话：“<strong>交付代码就像负债累累</strong>。”</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030703.webp" alt="" loading="lazy"></p>
<p>你的代码一旦进入生产环境，就像背上一笔债务，将来需要不断支付利息，除非代码不再使用。</p>
<p>这个比喻获得了共鸣，<strong>人们把代码带来的负担，称为“技术债”</strong>。</p>
<p>为什么代码好比负债累累？这有两个原因。</p>
<p>第一个原因是，由于各种限制，代码的实现有问题，包含了 Bug，或者选择了有问题的组件，后期需要修改或重写。</p>
<p>第二个原因是，即使代码是完美的，但由于技术进步，它会逐渐腐化过时，后期需要不断维护和更新，这通常比原始开发成本更高。</p>
<p>这意味着，<strong>无论多么小心，上线的代码总是有“技术债”。</strong> 可以这样说，<a href="https://www.tokyodev.com/articles/all-code-is-technical-debt" target="_blank" rel="noreferrer">所有的代码都是技术债</a>。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030704.webp" alt="" loading="lazy"></p>
<p>“技术债”的可怕之处，在于你必须按时偿还，如果拖着不还，它就会像雪球一样越滚越多，维护成本越来越高，直到再也无法维护，只能放弃这段代码。</p>
<p>既然所有代码都是技术债，程序员写代码时，就必须考虑到它的长期成本，尽量减轻自己或别人日后的负担（利息）。</p>
<p>一个基本的事实是 <strong>代码越少，技术债越小；没有代码，就没有技术债</strong>。从这个角度看，软件开发的正确做法是下面两点。</p>
<p>（1）冗余的代码都要删除。</p>
<p>（2）只实现那些必须实现的功能，除非绝对必要，不要引入新功能。新功能必然带来新的代码，而且新功能一旦添加，就很难废除，总是会保留下来。</p>
<h2 id="葫芦-ai" tabindex="-1">葫芦 AI <a class="header-anchor" href="#葫芦-ai" aria-label="Permalink to &quot;葫芦 AI&quot;">&ZeroWidthSpace;</a></h2>
<p>主流的 AI 模型，目前都是收费制。如果同时使用多个模型，每月是一笔不小的费用，而且过程很麻烦。</p>
<blockquote>
<ul>
<li>GPT-4：20美元/月</li>
<li>文心一言：49.9元人民币/月</li>
<li>Midjourney：10美元/月</li>
<li>DALL-E：每张图片0.02美元</li>
</ul>
</blockquote>
<p>国内新出的“葫芦 AI”（HuLu AI），尝试解决这个问题。<strong>它在同一个界面，提供上面四个模型的访问</strong>，相当于“四合一”的国内镜像。</p>
<p>这个服务刚刚推出，目前处在推广期，优惠力度很大，<strong>只要298元，就可以永久无限量使用</strong>，免除逐一访问 GPT4 / 文心一言 / Midjourney / DALL-E 的麻烦，而且访问速度快。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030706.webp" alt="" loading="lazy"></p>
<p>葫芦 AI 希望通过周刊，向国内的开发者介绍自己。推广期结束后，他们将恢复原价498元。</p>
<p>它有试用点数，只要扫描上方海报的二维码，就可以<strong>免费试用</strong>。大家觉得效果满意，再考虑付费。</p>
<p>如果你对 AI 还不熟悉，葫芦 AI 还免费赠送学习资料。扫描<u>上方二维码</u>时，微信添加助理，就可以领取 <strong>【Sora 入门手册】</strong> + <strong>【ChatGPT 提示词大全】</strong> + <strong>【AI 变现案例实战手册】</strong> 的 AI 资料包。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://shkspr.mobi/blog/2023/12/usb-c-cures-mosquito-bites/" target="_blank" rel="noreferrer">USB 止痒器</a></p>
<p>市场上出现了一种奇特的 USB 设备，当你被蚊虫叮咬后，它可以用来止痒。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121911.webp" alt="" loading="lazy"></p>
<p>你把它插入手机的 USB-C 口，然后用 App 可以控制它的发热。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121912.webp" alt="" loading="lazy"></p>
<p>当它发热以后，将其贴在被咬处，等同于热敷，很快就不痒了。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121910.webp" alt="" loading="lazy"></p>
<p>这么一个小玩意，在亚马逊的售价居然为30英镑（270元人民币）。</p>
<p>2、<a href="https://techxplore.com/news/2024-01-nasa-lockheed-martin-reveal-quiet.html" target="_blank" rel="noreferrer">无音爆的超音速客机</a></p>
<p>目前，世界上没有超音速客机，因为超音速飞行会产生音爆，影响城市居民的生活。</p>
<p>美国宇航局正在开发一种没有音爆的超音速客机，并且已经生产出了一架原型机。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011704.webp" alt="" loading="lazy"></p>
<p>这架飞机长约30米，细长的圆锥形机头几乎占其整架飞机的三分之一。据说这种结构可以消除导致音爆的冲击波。</p>
<p>由于它的机头太长，驾驶室几乎位于整机二分之一的位置。这样的超音速飞机即使没有音爆，也载不了多少乘客吧。</p>
<p>3、<a href="https://newatlas.com/energy/touchwind-floating-wind-turbine/" target="_blank" rel="noreferrer">单叶片风力发电机</a></p>
<p>传统的风力发电机有三个叶片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091702.webp" alt="" loading="lazy"></p>
<p>一家荷兰公司发明了单叶片的风力发电机。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091703.webp" alt="" loading="lazy"></p>
<p>它装在浮标上面，水底下是一个大桶，通过铁链固定在海床上。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091704.webp" alt="" loading="lazy"></p>
<p>因为它是浮动的，根据风力和风向的不同，它跟海平面的角度也在随时发生变化。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091705.webp" alt="" loading="lazy"></p>
<p>它的优点主要是，制造和安装的成本低。目前处于测试阶段，顺利的话将会大规模部署。</p>
<p>4、<a href="https://www.thedrive.com/news/future-fords-could-repossess-themselves-and-drive-away-if-you-miss-payments" target="_blank" rel="noreferrer">车贷防拖欠专利</a></p>
<p>汽车贷款逾期不还，怎么办？福特汽车申请了一项专利，专门对付不还车贷的人。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101811.webp" alt="" loading="lazy"></p>
<p>在贷款偿还期前后，车辆会发出多次付款提醒。如果置之不理，车辆就会开始失去一些功能，比如空调、GPS、车窗控制等等。</p>
<p>每当车主出现在车内时，车辆就发出语音提醒，要你还款。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101812.webp" alt="" loading="lazy"></p>
<p>如果车主还是不还车贷，这个专利还有一个终极大招：车辆会自动开回停车场或者拖车点，让福特公司拖走回收。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://finance.sina.com.cn/stock/usstock/c/2024-03-06/doc-inamkuik5589602.shtml" target="_blank" rel="noreferrer">OpenAI 回应马斯克的长文</a>（中文）</p>
<p>马斯克<a href="https://finance.sina.cn/2024-03-01/detail-inakvvhe8160978.d.html" target="_blank" rel="noreferrer">起诉 OpenAI</a>，称后者违背开源承诺，成为微软的盈利性子公司。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030708.webp" alt="" loading="lazy"></p>
<p>这篇是 OpenAI 长篇回应的中文翻译（<a href="https://openai.com/blog/openai-elon-musk" target="_blank" rel="noreferrer">英语原文</a>），透露了很多内幕。主要内容是 AI 需要大量算力和资金，所以不得不成立盈利性部门，马斯克当年对此知情，并表示支持。</p>
<p>2、<a href="https://wallstreetcn.com/articles/3709779" target="_blank" rel="noreferrer">Perplexity 会是“搜索的未来”吗？</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030607.webp" alt="" loading="lazy"></p>
<p>英伟达 CEO 黄仁勋向媒体透露，他每天都使用 AI 工具 Perplexity 进行搜索。本文介绍这个对话式搜索引擎。</p>
<p>3、<a href="https://mp.weixin.qq.com/s/B7Z0ROkiBqqxVKkLNR9BxQ" target="_blank" rel="noreferrer">入行 15 年，我还是觉得编程很难</a>（中文）</p>
<p>腾讯技术专家对其15年程序人生的思考，总结了8点经验看法。</p>
<p>4、<a href="https://juejin.cn/post/7341593721100451880" target="_blank" rel="noreferrer">100万级安装量的开源作品，一年有多少打赏收入？</a>（中文）</p>
<p>作者在自己的开源作品里面，放了一个赞赏码，一年带来330元的收入。（<a href="https://github.com/ruanyf/weekly/issues/4092" target="_blank" rel="noreferrer">@xxxily</a> 投稿）</p>
<p>5、<a href="https://webkit.org/blog/15054/an-html-switch-control/" target="_blank" rel="noreferrer">HTML 的 Switch 控件</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022915.webp" alt="" loading="lazy"></p>
<p>Safari 17.4 引入了一个新的表单控件“滑块开关”（switch），从而将 iPhone 的这个控件带入了网页。</p>
<p>6、<a href="https://aptabase.com/blog/why-chose-to-build-on-tauri-instead-electron" target="_blank" rel="noreferrer">为什么我选择 Tauri 而不是 Electron</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111608.webp" alt="" loading="lazy"></p>
<p>作者本来使用 Electron 开发跨平台桌面应用，后来改成了 Tauri。本文讲述了原因，以及他的感受。</p>
<p>7、<a href="https://clagnut.com/blog/2424" target="_blank" rel="noreferrer">text-wrap 的换行控制</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100516.webp" alt="" loading="lazy"></p>
<p>长文本的自动换行，由 CSS 的 text-wrap 属性控制。本文讨论如何使用这个属性，让标题产生更美观的自动换行。</p>
<p>8、<a href="https://dotat.at/@/2023-05-26-whence-time.html" target="_blank" rel="noreferrer">计算机从哪里获取时间？</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100607.webp" alt="" loading="lazy"></p>
<p>计算机从 NTP（时间服务器）获取当前时间，但是 NTP 的时间又从何而来？本文图文形式地介绍人类如何确定时间。</p>
<p>9、<a href="https://james.darpinian.com/blog/safari-on-windows" target="_blank" rel="noreferrer">如何在 Windows 上测试 Safari</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100808.webp" alt="" loading="lazy"></p>
<p>苹果的 Safari 浏览器现在没有 Windows 版，本文教你一种方法，依然可以在 Windows 上测试这个浏览器。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://github.com/ente-io/ente" target="_blank" rel="noreferrer">Ente</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030301.webp" alt="" loading="lazy"></p>
<p>一个云相册软件，Google Photos 和 iCloud Photos 的替代品，以前是闭源产品，最近刚刚开源。</p>
<p>它的主要特点是提供端对端加密。其他的云相册软件，还有 <a href="https://immich.app/" target="_blank" rel="noreferrer">Immich</a> 和 <a href="https://github.com/photoprism/photoprism" target="_blank" rel="noreferrer">PhotoPrism</a>。</p>
<p>2、<a href="https://earthly.dev/" target="_blank" rel="noreferrer">Earthly</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202207/bg2022072502.webp" alt="" loading="lazy"></p>
<p>一个开源的 CI/CD 框架，可以在本地架设自动构建服务。</p>
<p>3、<a href="https://vikunja.io/" target="_blank" rel="noreferrer">Vikunja</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120707.webp" alt="" loading="lazy"></p>
<p>一个开源的代办事项（to-do）App，提供多种视图，有 Web 版和桌面版，还可以自己架设。</p>
<p>4、<a href="https://miusuncle.github.io/japen/" target="_blank" rel="noreferrer">日语短文排版小工具</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030202.webp" alt="" loading="lazy"></p>
<p>一个在线工具，生成漂亮的日文排版，支持横竖版式、自动假名标注、深浅两种主题、字体配置、高亮、下划线、字体等。（<a href="https://github.com/ruanyf/weekly/issues/4080" target="_blank" rel="noreferrer">@miusuncle</a> 投稿）</p>
<p>5、<a href="https://github.com/Lissy93/web-check" target="_blank" rel="noreferrer">Web-Check</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030401.webp" alt="" loading="lazy"></p>
<p>开源的网站分析工具, 可以分析网站的 IP 信息、SSL 链、DNS 记录、Cookie、域名信息、服务器位置、网站性能等，查看 <a href="https://web-check.xyz/" target="_blank" rel="noreferrer">Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4086" target="_blank" rel="noreferrer">@WFANG12719</a> 投稿）</p>
<p>6、<a href="https://ai-image.tools/home" target="_blank" rel="noreferrer">ImageTools</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030501.webp" alt="" loading="lazy"></p>
<p>AI 一键抠图（去除背景）的在线工具。（<a href="https://github.com/ruanyf/weekly/issues/4087" target="_blank" rel="noreferrer">@handsometong</a> 投稿）</p>
<p>7、<a href="https://zz-plan.com/" target="_blank" rel="noreferrer">zz-plan</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030502.webp" alt="" loading="lazy"></p>
<p>甘特图/横道图的在线制作工具。（<a href="https://github.com/ruanyf/weekly/issues/4088" target="_blank" rel="noreferrer">@lizhichao</a> 投稿）</p>
<p>8、<a href="https://github.com/dockur/windows" target="_blank" rel="noreferrer">Windows in container</a></p>
<p>Docker 容器里运行 Windows 系统，可选择 Win7，Win10，Win11 等，支持自动激活，还支持远程桌面连接。（<a href="https://github.com/ruanyf/weekly/issues/4091" target="_blank" rel="noreferrer">@wrenashe</a> 投稿）</p>
<p>9、<a href="https://github.com/web-infra-dev/rsdoctor" target="_blank" rel="noreferrer">Rsdoctor</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030601.webp" alt="" loading="lazy"></p>
<p>一个 JS 构建器的分析工具，能够查看构建产物的模块关系，并分析构建器对代码的更改，支持 Rspack 和 Webpack。（<a href="https://github.com/ruanyf/weekly/issues/4095" target="_blank" rel="noreferrer">@easy1090</a> 投稿）</p>
<p>10、<a href="https://github.com/zobor/photo-relay" target="_blank" rel="noreferrer">Photo Relay</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030503.webp" alt="" loading="lazy"></p>
<p>一个封面图片制作的在线工具。 <a href="https://www.duelpeak.com/pages/poster" target="_blank" rel="noreferrer">Demo</a>。（<a href="https://github.com/ruanyf/weekly/issues/4094" target="_blank" rel="noreferrer">@zobor</a> 投稿）</p>
<p>11、<a href="https://github.com/hughfenghen/opfs-tools" target="_blank" rel="noreferrer">opfs-tools</a></p>
<p>浏览器私有文件系统 OPFS API 的一个封装库，提供更简单好用的 API。（<a href="https://github.com/ruanyf/weekly/issues/4099" target="_blank" rel="noreferrer">@hughfenghen</a> 投稿）</p>
<p>12、<a href="https://marketplace.visualstudio.com/items?itemName=ast-grep.ast-grep-vscode" target="_blank" rel="noreferrer">ast-grep VSCode</a></p>
<p>一个使用正则表达式进行代码搜索、替换的 VSCode 插件。（<a href="https://github.com/ruanyf/weekly/issues/4100" target="_blank" rel="noreferrer">@HerringtonDarkholme</a> 投稿）</p>
<h2 id="掘金动手实验室" tabindex="-1">掘金动手实验室 <a class="header-anchor" href="#掘金动手实验室" aria-label="Permalink to &quot;掘金动手实验室&quot;">&ZeroWidthSpace;</a></h2>
<p>学习新技术，最重要的就是动手实操，但是这样的机会比较少，你不一定能遇到让你尝试的场景。</p>
<p>本周有一个好消息，<strong>掘金动手实验室（JUEJIN Code Lab）</strong> 正式推出啦！</p>
<p>它是一个<u>新技术实操</u>为主题的系列活动，致力于<u>理论知识转化为实际应用</u>，并让参与者之间进行技术交流。</p>
<p>它由稀土掘金技术社区精心策划，与众多领先的工具和平台厂商携手合作，将涵盖多个技术领域，确保每一位参与者都能找到自己感兴趣的内容。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030707.webp" alt="" loading="lazy"></p>
<p>第一期活动的主题，就是现在最热门的 AI，由稀土掘金社区和扣子（coze.cn）共同发起。<strong>本次活动通过动手实操的方式，让你的想法和创意在 AI 的帮助下落地。</strong></p>
<p>活动分为3月16日的<a href="https://www.bagevent.com/event/8791420?bag_track=ryf" target="_blank" rel="noreferrer">北京场</a>和3月30日的<a href="https://www.bagevent.com/event/8796081?bag_track=ryf" target="_blank" rel="noreferrer">深圳场</a>，地点就在北京/深圳的字节工区。</p>
<p>所有线下参与的同学，除了能够接触 AI 开发以外，还都有机会获得掘金的丰富礼包、以及扣子（coze.cn）的官网推荐、API 内测和官方访谈。</p>
<p>欢迎大家<a href="https://www.bagevent.com/event/8791420?bag_track=ryf" target="_blank" rel="noreferrer">点击链接</a>，或者扫码海报的二维码，报名参与，进行 AI 开发实操。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://yiyibooks.cn/" target="_blank" rel="noreferrer">一译</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030204.webp" alt="" loading="lazy"></p>
<p>用户可以在该网站搜索或者上传 arXiv 论文（暂时只支持 HTML 版本的论文），它会自动机器翻译，提供对照阅读。（<a href="https://github.com/ruanyf/weekly/issues/4083" target="_blank" rel="noreferrer">@yiyibooks</a> 投稿）</p>
<p>2、<a href="https://github.com/hefengbao/jingmo" target="_blank" rel="noreferrer">京墨</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030203.webp" alt="" loading="lazy"></p>
<p>一个开源的安卓 App，随身的古诗文、歇后语、成语、绕口令等等的图书馆。（<a href="https://github.com/ruanyf/weekly/issues/4081" target="_blank" rel="noreferrer">@hefengbao</a> 投稿）</p>
<p>3、<a href="https://github.com/hfg-gmuend/openmoji" target="_blank" rel="noreferrer">OpenMoji</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023091302.webp" alt="" loading="lazy"></p>
<p>这个项目收集各种开源的 Emoji，开发者和设计师可以提交自己的作品。</p>
<p>4、<a href="https://github.com/Haxxnet/Compose-Examples" target="_blank" rel="noreferrer">Docker Compose Examples</a></p>
<p>这个仓库收集各种常用的 Docker Compose 配置文件。</p>
<p>5、<a href="http://www.egr.unlv.edu/~ed/x86.html" target="_blank" rel="noreferrer">学习 x86-64 汇编语言</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122601.webp" alt="" loading="lazy"></p>
<p>一本英文的汇编语言入门教材，以 Ubuntu 平台为例。</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://kottke.org/23/09/artistic-leaf-raking" target="_blank" rel="noreferrer">落叶艺术</a></p>
<p>一个欧洲艺术家在公园里，把落叶整理成各种奇怪的形状，让公园有了更多的趣味。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092809.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092810.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092811.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://www.filfre.net/2023/10/the-last-express/" target="_blank" rel="noreferrer">最后的快车</a></p>
<p>《最后的快车》（The Last Express）是上个世纪末发行的一款电子游戏。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100801.webp" alt="" loading="lazy"></p>
<p>它讲述了一个美国人在1914年，登上最后一班从巴黎到伊斯坦布尔的“东方快车”的故事。</p>
<p>整个游戏场景，都发生在车厢内。下面是真实车厢的历史照片。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100802.webp" alt="" loading="lazy"></p>
<p>游戏设计师根据这张照片，进行建模，以数字形式还原了当时的场景。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100803.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023100804.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.geoffmulgan.com/post/human-chatgpts-and-the-vices-of-foggy-thinking" target="_blank" rel="noreferrer">有些人就像 ChatGPT</a></p>
<p>大家都说 ChatGPT 像人，但是我觉得，还有另一方面，那就是<strong>有些人很像 ChatGPT</strong>，尤其是在学术界。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202403/bg2024030801.webp" alt="" loading="lazy"></p>
<p>ChatGPT 不理解任何材料，但可以利用这些材料，快速找到问题的合理答案。它会综合和模仿，有时表现得非常令人信服，就像某个知识渊博的人在谈论某个主题。</p>
<p>学术界的很多人也是这样，他们很聪明，吸收了说话和构建理论的方法，并且善于听起来令人信服。</p>
<p>但是，如果你问一个探索性的问题，就会发现他们的理解很少，一切侃侃而谈都是表面的，没有深度。这都是模仿而不是真正的思想，他们只是故意让别人觉得似乎有道理。</p>
<p>许多领域的许多人，表现得就像 ChatGPT 的真人版，特别是在那些不做太多实证工作、不涉及对事实或假设进行检验的学科。他们制造的文本越多，就越危险。</p>
<p>这种人有很多明显迹象，比如使用非常笼统的术语，以及听起来巧妙的表述或行话，内容里面很少有事实，例子也很少或者很随意，没有真实的感受，而且通常也不会足够清楚地说出他不同意什么。</p>
<p>我现在意识到，我不理解某人在说什么，有时很可能是他们不知道自己在说什么，表现得像 ChatGPT。</p>
<p>我将其称为“吹泡泡”，即没有实质内容但能让他人信服的说话能力。这是很多大学领导的重要技能。</p>
<p>现在，ChatGPT 向我们展示了尽管不理解，但将大量材料合成为可信的文本流，是完全可以做到的。也许这是不可避免的，但真是一种非常不健康的恶习——人们应该走出去，观察事物，清晰说出自己的真实感受。</p>
<p>我明确意识到，自己更愿意被那些行为不像机器人的人包围，更愿意倾听那些有原创思想的人的声音。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>如果你没有时间集中精力学习新知识，那么就花时间复习已经学过的内容。</p>
<p>-- <a href="https://news.ycombinator.com/item?id=38676257" target="_blank" rel="noreferrer">Hacker News 读者</a></p>
<p>2、</p>
<p>浏览器地址栏兼作搜索输入栏，这一定是史上最值钱的 UI 控件。谷歌为了成为这个控件的默认搜索引擎，每年支付 Firefox 4亿美元，Safari 150-200亿美元。</p>
<p>-- <a href="https://blog.jim-nielsen.com/2023/most-profitable-ui-element-ever/" target="_blank" rel="noreferrer">《史上最值钱的 UI 控件》</a></p>
<p>3、</p>
<p>一切都是模糊的，直至你试图使其精确时，你才会发现，我们日常表达出来的精确与真正的精确相距甚远。以至于当我们说话时，你无法假设这就是对方真正的意思。</p>
<p>-- <a href="https://siddhesh.substack.com/p/projects" target="_blank" rel="noreferrer">伯特兰·罗素</a>（Bertrand Russel），英国哲学家</p>
<p>4、</p>
<p>忒修斯之船（Ship of Theseus）是公元一世纪的希腊作家普鲁塔克提出的哲学问题：如果雅典国王忒修斯的船的木头逐渐被替换，直到所有的木头都不是原来的木头，那这艘船还是原来的那艘船吗？</p>
<p>-- <a href="https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9" target="_blank" rel="noreferrer">维基百科</a></p>
<p>5、</p>
<p>每一个最佳实践的背后都有一个恐怖的经历。</p>
<p>-- <a href="https://buttondown.email/hillelwayne/archive/advice-for-new-software-devs-whove-read-all-those/" target="_blank" rel="noreferrer">Julia Evans</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/03/weekly-issue-245.html" target="_blank" rel="noreferrer">摩天大楼是反人类的</a>（2023 #245）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/02/weekly-issue-195.html" target="_blank" rel="noreferrer">你做过不在乎结果的项目吗？</a>（2022 #195）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/02/weekly-issue-145.html" target="_blank" rel="noreferrer">大家不出门，经济怎么办？</a>（2021 #145）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/02/weekly-issue-95.html" target="_blank" rel="noreferrer">远程办公暴露冗余岗位</a>（2020 #95）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202403/bg2024030705.webp" length="0" type="image/webp"/>
        </item>
        <item>
            <title><![CDATA[亲密关系]]></title>
            <link>https://bayi-95.eu.org/pages/idea/亲密关系</link>
            <guid>https://bayi-95.eu.org/pages/idea/亲密关系</guid>
            <pubDate>Tue, 05 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[主要讨论了亲密关系的特征和如何培养健康的亲密关系，并给出了两点处理亲密关系的建议。]]></description>
            <content:encoded><![CDATA[<h1 id="亲密关系" tabindex="-1">亲密关系 <a class="header-anchor" href="#亲密关系" aria-label="Permalink to &quot;亲密关系&quot;">&ZeroWidthSpace;</a></h1>
<p>往往有三个特征：<strong>开放和真诚</strong>，<strong>关心和体贴</strong>，<strong>安全感和信任</strong>。</p>
<p><strong>适度依赖</strong>。</p>
<p>它是这样一种能力，能让你融合亲密和自主，在<strong>依靠他人</strong>的同时仍保有强大的<strong>自我意识</strong>，并且需要时乐于请求别人的帮助，而不觉得自责。</p>
<p>大家可以观察一下，那些在亲密关系和人际关系中获得幸福的，往往是会依赖的人。他们知道，与这个世界联结，与亲密的人联结，不会受到伤害，反而会获得更多力量。</p>
<p>这本书《关系：适度依赖让我们走得更近》，想给大家两点处理亲密关系的建议：</p>
<p> </p>
<p>首先，试着放下心中的戒备，在条件合适时，<strong>学着去依赖</strong>。</p>
<p>依赖的好处，是给了我们一个可以喘气的机会，让我们感受到自己原来是<strong>值得被爱的</strong>。</p>
<p>佳佳在明白自己为什么不肯依赖男友的原因后，试着做出了改变。</p>
<p>她会在加班后打电话告诉男友：今天你来接我下班吧，再帮我买一份蛋挞和薯条。</p>
<p>主动了几次之后，她发现和男友之间的感情变得更加紧密了，因为男友感受到在关系中自己是<strong>被需要的</strong>，知道了佳佳只是不会表达爱。</p>
<p>佳佳也明白了，自己可以和男友提需求，<strong>不用惧怕对方会拒绝</strong>，因为她<strong>值得被人爱</strong>。</p>
<p> </p>
<p>第二条建议是，不要怕对方麻烦或者嫌自己多事，一定要向伴侣<strong>表达</strong>自己内心的<strong>真实想法和需要</strong>，哪怕是<strong>暴露自己的脆弱和不堪</strong>。</p>
<p>无论是友情还是爱情，都是在相互麻烦中提升的。</p>
<p>比如，你可以对伴侣说：我觉得我们这段时间没有出去玩，为了增加亲密，我想和你去一次短途旅行。</p>
<p>你也可以告诉伴侣：我最近工作上遇到了瓶颈，很难受。我特别需要你的安慰和陪伴。</p>
<p>当你将自己内心的真实想法告诉对方时，他在接到反馈后会对你做出回应。比如张开双臂拥抱你，告诉你：不管如何，自己都会支持陪伴你走下去。</p>
<p>在你们<strong>彼此不断表达内心真实想法</strong>时，感情也会越来越深。</p>
<p>这也正是适度依赖的好处，它能打开你们彼此的心扉，去处理感情中的隔阂，也能让你在感情中更加认清自己，增加你和伴侣之间的亲密。</p>
<p>其实，爱情是双向流动的，我爱你是因为我需要你。彼此之间你来我往，关系才会更加融洽。</p>
<p>伴侣不仅仅只是一个合作伙伴，也是你的朋友、爱人和情人。人格独立让我们互相吸引，但适度依赖让我们走向亲密。</p>
<div class="info custom-block"><p class="custom-block-title">英国玄学派诗人约翰·邓恩有一句诗：</p>
<p>没有谁能像一座孤岛，</p>
<p>在大海里独踞，</p>
<p>每个人都像是一块小小的泥土，</p>
<p>连接成整个陆地。</p>
</div>
<p> </p>
<p>我想，亲密关系也是如此。</p>
<p>每次心与心的碰撞，都是感情深处的一次联结。</p>
<p>当知道在这个世界上，你并非一人独处，有人爱着你，你也值得被爱时，还有什么会比这更幸福？</p>
<p>依赖并不是让你依附他人，而是为了让我们更加有效的增加亲密。</p>
<p>人格独立让我们互相吸引，但适度依赖让我们走向亲密。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[情绪价值]]></title>
            <link>https://bayi-95.eu.org/pages/idea/情绪价值</link>
            <guid>https://bayi-95.eu.org/pages/idea/情绪价值</guid>
            <pubDate>Tue, 05 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[情绪价值是一个人在情感、心理和社交层面上对他人产生的影响和价值。情绪价值越高的人，越能给他人带来舒适、愉悦和稳定的情绪，也更容易建立和维护良好的人际关系，获得他人的认可和尊重。]]></description>
            <content:encoded><![CDATA[<h1 id="情绪价值" tabindex="-1">情绪价值 <a class="header-anchor" href="#情绪价值" aria-label="Permalink to &quot;情绪价值&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="情绪价值是什么" tabindex="-1">情绪价值是什么？ <a class="header-anchor" href="#情绪价值是什么" aria-label="Permalink to &quot;情绪价值是什么？&quot;">&ZeroWidthSpace;</a></h2>
<p>情绪价值是一个人在情感、心理和社交层面上对他人产生的影响和价值，具体来说，主要体现在以下方面：</p>
<ol>
<li><strong>情感支持</strong>：包括提供安慰、倾听和理解，以及给予鼓励和正面的反馈。</li>
<li><strong>社交互动</strong>：与他人建立联系、沟通、分享和建立关系，以及为他人提供社交支持和陪伴。</li>
<li><strong>心理成长</strong>：在心理上对另一个人的成长和发展提供的支持，包括提供建议、指导、反馈和建议，以及帮助他人发现和发展自己的潜力。</li>
<li><strong>情绪调节</strong>：对他人的情绪进行调节和稳定，包括提供安慰、支持、理解、关怀和认可，以及帮助他人处理负面情绪和情感问题。</li>
</ol>
<p>情绪价值越高的人，越能给他人带来舒适、愉悦和稳定的情绪，也更容易建立和维护良好的人际关系，获得他人的认可和尊重。</p>
<h2 id="为什么需要情绪价值" tabindex="-1">为什么需要情绪价值？ <a class="header-anchor" href="#为什么需要情绪价值" aria-label="Permalink to &quot;为什么需要情绪价值？&quot;">&ZeroWidthSpace;</a></h2>
<p>情绪价值在人际交往和日常生活中扮演着至关重要的角色，以下是为什么需要情绪价值的几个原因：</p>
<ol>
<li><strong>情感连接与共鸣</strong>：情绪价值能够帮助人们建立深厚的情感连接和共鸣。当我们能够理解和回应他人的情绪时，我们会与他人建立更紧密的联系，并增强彼此的信任感。这种情感连接有助于建立稳固的人际关系。</li>
<li><strong>心理健康与幸福感</strong>：情绪价值对于个人的心理健康和幸福感至关重要。当我们能够表达和处理自己的情绪时，我们更有可能保持积极的心态，更好地应对挑战和压力。此外，从他人那里获得情感支持也可以增强我们的自尊和幸福感。</li>
<li><strong>有效沟通与解决问题</strong>：情绪价值有助于促进有效沟通，使我们能够更好地理解和表达自己的需求和感受。这有助于减少误解和冲突，并促进问题的妥善解决。在团队或家庭环境中，情绪价值的体现可以促进成员之间的相互理解和合作。</li>
<li><strong>情感调节与成长</strong>：情绪价值可以帮助我们调节情绪，保持稳定的心态。同时，通过他人的情感支持和指导，我们可以获得成长和进步的机会，发掘自己的潜力和实现个人目标。</li>
<li><strong>社会支持与互助</strong>：在社会中，情绪价值体现了人与人之间的互助和支持。当我们面临困难或挑战时，他人的情感支持和鼓励可以为我们提供力量，帮助我们克服困难并取得成功。</li>
</ol>
<h2 id="怎么做提升自己的情绪价值-比如-约会、相亲" tabindex="-1">怎么做提升自己的情绪价值？比如：约会、相亲 <a class="header-anchor" href="#怎么做提升自己的情绪价值-比如-约会、相亲" aria-label="Permalink to &quot;怎么做提升自己的情绪价值？比如：约会、相亲&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>积极，沟通，反馈，互动，推进</li>
<li>聊天有自信</li>
<li>想问问题时，先表达感受或评价在问</li>
<li>有主见，去带领</li>
<li>不正面回答，迂回回答，歪曲话意 = 幽默</li>
<li>点到为止，是暧昧</li>
<li>约会：情绪感染、掌控约会节奏，把握信号勇敢推进关系</li>
<li>为了交朋友去相亲，陌生人，聊当下的状态和感受，第一次约会去吃吃，玩玩，逛逛，多交流、多互动</li>
<li>情绪吸引力，各种各样情绪产生，情感需求</li>
<li>跳出常规思维，会带来意想不到的情绪价值</li>
<li>不好接的话题，转换下</li>
<li>收放自如，拉扯情绪</li>
<li>不回答问题，去感受情绪</li>
<li>把女生带入自己的话题，然后表达感受</li>
<li>把话题带向，我，你，去聊感受</li>
<li>情绪互动，感知对方情绪，继而回应对方情绪，再而配合对方的默契</li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[科技爱好者周刊（第 291 期）：AI 没有护城河]]></title>
            <link>https://bayi-95.eu.org/pages/weekly/issue-291</link>
            <guid>https://bayi-95.eu.org/pages/weekly/issue-291</guid>
            <pubDate>Fri, 01 Mar 2024 16:17:50 GMT</pubDate>
            <description><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
 封面图
2022年完工的宁]]></description>
            <content:encoded><![CDATA[<h1 id="科技爱好者周刊-第-291-期-ai-没有护城河" tabindex="-1">科技爱好者周刊（第 291 期）：AI 没有护城河 <a class="header-anchor" href="#科技爱好者周刊-第-291-期-ai-没有护城河" aria-label="Permalink to &quot;科技爱好者周刊（第 291 期）：AI 没有护城河&quot;">&ZeroWidthSpace;</a></h1>
<p>这里记录每周值得分享的科技内容，周五发布。</p>
<p>本杂志<a href="https://github.com/ruanyf/weekly" target="_blank" rel="noreferrer">开源</a>，欢迎<a href="https://github.com/ruanyf/weekly/issues" target="_blank" rel="noreferrer">投稿</a>。另有<a href="https://github.com/ruanyf/weekly/issues/4075" target="_blank" rel="noreferrer">《谁在招人》</a>服务，发布程序员招聘信息。合作请<a href="mailto:yifeng.ruan@gmail.com" target="_blank" rel="noreferrer">邮件联系</a>（yifeng.ruan@gmail.com）。</p>
<h2 id="封面图" tabindex="-1">封面图 <a class="header-anchor" href="#封面图" aria-label="Permalink to &quot;封面图&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022901.webp" alt="" loading="lazy"></p>
<p>2022年完工的宁波惠贞高级中学，将学校与公园融为一体，在体育场看台上方，设计了一个几层楼高的开放式空间。（<a href="https://www.azut.cn/product/showproduct.php?id=451" target="_blank" rel="noreferrer">via</a>）</p>
<h2 id="ai-没有护城河" tabindex="-1">AI 没有护城河 <a class="header-anchor" href="#ai-没有护城河" aria-label="Permalink to &quot;AI 没有护城河&quot;">&ZeroWidthSpace;</a></h2>
<p>上周，魅族手机<a href="https://www.antutu.com/doc/131018.htm" target="_blank" rel="noreferrer">突然宣布</a>，停止传统的智能手机新项目，All in AI。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022902.webp" alt="" loading="lazy"></p>
<p>魅族董事长沈子瑜<a href="https://www.36kr.com/p/2665449485379335" target="_blank" rel="noreferrer">公开说</a>，“给魅族的智能手机时代一个完美的句号”，以后推出的将全部是 AI 设备。</p>
<p>看上去，魅族觉得，AI 比手机更有前途，所以决定停止老本行，改做 AI 设备。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022904.webp" alt="" loading="lazy"></p>
<p>（图片说明：最新的“魅族 21 PRO”手机，大概没有下一代了。）</p>
<p>最近，AI 如日中天，动心的企业恐怕不在少数，大家都想趁早加入，分一杯羹。</p>
<p>但是，我想泼一点冷水。AI 更有前途是不假，但是<strong>改做 AI 真的更容易活下去吗</strong>？</p>
<p>去年上半年，一份谷歌内部报告泄漏，据说是某个研究员写给谷歌高管的，看上去可信度很高。</p>
<p>当时，谷歌内部正在讨论，如何应对 OpenAI 公司的 ChatGPT。这个研究员提出自己的看法，题目就叫做<a href="https://www.semianalysis.com/p/google-we-have-no-moat-and-neither" target="_blank" rel="noreferrer">《AI 没有护城河》</a>（<a href="https://juejin.cn/post/7229593695653314597" target="_blank" rel="noreferrer">中文译文</a>）。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022905.webp" alt="" loading="lazy"></p>
<p>他的核心观点是，<strong>即使谷歌全力投入，可能也赢不了这场 AI 竞赛</strong>。不仅谷歌赢不了，OpenAI 也赢不了。</p>
<p>原因倒不是谷歌的能力不行，而是 AI 行业有一些特点，导致这是一个完全竞争行业，“没有护城河”，想要获得领先优势和垄断利润，极其困难。</p>
<p><strong>（1）生成式 AI 的核心技术是开源的，任何人都可以获取。</strong></p>
<p>某些公司可能有独家技术，但不是关键部分。AI 的架构和原理都是公开的，不同的只是各家的实现。</p>
<p>网上有 AI 的开源模型，功能越来越强。只要按照教程操作，即使是家用电脑，也能很快架设一个可用的 AI 服务。</p>
<p><strong>（2）AI 模型的替代性很强。</strong></p>
<p>各公司的模型有强有弱，但是核心功能都是类似的，很容易被替代。模型之间的差异，目前来看不是决定性的。</p>
<p>一家公司推出的新功能，其他公司很快就能赶上。</p>
<p><strong>（3）AI 的核心竞争力在于算力和训练语料。</strong></p>
<p>谁的算力更多，训练语料更丰富，谁的模型就表现更好。</p>
<p>算力依赖于 GPU 和机房规模，训练语料需要自己收集。说到底，两者都取决于经济实力。</p>
<p>另外，训练材料不存在版权问题，大家都能用。欧美的判例目前是，只要生成结果不构成复制，就没有侵权。也就是说，可以自由使用版权材料进行训练，只要不生成一模一样的结果。</p>
<p><strong>（4）AI 的研究人员是流动的。</strong></p>
<p>AI 科学家跳槽很常见。另外，大部分 AI 研究人员来自学术界，没有竞业问题，可以自由发表成果。</p>
<p><strong>综上所述，AI 行业的各个方面都没有护城河，最后活下来的公司，一定是资源最多的公司</strong>。</p>
<p>这就是为什么美国股市这一轮 <a href="https://m.thepaper.cn/newsDetail_forward_26394543" target="_blank" rel="noreferrer">AI 概念的上涨</a>，主要涨的是那七家最大的 IT 公司的原因。</p>
<p>雇佣更多 AI 工程师、收集更大的语料集、支付更多训练费用，才能成为行业赢家。但问题是，别人只要钱包够深，就有机会超过你。</p>
<p>所以，那位研究员才会说，谷歌 AI 获得领先会很困难。</p>
<p>我觉得，他的分析有道理。既然谷歌都没获胜的把握，更不要说那些匆忙入局的小公司了。</p>
<p>上面的分析针对 AI 软件，不针对 AI 硬件。但是，AI 硬件也很难，因为核心技术都掌握在 Nvidia 手中，普通的创业公司恐怕只能做一些外围设备或者应用设备，那就跟软件创业区别不大了。</p>
<p>最后，如果以后看到某家公司声明“All-in AI”，我们就祝福他好运，希望他的 AI 生涯会比老本行，更成功一些。</p>
<h2 id="科技动态" tabindex="-1">科技动态 <a class="header-anchor" href="#科技动态" aria-label="Permalink to &quot;科技动态&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://mossandfog.com/pool-is-a-huge-floating-swim-destination-opening-in-new-york-city-this-year/" target="_blank" rel="noreferrer">浮动泳池</a></p>
<p>随着全球气候变暖，游泳运动越来越受欢迎。但是，很多城市没有足够的游泳池，许多人会选择不够卫生和安全的天然河道。</p>
<p>一个美国设计师想出一个聪明的点子：在天然河道里面架设“浮动泳池”。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011008.webp" alt="" loading="lazy"></p>
<p>“浮动泳池”浮在水面上，直接使用河道里面的水，但会过滤和消毒，确保达到卫生标准。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011011.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011009.webp" alt="" loading="lazy"></p>
<p>纽约市已经批准了这个设计，最快的情况下，今年就可以建造出来，并在纽约投入使用。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202401/bg2024011010.webp" alt="" loading="lazy"></p>
<p>2、<strong>食堂的自助付款</strong></p>
<p>最近，我去一个小城市的医院食堂就餐，意外发现那里使用自助付款。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022701.webp" alt="" loading="lazy"></p>
<p>拿取饭菜以后，你把托盘放到自助付款机上，它通过摄像头自动识别出是哪些品种，从而给出价格，你进行扫码付款。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022702.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022703.webp" alt="" loading="lazy"></p>
<p>我还是第一次看到这种设备，太方便了。有了它，就可以建立大型食堂，进一步降低用餐成本。</p>
<p>3、<a href="https://www.science.org/content/article/electrified-cement-could-turn-houses-and-roads-nearly-limitless-batteries" target="_blank" rel="noreferrer">电池水泥</a></p>
<p>家庭如果使用蓄电池储存电力，价格非常昂贵，而且电池很占空间。</p>
<p>麻省理工学院的科学家，想出了一个解决办法，把电池放进了水泥，让电力储存在水泥里面，从而房子本身就能蓄能。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202308/bg2023080209.webp" alt="" loading="lazy"></p>
<p>他们在水泥中掺入导电的炭黑，形成两个导电层，从而组成了一个超级电容，可以快速充电。</p>
<p>研究团队的实验结果是，45立方米的混凝土可以储存10度电，足够普通家庭一天的使用。</p>
<p>4、<a href="https://dynomight.net/tires/" target="_blank" rel="noreferrer">轮胎污染</a></p>
<p>电动车总体上是一种更清洁的交通工具，但是有一个方面，它比燃油车的污染更严重。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022917.webp" alt="" loading="lazy"></p>
<p>那就是轮胎。汽车行驶时，轮胎与地面摩擦产生磨损，（轮胎和路面的）微粒散布在环境中，造成污染。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022704.webp" alt="" loading="lazy"></p>
<p>电动车的重量普遍比同级别燃油车重20%，原因是电池很重。举例来说，特斯拉 Model Y 单单是电池，就重770公斤，相比之下，一辆大众甲壳虫燃油车的整体重量也只有820公斤，而后者的续航还要大于前者。</p>
<p>电动车多出来的重量，会造成轮胎更快的磨损，导致更大的污染。</p>
<p>5、<a href="https://www.dezeen.com/2024/02/28/lenovo-transparent-laptop-thinkbook-mwc/" target="_blank" rel="noreferrer">透明笔记本</a></p>
<p>联想在世界移动通信大会（MCW）上，展示了一款透明笔记本。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022910.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022911.webp" alt="" loading="lazy"></p>
<p>该笔记本有一块透明的 LED 屏幕，灯珠都是透明的。当它发光时，跟普通的 LED 灯珠没有差别，调到最大亮度时，就会变得不透明。</p>
<p>它的特别之处在于，键盘也是一块透明玻璃，没有物理按键，而是投射产生的按键。这样的好处，键盘可以变成一整块的手写板。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022912.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022913.webp" alt="" loading="lazy"></p>
<p>联想表示，这是一款概念产品，不会上市。老实说，透明屏幕可能没什么用，小米早在2020年就推出了透明电视机，后来也不了了之。</p>
<h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://finance.sina.com.cn/jjxw/2024-02-24/doc-inakcmnm4323477.shtml" target="_blank" rel="noreferrer">AI 核心圈的第三位华人</a>（中文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022403.webp" alt="" loading="lazy"></p>
<p>本文介绍超微电脑（Super Micro Computer）创始人梁见后（Charles Liang）。他的公司主要生产 AI 服务器，最近股价暴涨，成为黄仁勋、苏姿丰之后，AI 核心圈的又一风云人物。</p>
<p>2、<a href="https://til.simonwillison.net/macos/sips" target="_blank" rel="noreferrer">MacOS 的图片处理工具 sips</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202311/bg2023111317.webp" alt="" loading="lazy"></p>
<p>很多人不知道，MacOS 自带一个命令行工具 sips，可以进行各种图片处理，还支持 JS 编写的脚本。</p>
<p>3、<a href="https://www.builder.io/blog/structured-clone" target="_blank" rel="noreferrer">structuredClone() 详解</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122202.webp" alt="" loading="lazy"></p>
<p>JS 新增的全局方法<code>structuredClone()</code>可以实现对象的深拷贝。本文详细介绍该方法相比其他方法的优点，以及局限。</p>
<p>4、<a href="https://blog.allegro.tech/2023/11/how-does-btree-make-your-queries-fast.html" target="_blank" rel="noreferrer">B 树原理解释</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122402.webp" alt="" loading="lazy"></p>
<p>数据库使用 B 树作为数据结构，能够加快查询速度，本文介绍它的原理。</p>
<p>5、<a href="https://read.engineerscodex.com/p/how-pinterest-scaled-to-11-million" target="_blank" rel="noreferrer">6个工程师如何支撑每月1100万用户</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122403.webp" alt="" loading="lazy"></p>
<p>2012年，Pinterest 成立不到两年，每月用户就达到了1100万，这时它只有6个工程师。本文介绍 Pinterest 的早期架构，如何用最少的人力支撑大量用户。</p>
<p>6、<a href="https://chuck.is/alias/" target="_blank" rel="noreferrer">一些有用的 Bash 别名</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122613.webp" alt="" loading="lazy"></p>
<p>Bash 的 alias 命令可以为常用操作设置别名，作者介绍自己常用的一些别名，挺有借鉴意义。</p>
<p>7、<a href="https://linuxiac.com/how-to-set-up-web-based-ssh/" target="_blank" rel="noreferrer">如何通过网页完成 SSH 登录</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122404.webp" alt="" loading="lazy"></p>
<p>SSH 登录是命令行下完成的，但是可以让用户在网页上操作命令行窗口，本文介绍详细步骤。</p>
<p>8、<a href="https://notes.alinpanaitiu.com/Costs-of-running-a-macOS-app-studio-business" target="_blank" rel="noreferrer">我开发 macOS 应用的获利</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122502.webp" alt="" loading="lazy"></p>
<p>作者是一个罗马尼亚开发者，依靠出售自己开发的 macOS 应用谋生。本文透露他2023年的运营情况，总收入10万美元，获利近7万美元。</p>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.spacedrive.com/" target="_blank" rel="noreferrer">Spacedrive</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101106.webp" alt="" loading="lazy"></p>
<p>一个跨桌面平台的文件管理器，将不同设备、云端的文件放在一个窗口里面管理。</p>
<p>2、<a href="https://github.com/NoCLin/LightMirrors" target="_blank" rel="noreferrer">LightMirrors</a></p>
<p>一个开源的软件包缓存镜像站工具，用于在内网加速软件包下载和镜像拉取，目前支持 DockerHub、PyPI、PyTorch、NPM 等镜像缓存服务，需要自己架设。（<a href="https://github.com/ruanyf/weekly/issues/4059" target="_blank" rel="noreferrer">@NoCLin</a> 投稿）</p>
<p>3、<a href="https://github.com/yuka-friends/Windrecorder" target="_blank" rel="noreferrer">捕风记录仪</a>（Windrecorder）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022706.webp" alt="" loading="lazy"></p>
<p>一款开源的 Windows 应用，自动在后台以小尺寸记录出现过的所有屏幕内容，并对文本或图像描述进行 OCR，以便查询。（<a href="https://github.com/ruanyf/weekly/issues/4067" target="_blank" rel="noreferrer">@Antonoko</a> 投稿）</p>
<p>4、<a href="https://github.com/liudf0716/apfree-wifidog" target="_blank" rel="noreferrer">ApFree WiFiDog</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022707.webp" alt="" loading="lazy"></p>
<p>路由器操作系统 OpenWRT 的一个模块，用来为自己架设的 WiFi 服务提供认证。（<a href="https://github.com/ruanyf/weekly/issues/4074" target="_blank" rel="noreferrer">@liudf0716</a> 投稿）</p>
<p>5、<a href="https://imagetomusic.top/" target="_blank" rel="noreferrer">AI 图像音乐生成器</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022705.webp" alt="" loading="lazy"></p>
<p>这个 Web 服务可以将上传的图像，转换为一段音乐，适合为图文视频配背景音乐。（<a href="https://github.com/ruanyf/weekly/issues/4055" target="_blank" rel="noreferrer">@lesliele</a> 投稿）</p>
<p>6、<a href="https://github.com/cooderl/wewe-rss" target="_blank" rel="noreferrer">WeWe RSS</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022909.webp" alt="" loading="lazy"></p>
<p>全文订阅微信公众号的一个本地服务，可以生成公众号的 RSS，基于微信读书。（<a href="https://github.com/ruanyf/weekly/issues/4076" target="_blank" rel="noreferrer">@cooderl</a> 投稿）</p>
<p>7、<a href="https://github.com/VikParuchuri/marker" target="_blank" rel="noreferrer">Marker</a></p>
<p>一个命令行工具，将 PDF、EPUB、MOBI 文档转成 Markdown 文件，必要时会进行 OCR（文字识别）。</p>
<p>8、<a href="https://github.com/omnivore-app/omnivore" target="_blank" rel="noreferrer">Omnivore</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120206.webp" alt="" loading="lazy"></p>
<p>一个开源的“稍后阅读”（read-it-later）解决方案，可以收藏网址、RSS 和邮件列表的文章，提供 Web 和手机客户端。</p>
<p>9、<a href="https://kysely.dev/" target="_blank" rel="noreferrer">Kysely</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202310/bg2023101002.webp" alt="" loading="lazy"></p>
<p>一个 TypeScript 的 SQL 查询生成库。</p>
<p>10、<a href="https://blitiri.com.ar/p/chasquid/" target="_blank" rel="noreferrer">chasquid</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120401.webp" alt="" loading="lazy"></p>
<p>一个简单的、主要供个人使用的 SMTP 软件，用来发送电子邮件。</p>
<p>11、<a href="https://tsdiagram.com/" target="_blank" rel="noreferrer">TSDiagram</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120514.webp" alt="" loading="lazy"></p>
<p>一个在线工具，让你用 TypeScript 写类型关系，自动生成图表。</p>
<p>12、<a href="https://how-did-i-get-here.net/" target="_blank" rel="noreferrer">How I get there</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023120603.webp" alt="" loading="lazy"></p>
<p>这个页面可以显示，你的 IP 地址到该网站所经过的路由。</p>
<h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://www.3blue1brown.com/topics/calculus" target="_blank" rel="noreferrer">3Blue1Brown</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023121913.webp" alt="" loading="lazy"></p>
<p>著名数字科普作者 3Blue1Brown 写的微积分系列教程。</p>
<p>2、<a href="https://tsdocs.dev/" target="_blank" rel="noreferrer">TS Docs</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122001.webp" alt="" loading="lazy"></p>
<p>这个网站可以查看 npm 模块的 TS 类型声明。</p>
<p>3、<a href="https://github.com/geerlingguy/ansible-for-devops-manuscript" target="_blank" rel="noreferrer">DevOps 的 Ansible 指南</a>（英文）</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202312/bg2023122008.webp" alt="" loading="lazy"></p>
<p>一本开源的英文电子书，介绍自动化运维工具 Ansible 的基本知识。</p>
<p>4、<a href="https://zhuanlan.zhihu.com/p/637491623" target="_blank" rel="noreferrer">京华老宋体</a></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022916.webp" alt="" loading="lazy"></p>
<p>一款可以免费商用的原创中文字体。（<a href="https://github.com/ruanyf/weekly/issues/4078" target="_blank" rel="noreferrer">@WFANG12719</a> 投稿）</p>
<h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://en.wikipedia.org/wiki/Shukhov_Tower_on_the_Oka_River" target="_blank" rel="noreferrer">双曲面输电塔</a></p>
<p>俄罗斯的舒霍夫塔是世界唯一的斜方格双曲面输电塔。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022103004.webp" alt="" loading="lazy"></p>
<p>它建于1929年，于1989年停止使用，并拆除了其中的一座。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022103005.webp" alt="" loading="lazy"></p>
<p>与直线结构相比，双曲面结构在抵抗外力方面的稳定性更好，常用来支撑大质量的塔型建筑物，同时也很美观。它的缺点是浪费大量空间，空间利用效率低，并且需要更多钢材。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202210/bg2022103006.webp" alt="" loading="lazy"></p>
<p>2、<a href="https://fosstodon.org/@terence/111132852910410221" target="_blank" rel="noreferrer">英国的灯塔</a></p>
<p>下图是英国所有的灯塔，每一个发光的点，就是一个灯塔。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092801.webp" alt="" loading="lazy"></p>
<p>3、<a href="https://twitter.com/DotSledge/status/1706693564267172093" target="_blank" rel="noreferrer">自动变速箱阀体</a></p>
<p>汽车的自动变速箱的最重要组成部分是阀体，它相当于变速箱的“大脑”，控制着各个档位的油路。</p>
<p>阀体内部非常复杂，就像迷宫一样。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092802.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092803.webp" alt="" loading="lazy"></p>
<p>不过，电动汽车没有这种装置，所以将来它应该就会消失。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092804.webp" alt="" loading="lazy"></p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202309/bg2023092805.webp" alt="" loading="lazy"></p>
<h2 id="文摘" tabindex="-1">文摘 <a class="header-anchor" href="#文摘" aria-label="Permalink to &quot;文摘&quot;">&ZeroWidthSpace;</a></h2>
<p>1、<a href="https://martinfowler.com/bliki/ConwaysLaw.html" target="_blank" rel="noreferrer">康威定律</a></p>
<p>几乎所有我喜欢的软件架构师，都认同康威定律（Conway Law），认为这个定律非常重要，足以影响到所有系统。而且，你没法与之抗争，想要抗拒康威定律注定要失败。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022906.webp" alt="" loading="lazy"></p>
<p>康威定律的最好表述是：“<strong>任何系统的构成，都反映了设计这个系统的组织结构。</strong>”</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022908.webp" alt="" loading="lazy"></p>
<p>它的出处是 Melvin Conway 在1968年写的一篇文章。后来，弗雷德·布鲁克斯（Fred Brooks）在著名的《人月神话》（The Mythical Man-Month）引用了这条定律。</p>
<p>Melvin Conway 观察到，<strong>软件系统的架构看起来与构建它的开发团队的组织结构非常相似。</strong></p>
<p>最初的描述是，如果一个团队编写一个编译器，那么它将是一个单通道编译器；但是，如果两个团队共同开发，那么它将是一个双通道编译器。这个描述后来被发现，广泛适用于大量系统。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202402/bg2024022907.webp" alt="" loading="lazy"></p>
<p>正如我的同事 Chris Ford 对我说的：“软件耦合是由人类交流促成的。” 如果我可以轻松与代码作者交谈，那么我就更容易对代码有更深入的了解，因此我的代码更容易耦合到该代码。</p>
<p>应对康威定律的第一步是不要与之抗争。我仍然记得一位技术主管，他刚刚被任命为​​一个大型新项目的架构师，该项目由分布在世界各地不同城市的六个团队组成。“我做出了第一个架构决定”，他告诉我：“就是这个系统将有六个主要的子系统。我不知道它们会是什么子系统，但肯定会有六个。”</p>
<p>为了适应康威定律，现在有一种策略，就是一旦定下软件架构，就相应改变组织结构，让紧密耦合模块的开发者更容易沟通。</p>
<h2 id="言论" tabindex="-1">言论 <a class="header-anchor" href="#言论" aria-label="Permalink to &quot;言论&quot;">&ZeroWidthSpace;</a></h2>
<p>1、</p>
<p>纽约市最古老的脚手架搭建于2002年，当时是为了翻新一栋百年大楼，可是由于各种原因（资金短缺、找不到供应商等等），一直没有完工。直到2023年底，这个搭建了21年的脚手架终于开始拆除了。</p>
<p>-- <a href="https://www.wsj.com/us-news/new-york-city-cant-fix-sidewalk-shed-problem-5f46aef3" target="_blank" rel="noreferrer">《华尔街日报》</a></p>
<p>2、</p>
<p>W3C 规范的数量平均每年增长200个，约400万个单词。</p>
<p>我觉得，这使得构建一个新的浏览器已经不可能，没有人能够把这些规范都从头实现一遍。</p>
<p>现有的浏览器不应该再把重点放在添加新功能了，而应该专注于性能和稳定性的提高。</p>
<p>-- <a href="https://drewdevault.com/2020/03/18/Reckless-limitless-scope.html" target="_blank" rel="noreferrer">《网络浏览器鲁莽的无限范围》</a></p>
<p>3、</p>
<p>人类历史上从未有过如此孤独的时期。在西方各国，独居人数不断增加，创了历史新高。</p>
<p>这在一定程度上是医疗技术延长人类寿命的结果，但这也是自由主义的结果，个人对自己的生活安排有了更多的选择，比如延迟结婚和高离婚率。孤独是个人自由主义不可避免的结果。</p>
<p>-- <a href="https://www.louiseperry.co.uk/p/we-will-all-become-boring" target="_blank" rel="noreferrer">《我们都会变得无聊》</a></p>
<p>4、</p>
<p>互联网购物已经娱乐化了。人们购物不完全是出于生活需要，而是忍不住想做点什么，为了消磨时间。</p>
<p>-- <a href="https://dirt.fyi/article/2023/11/fast-fashion-casino" target="_blank" rel="noreferrer">《快时尚赌场》</a></p>
<h2 id="往年回顾" tabindex="-1">往年回顾 <a class="header-anchor" href="#往年回顾" aria-label="Permalink to &quot;往年回顾&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.ruanyifeng.com/blog/2023/03/weekly-issue-244.html" target="_blank" rel="noreferrer">大数据已死</a>（2023 #244）</p>
<p><a href="https://www.ruanyifeng.com/blog/2022/02/weekly-issue-194.html" target="_blank" rel="noreferrer">悲观者正确，乐观者成功</a>（2022 #194）</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/01/weekly-issue-144.html" target="_blank" rel="noreferrer">提高收入的根本途径</a>（2021 #144）</p>
<p><a href="https://www.ruanyifeng.com/blog/2020/02/weekly-issue-94.html" target="_blank" rel="noreferrer">既懂得制造，又懂得销售</a>（2020 #94）</p>
<p>（完）</p>
]]></content:encoded>
            <enclosure url="https://cdn.beekka.com/blogimg/asset/202402/bg2024022901.webp" length="0" type="image/webp"/>
        </item>
    </channel>
</rss>